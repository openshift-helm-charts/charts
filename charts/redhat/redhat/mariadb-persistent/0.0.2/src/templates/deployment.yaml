apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: "true"
    image.openshift.io/triggers: |-
      [
        {
          "from": {
            "kind": "ImageStreamTag",
            "name": "mariadb:{{ .Values.mariadb_version }}"
          },
          "fieldPath": "spec.template.spec.containers[0].image"
        }
      ]
  labels:
    app.openshift.io/runtime: mariadb
    template: mariadb-persistent-template
  name: {{ .Values.database_service_name }}

spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ .Values.database_service_name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: {{ .Values.database_service_name }}
    spec:
      containers:
      - env:
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: {{ .Values.database_service_name }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: {{ .Values.database_service_name }}
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-root-password
              name: {{ .Values.database_service_name }}
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: {{ .Values.database_service_name }}
        image: "mariadb:{{ .Values.mariadb_version }}"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
          initialDelaySeconds: 30
          timeoutSeconds: 1
        name: mariadb
        ports:
        - containerPort: 3306
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            memory: {{ .Values.memory_limit }}
        volumeMounts:
        - mountPath: /var/lib/mysql/data
          name: {{ .Values.database_service_name }}-data
      volumes:
      - name: {{ .Values.database_service_name }}-data
        persistentVolumeClaim:
          claimName: {{ .Values.database_service_name }}
