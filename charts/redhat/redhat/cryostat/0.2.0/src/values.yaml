## @section Cryostat Container
## @extra core Configuration for the core Cryostat application
core:
  image:
    ## @param core.image.repository Repository for the main Cryostat container image
    repository: "registry.redhat.io/cryostat-tech-preview/cryostat-rhel8"
    ## @param core.image.pullPolicy Image pull policy for the main Cryostat container image
    pullPolicy: IfNotPresent
    ## @param core.image.tag Tag for the main Cryostat container image
    tag: "2.2.0"
  service:
    ## @param core.service.type Type of Service to create for the Cryostat application
    type: ClusterIP
    ## @param core.service.httpPort Port number to expose on the Service for Cryostat's HTTP server
    httpPort: 8181
    ## @param core.service.jmxPort Port number to expose on the Service for remote JMX connections to Cryostat
    jmxPort: 9091
  ## @param core.sslProxied Enables SSL Proxied Environment Variables, useful when you are offloading SSL/TLS at External Loadbalancer instead of Ingress
  sslProxied: false
  ingress:
    ## @param core.ingress.enabled Whether to create an Ingress object for the Cryostat service
    enabled: false
    ## @param core.ingress.className Ingress class name for the Cryostat application Ingress
    className: ""
    ## @param core.ingress.annotations [object] Annotations to apply to the Cryostat application Ingress
    annotations: {}
    ## @param core.ingress.hosts [array] Hosts to create rules for in the Cryostat application Ingress. See: [IngressSpec](https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/#IngressSpec)
    hosts:
      - host: cryostat.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    ## @param core.ingress.tls [array] TLS configuration for the Cryostat application Ingress. See: [IngressSpec](https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/#IngressSpec)
    tls: []
  route:
    ## @param core.route.enabled Whether to create a Route object for the Cryostat service. Available only on OpenShift
    enabled: true
    tls:
      ## @param core.route.tls.enabled Whether to secure the Cryostat application Route with TLS. See: [TLSConfig](https://docs.openshift.com/container-platform/4.10/rest_api/network_apis/route-route-openshift-io-v1.html#spec-tls)
      enabled: true
      ## @param core.route.tls.termination Type of TLS termination to use for the Cryostat application Route. One of: `edge`, `passthrough`, `reencrypt`
      termination: edge
      ## @param core.route.tls.insecureEdgeTerminationPolicy Specify how to handle insecure traffic for the Cryostat application Route. One of: `Allow`, `Disable`, `Redirect`
      insecureEdgeTerminationPolicy: Redirect
      ## @param core.route.tls.key Custom private key to use when securing the Cryostat application Route
      key: ""
      ## @param core.route.tls.certificate Custom certificate to use when securing the Cryostat application Route
      certificate: ""
      ## @param core.route.tls.caCertificate Custom CA certificate to use, if needed to complete the certificate chain, when securing the Cryostat application Route
      caCertificate: ""
      ## @param core.route.tls.destinationCACertificate Provides the contents of the CA certificate of the final destination when using reencrypt termination for the Cryostat application Route
      destinationCACertificate: ""
  ## @param core.resources Resource requests/limits for the Cryostat container. See: [ResourceRequirements](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources)
  resources: {}
  ## @param core.securityContext [object] Security Context for the Cryostat container. Defaults to meet "restricted" [Pod Security Standard](https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted). See: [SecurityContext](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1)
  securityContext:
    ## @skip core.securityContext.allowPrivilegeEscalation
    allowPrivilegeEscalation: false
    ## @skip core.securityContext.capabilities
    capabilities:
      drop:
      - ALL
  ## @param core.databaseSecretName Name of the secret to extract password for credentials database.
  databaseSecretName: ""

## @section Grafana Container
## @extra grafana Configuration for the customized Grafana instance for Cryostat
grafana:
  image:
    ## @param grafana.image.repository Repository for the Grafana container image
    repository: "registry.redhat.io/cryostat-tech-preview/cryostat-grafana-dashboard-rhel8"
    ## @param grafana.image.pullPolicy Image pull policy for the Grafana container image
    pullPolicy: IfNotPresent
    ## @param grafana.image.tag Tag for the Grafana container image
    tag: "2.2.0"
  service:
    ## @param grafana.service.type Type of Service to create for Grafana
    type: ClusterIP
    ## @param grafana.service.port Port number to expose on the Service for Grafana's HTTP server
    port: 3000
  ## @param grafana.sslProxied Enables SSL Proxied Environment Variables, useful when you are offloading SSL/TLS at External Loadbalancer instead of Ingress
  sslProxied: false
  ingress:
    ## @param grafana.ingress.enabled Whether to create an Ingress object for the Grafana service
    enabled: false
    ## @param grafana.ingress.className Ingress class name for the Grafana Ingress
    className: ""
    ## @param grafana.ingress.annotations [object] Annotations to apply to the Grafana Ingress
    annotations: {}
    ## @param grafana.ingress.hosts [array] Hosts to create rules for in the Grafana Ingress. See: [IngressSpec](https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/#IngressSpec)
    hosts:
      - host: cryostat-grafana.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    ## @param grafana.ingress.tls [array] TLS configuration for the Grafana Ingress. See: [IngressSpec](https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/#IngressSpec)
    tls: []
  route:
    ## @param grafana.route.enabled Whether to create a Route object for the Grafana service. Available only on OpenShift
    enabled: true
    tls:
      ## @param grafana.route.tls.enabled Whether to secure the Grafana Route with TLS. See: [TLSConfig](https://docs.openshift.com/container-platform/4.10/rest_api/network_apis/route-route-openshift-io-v1.html#spec-tls)
      enabled: true
      ## @param grafana.route.tls.termination Type of TLS termination to use for the Grafana Route. One of: `edge`, `passthrough`, `reencrypt`
      termination: edge
      ## @param grafana.route.tls.insecureEdgeTerminationPolicy Specify how to handle insecure traffic for the Grafana Route. One of: `Allow`, `Disable`, `Redirect`
      insecureEdgeTerminationPolicy: Redirect
      ## @param grafana.route.tls.key Custom private key to use when securing the Grafana Route
      key: ""
      ## @param grafana.route.tls.certificate Custom certificate to use when securing the Grafana Route
      caCertificate: ""
      ## @param grafana.route.tls.caCertificate Custom CA certificate to use, if needed to complete the certificate chain, when securing the Grafana Route
      certificate: ""
      ## @param grafana.route.tls.destinationCACertificate Provides the contents of the CA certificate of the final destination when using reencrypt termination for the Grafana Route
      destinationCACertificate: ""
  ## @param grafana.resources Resource requests/limits for the Grafana container. See: [ResourceRequirements](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources)
  resources: {}
  ## @param grafana.securityContext [object] Security Context for the Grafana container. Defaults to meet "restricted" [Pod Security Standard](https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted). See: [SecurityContext](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1)
  securityContext:
    ## @skip grafana.securityContext.allowPrivilegeEscalation
    allowPrivilegeEscalation: false
    ## @skip grafana.securityContext.capabilities
    capabilities:
      drop:
      - ALL

## @section JFR Data Source Container
## @extra datasource Configuration for the JFR Data Source component, which translates recording events into a format consumable by Grafana
datasource:
  image:
    ## @param datasource.image.repository Repository for the JFR Data Source container image
    repository: "registry.redhat.io/cryostat-tech-preview/jfr-datasource-rhel8"
    ## @param datasource.image.pullPolicy Image pull policy for the JFR Data Source container image
    pullPolicy: IfNotPresent
    ## @param datasource.image.tag Tag for the JFR Data Source container image
    tag: "2.2.0"
  ## @param datasource.resources Resource requests/limits for the JFR Data Source container. See: [ResourceRequirements](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources)
  resources: {}
  ## @param datasource.securityContext [object] Security Context for the JFR Data Source container. Defaults to meet "restricted" [Pod Security Standard](https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted). See: [SecurityContext](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1)
  securityContext:
    ## @skip datasource.securityContext.allowPrivilegeEscalation
    allowPrivilegeEscalation: false
    ## @skip datasource.securityContext.capabilities
    capabilities:
      drop:
      - ALL

## @section Other Parameters

## @param imagePullSecrets [array] Image pull secrets to be used for the Cryostat deployment
imagePullSecrets: []
## @param nameOverride Overrides the name of this Chart
nameOverride: ""
## @param fullnameOverride Overrides the fully qualified application name of `[release name]-[chart name]`
fullnameOverride: ""

rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  ## @param serviceAccount.create Specifies whether a service account should be created
  create: true
  ## @param serviceAccount.annotations [object] Annotations to add to the service account
  annotations: {}
  ## @param serviceAccount.name The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

## @param podAnnotations [object] Annotations to be applied to the Cryostat Pod
podAnnotations: {}

## @param podSecurityContext [object] Security Context for the Cryostat Pod. Defaults to meet "restricted" [Pod Security Standard](https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted). See: [PodSecurityContext](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context)
podSecurityContext:
  ## @skip podSecurityContext.runAsNonRoot
  runAsNonRoot: true

## @param nodeSelector [object] Node Selector for the Cryostat Pod. See: [NodeSelector](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)
nodeSelector: {}

## @param tolerations [array] Tolerations for the Cryostat Pod. See: [Tolerations](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)
tolerations: []

## @param affinity [object] Affinity for the Cryostat Pod. See: [Affinity](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)
affinity: {}
