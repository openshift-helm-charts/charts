{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "core": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "Repository for the main Cryostat container image",
                            "default": "registry.redhat.io/cryostat/cryostat-rhel9"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Image pull policy for the main Cryostat container image",
                            "default": "IfNotPresent"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Tag for the main Cryostat container image",
                            "default": "4.0.0"
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type of Service to create for the Cryostat application",
                            "default": "ClusterIP"
                        },
                        "httpPort": {
                            "type": "number",
                            "description": "Port number to expose on the Service for Cryostat's HTTP server",
                            "default": 8181
                        }
                    }
                },
                "debug": {
                    "type": "object",
                    "properties": {
                        "log": {
                            "type": "object",
                            "properties": {
                                "level": {
                                    "type": "string",
                                    "description": "Log level for troubleshooting and debugging",
                                    "default": "INFO"
                                }
                            }
                        }
                    }
                },
                "sslProxied": {
                    "type": "boolean",
                    "description": "Enables SSL Proxied Environment Variables, useful when you are offloading SSL/TLS at External Loadbalancer instead of Ingress",
                    "default": false
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Whether to create an Ingress object for the Cryostat service",
                            "default": false
                        },
                        "className": {
                            "type": "string",
                            "description": "Ingress class name for the Cryostat application Ingress",
                            "default": ""
                        },
                        "hosts": {
                            "type": "array",
                            "description": "",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "host": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "paths": {
                                        "type": "array",
                                        "description": "",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": "string",
                                                    "description": ""
                                                },
                                                "pathType": {
                                                    "type": "string",
                                                    "description": ""
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "tls": {
                            "type": "array",
                            "description": "TLS configuration for the Cryostat application Ingress. See: [IngressSpec](https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/#IngressSpec)",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "route": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Whether to create a Route object for the Cryostat service. Available only on OpenShift",
                            "default": true
                        },
                        "tls": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether to secure the Cryostat application Route with TLS. See: [TLSConfig](https://docs.openshift.com/container-platform/4.10/rest_api/network_apis/route-route-openshift-io-v1.html#spec-tls)",
                                    "default": true
                                },
                                "termination": {
                                    "type": "string",
                                    "description": "Type of TLS termination to use for the Cryostat application Route. One of: `edge`, `passthrough`, `reencrypt`",
                                    "default": "edge"
                                },
                                "insecureEdgeTerminationPolicy": {
                                    "type": "string",
                                    "description": "Specify how to handle insecure traffic for the Cryostat application Route. One of: `Allow`, `Disable`, `Redirect`",
                                    "default": "Redirect"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Custom private key to use when securing the Cryostat application Route",
                                    "default": ""
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Custom certificate to use when securing the Cryostat application Route",
                                    "default": ""
                                },
                                "caCertificate": {
                                    "type": "string",
                                    "description": "Custom CA certificate to use, if needed to complete the certificate chain, when securing the Cryostat application Route",
                                    "default": ""
                                },
                                "destinationCACertificate": {
                                    "type": "string",
                                    "description": "Provides the contents of the CA certificate of the final destination when using reencrypt termination for the Cryostat application Route",
                                    "default": ""
                                }
                            }
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "CPU resource request for the Cryostat container. See: [ResourceRequirements](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources)",
                                    "default": "500m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "Memory resource request for the Cryostat container.",
                                    "default": "384Mi"
                                }
                            }
                        }
                    }
                },
                "securityContext": {
                    "type": "object",
                    "properties": {
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "",
                            "default": false
                        }
                    }
                },
                "databaseSecretName": {
                    "type": "string",
                    "description": "Name of the secret containing database keys. This secret must contain a CONNECTION_KEY secret which is the database connection password, and an ENCRYPTION_KEY secret which is the key used to encrypt sensitive data stored within the database, such as the target credentials keyring. It must not be updated across chart upgrades. It is recommended that the secret should be marked as immutable to avoid accidental changes to secret's data. More details: https://kubernetes.io/docs/concepts/configuration/secret/#secret-immutable",
                    "default": ""
                },
                "discovery": {
                    "type": "object",
                    "properties": {
                        "kubernetes": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enables Kubernetes API discovery mechanism",
                                    "default": true
                                },
                                "installNamespaceDisabled": {
                                    "type": "boolean",
                                    "description": "When false and `namespaces` is empty, the Cryostat application will default to discovery targets in the install namespace (i.e. `{{ .Release.Namespace }}`)",
                                    "default": false
                                },
                                "namespaces": {
                                    "type": "array",
                                    "description": "List of namespaces whose workloads the Cryostat application should be permitted to access and profile",
                                    "default": [],
                                    "items": {}
                                },
                                "builtInPortNamesDisabled": {
                                    "type": "boolean",
                                    "description": "When false and `portNames` is empty, the Cryostat application will use the default port name `jfr-jmx` to look for JMX connectable targets.",
                                    "default": false
                                },
                                "portNames": {
                                    "type": "array",
                                    "description": "List of port names that the Cryostat application should look for in order to consider a target as JMX connectable",
                                    "default": [],
                                    "items": {}
                                },
                                "builtInPortNumbersDisabled": {
                                    "type": "boolean",
                                    "description": "When false and `portNumbers` is empty, the Cryostat application will use the default port number `9091` to look for JMX connectable targets.",
                                    "default": false
                                },
                                "portNumbers": {
                                    "type": "array",
                                    "description": "List of port numbers that the Cryostat application should look for in order to consider a target as JMX connectable",
                                    "default": [],
                                    "items": {}
                                }
                            }
                        }
                    }
                },
                "config": {
                    "type": "object",
                    "properties": {
                        "eventTemplates": {
                            "type": "object",
                            "properties": {
                                "configMapNames": {
                                    "type": "array",
                                    "description": "List of ConfigMap names. Each ConfigMap is expected to contain one or more files, which are .jfc (XML) JFR Event Templates, to be mounted to the Cryostat container.",
                                    "default": [],
                                    "items": {}
                                }
                            }
                        },
                        "tlsTruststore": {
                            "type": "object",
                            "properties": {
                                "secretNames": {
                                    "type": "array",
                                    "description": "List of Secret names. Each Secret is expected to contain one or more files, which are TLS certificates which target applications may use for their JMX servers, to be mounted to the Cryostat container for its TLS truststore.",
                                    "default": [],
                                    "items": {}
                                }
                            }
                        }
                    }
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for the Cryostat Pod. See: [Tolerations](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)",
                    "default": [],
                    "items": {}
                }
            }
        },
        "reports": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "Repository for the Report Generator container image",
                            "default": "registry.redhat.io/cryostat/cryostat-reports-rhel9"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Image pull policy for the Report Generator container image",
                            "default": "IfNotPresent"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Tag for the Report Generator image",
                            "default": "4.0.0"
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type of Service to create for the Report Generator Deployment",
                            "default": "ClusterIP"
                        },
                        "httpPort": {
                            "type": "number",
                            "description": "Port number to expose on the Service for the Report Generator Deployment",
                            "default": 10001
                        }
                    }
                },
                "reportsSecretName": {
                    "type": "string",
                    "description": "Name of the secret containing the report generator access keys. This secret must contain a REPORTS_PASS secret which is the secret credential for the report generators. It must not be updated across chart upgrades, or else the connection between Cryostat and report generators will not be able to initialize. It is recommended that the secret should be marked as immutable to avoid accidental changes to secret's data. More details: https://kubernetes.io/docs/concepts/configuration/secret/#secret-immutable",
                    "default": ""
                },
                "securityContext": {
                    "type": "object",
                    "properties": {
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "",
                            "default": false
                        }
                    }
                },
                "debug": {
                    "type": "object",
                    "properties": {
                        "log": {
                            "type": "object",
                            "properties": {
                                "level": {
                                    "type": "string",
                                    "description": "Log level for troubleshooting and debugging",
                                    "default": "INFO"
                                }
                            }
                        }
                    }
                },
                "replicas": {
                    "type": "number",
                    "description": "Number of Report Generator replicas to deploy. If zero, the Deployment and Service will not be created and the main Cryostat container will handle all report generations on its own.",
                    "default": 0
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "CPU resource request for each Pod in the Report Generator Deployment.",
                                    "default": "500m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "Memory resource request for each Pod in the Report Generator Deployment.",
                                    "default": "512Mi"
                                }
                            }
                        }
                    }
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for the Report Generator Pods. See: [Tolerations](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)",
                    "default": [],
                    "items": {}
                }
            }
        },
        "db": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "Repository for the database container image",
                            "default": "registry.redhat.io/cryostat/cryostat-db-rhel9"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Image pull policy for the database container image",
                            "default": "IfNotPresent"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Tag for the database container image",
                            "default": "4.0.0"
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type of Service to create for the database",
                            "default": "ClusterIP"
                        },
                        "port": {
                            "type": "number",
                            "description": "Port number to expose on the Service",
                            "default": 5432
                        }
                    }
                },
                "securityContext": {
                    "type": "object",
                    "properties": {
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "",
                            "default": false
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "CPU resource request for the database container. See: [ResourceRequirements](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources)",
                                    "default": "25m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "Memory resource request for the database container.",
                                    "default": "64Mi"
                                }
                            }
                        }
                    }
                },
                "pvc": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Specify whether to use persistentVolumeClaim (true) or EmptyDir storage (false). This is recommended to be enabled, but the storage size and selector should be chosen carefully first.",
                            "default": false
                        },
                        "storage": {
                            "type": "string",
                            "description": "Storage size to request for the persistentVolumeClaim",
                            "default": "500Mi"
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "Access mode for the persistentVolumeClaim. See: [Access Modes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims)",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for the Database Pod. See: [Tolerations](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)",
                    "default": [],
                    "items": {}
                }
            }
        },
        "storage": {
            "type": "object",
            "properties": {
                "storageSecretName": {
                    "type": "string",
                    "description": "Name of the secret containing the object storage secret access key. This secret must contain a STORAGE_ACCESS_KEY secret which is the object storage secret access key. It must not be updated across chart upgrades, or else the connection between Cryostat components and object storage will not be able to initialize. It is recommended that the secret should be marked as immutable to avoid accidental changes to secret's data. More details: https://kubernetes.io/docs/concepts/configuration/secret/#secret-immutable",
                    "default": ""
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "Repository for the storage container image",
                            "default": "registry.redhat.io/cryostat/cryostat-storage-rhel9"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Image pull policy for the storage container image",
                            "default": "IfNotPresent"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Tag for the storage container image",
                            "default": "4.0.0"
                        }
                    }
                },
                "securityContext": {
                    "type": "object",
                    "properties": {
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "",
                            "default": false
                        }
                    }
                },
                "encryption": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable at-rest encryption of stored objects. The storage container will generate a secret key for each stored object and use this key to encrypt and decrypt objects transparently. The key is written to the object metadata, so in the default storage container configuration this only adds a small layer of additional security.",
                            "default": true
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type of Service to create for the object storage",
                            "default": "ClusterIP"
                        },
                        "port": {
                            "type": "number",
                            "description": "Port number to expose on the Service",
                            "default": 8333
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "CPU resource request for the object storage container. See: [ResourceRequirements](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources)",
                                    "default": "50m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "Memory resource request for the object storage container.",
                                    "default": "256Mi"
                                }
                            }
                        }
                    }
                },
                "pvc": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Specify whether to use persistentVolumeClaim (true) or EmptyDir storage (false). This is recommended to be enabled, but the storage size and selector should be chosen carefully first.",
                            "default": false
                        },
                        "storage": {
                            "type": "string",
                            "description": "Storage size to request for the persistentVolumeClaim",
                            "default": "500Mi"
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "Access mode for the persistentVolumeClaim. See: [Access Modes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims)",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for the Storage Pod. See: [Tolerations](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)",
                    "default": [],
                    "items": {}
                }
            }
        },
        "grafana": {
            "type": "object",
            "properties": {
                "securityContext": {
                    "type": "object",
                    "properties": {
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "",
                            "default": false
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "Repository for the Grafana container image",
                            "default": "registry.redhat.io/cryostat/cryostat-grafana-dashboard-rhel9"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Image pull policy for the Grafana container image",
                            "default": "IfNotPresent"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Tag for the Grafana container image",
                            "default": "4.0.0"
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type of Service to create for Grafana",
                            "default": "ClusterIP"
                        },
                        "port": {
                            "type": "number",
                            "description": "Port number to expose on the Service for Grafana's HTTP server",
                            "default": 3000
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "CPU resource request for the Grafana container. See: [ResourceRequirements](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources)",
                                    "default": "25m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "Memory resource request for the Grafana container.",
                                    "default": "80Mi"
                                }
                            }
                        }
                    }
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for the Grafana Pod. See: [Tolerations](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)",
                    "default": [],
                    "items": {}
                }
            }
        },
        "datasource": {
            "type": "object",
            "properties": {
                "securityContext": {
                    "type": "object",
                    "properties": {
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "",
                            "default": false
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "Repository for the JFR Data Source container image",
                            "default": "registry.redhat.io/cryostat/jfr-datasource-rhel9"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Image pull policy for the JFR Data Source container image",
                            "default": "IfNotPresent"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Tag for the JFR Data Source container image",
                            "default": "4.0.0"
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "CPU resource request for the JFR Data Source container. See: [ResourceRequirements](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources)",
                                    "default": "200m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "Memory resource request for the JFR Data Source container.",
                                    "default": "200Mi"
                                }
                            }
                        }
                    }
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for the JFR Datasource Pod. See: [Tolerations](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)",
                    "default": [],
                    "items": {}
                }
            }
        },
        "oauth2Proxy": {
            "type": "object",
            "properties": {
                "securityContext": {
                    "type": "object",
                    "properties": {
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "",
                            "default": false
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "Repository for the OAuth2 Proxy container image",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Image pull policy for the OAuth2 Proxy container image",
                            "default": "Never"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Tag for the OAuth2 Proxy container image",
                            "default": ""
                        }
                    }
                },
                "tls": {
                    "type": "object",
                    "properties": {
                        "selfSigned": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether a self-signed TLS certificate for oauth2-proxy HTTPS is generated and used.",
                                    "default": false
                                }
                            }
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "CPU resource request for the OAuth2 Proxy container.",
                                    "default": "25m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "Memory resource request for the OAuth2 Proxy container.",
                                    "default": "64Mi"
                                }
                            }
                        }
                    }
                }
            }
        },
        "authentication": {
            "type": "object",
            "properties": {
                "cookieSecretName": {
                    "type": "string",
                    "description": "Name of the secret containing the authenticating proxy cookie encryption key. This secret must contain a COOKIE_SECRET secret which is the cookie encryption key. It must not be updated across chart upgrades, or else existing user login sessions will be invalidated. It is recommended that the secret should be marked as immutable to avoid accidental changes to secret's data. More details: https://kubernetes.io/docs/concepts/configuration/secret/#secret-immutable",
                    "default": ""
                },
                "openshift": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Whether the OAuth Proxy deployed for securing Cryostat's Pods should be one that integrates with OpenShift-specific features, or a generic one.",
                            "default": true
                        },
                        "clusterRole": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the ClusterRole to bind for the OpenShift OAuth Proxy",
                                    "default": "system:auth-delegator"
                                }
                            }
                        }
                    }
                },
                "basicAuth": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Whether Cryostat should use basic authentication for users. When false, Cryostat will not perform any form of authentication",
                            "default": false
                        },
                        "secretName": {
                            "type": "string",
                            "description": "Name of the Secret that contains the credentials within Cryostat's namespace **(Required if basicAuth is enabled)**",
                            "default": ""
                        },
                        "filename": {
                            "type": "string",
                            "description": "Key within Secret containing the `htpasswd` file. The file should contain one user definition entry per line, with the syntax \"user:passHash\", where \"user\" is the username and \"passHash\" is the `bcrypt` hash of the desired password. Such an entry can be generated with ex. `htpasswd -nbB username password` **(Required if basicAuth is enabled)**",
                            "default": ""
                        }
                    }
                }
            }
        },
        "openshiftOauthProxy": {
            "type": "object",
            "properties": {
                "securityContext": {
                    "type": "object",
                    "properties": {
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "",
                            "default": false
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "Repository for the OpenShift OAuth Proxy container image",
                            "default": "registry.redhat.io/cryostat/cryostat-ose-oauth-proxy-rhel9"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Image pull policy for the OpenShift OAuth Proxy container image",
                            "default": "IfNotPresent"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Tag for the OpenShift OAuth Proxy container image",
                            "default": "4.0.0"
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "CPU resource request for the OpenShift OAuth Proxy container.",
                                    "default": "25m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "Memory resource request for the OpenShift OAuth Proxy container.",
                                    "default": "64Mi"
                                }
                            }
                        }
                    }
                },
                "accessReview": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Whether the SubjectAccessReview/TokenAccessReview role checks for users and clients are enabled. If this is disabled then the proxy will only check that the user has valid credentials or holds a valid token.",
                            "default": true
                        },
                        "group": {
                            "type": "string",
                            "description": "The OpenShift resource group that the SubjectAccessReview/TokenAccessReview will be performed for. See https://github.com/openshift/oauth-proxy/?tab=readme-ov-file#delegate-authentication-and-authorization-to-openshift-for-infrastructure",
                            "default": ""
                        },
                        "resource": {
                            "type": "string",
                            "description": "The OpenShift resource that the SubjectAccessReview/TokenAccessReview will be performed for.",
                            "default": "pods"
                        },
                        "subresource": {
                            "type": "string",
                            "description": "The OpenShift resource that the SubjectAccessReview/TokenAccessReview will be performed for.",
                            "default": "exec"
                        },
                        "name": {
                            "type": "string",
                            "description": "The OpenShift resource name that the SubjectAccessReview/TokenAccessReview will be performed for.",
                            "default": ""
                        },
                        "namespace": {
                            "type": "string",
                            "description": "The OpenShift namespace that the SubjectAccessReview/TokenAccessReview will be performed for.",
                            "default": "{{ .Release.Namespace }}"
                        },
                        "verb": {
                            "type": "string",
                            "description": "The OpenShift resource name that the SubjectAccessReview/TokenAccessReview will be performed for.",
                            "default": "create"
                        },
                        "version": {
                            "type": "string",
                            "description": "The OpenShift resource version that the SubjectAccessReview/TokenAccessReview will be performed for.",
                            "default": ""
                        }
                    }
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "seccompProfile": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "",
                            "default": "RuntimeDefault"
                        }
                    }
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                }
            }
        },
        "imagePullSecrets": {
            "type": "array",
            "description": "Image pull secrets to be used for the Cryostat deployment",
            "default": [],
            "items": {}
        },
        "nameOverride": {
            "type": "string",
            "description": "Overrides the name of this Chart",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "Overrides the fully qualified application name of `[release name]-[chart name]`",
            "default": ""
        },
        "rbac": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Specifies whether RBAC resources should be created",
                    "default": true
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Specifies whether a service account should be created",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service account to use. If not set and create is true, a name is generated using the fullname template",
                    "default": ""
                }
            }
        },
        "networkPolicy": {
            "type": "object",
            "properties": {
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "whether a NetworkPolicy for restricting Cryostat component Pods' traffic is installed. This prevents other Pods from sending unwanted traffic to Cryostat's Pods. Traffic should flow via the Service (or Route, or other Ingress) only, not by directly targeting Pods.",
                            "default": true
                        }
                    }
                }
            }
        },
        "tolerations": {
            "type": "array",
            "description": "default Tolerations for the various Pods. See: [Tolerations](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling)",
            "default": [],
            "items": {}
        }
    }
}