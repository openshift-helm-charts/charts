suite: test reports_deployment.yaml
templates:
  - reports_deployment.yaml

tests:
  - it: should verify general deployment settings when disabled
    asserts:
      - hasDocuments:
          count: 0

  - it: should verify general deployment settings when enabled
    set:
      reports:
        replicas: 2
    asserts:
      - equal:
          path: kind
          value: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-cryostat-v4-reports
      - equal:
          path: spec.replicas
          value: 2
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.selector.matchLabels
          value:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: cryostat
            app.kubernetes.io/component: reports
            app.kubernetes.io/part-of: cryostat
      - equal:
          path: spec.template.metadata.labels
          value:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: cryostat
            app.kubernetes.io/part-of: cryostat
            app.kubernetes.io/component: reports
      - notExists:
          path: spec.template.spec.serviceAccountName
      - equal:
          path: spec.template.spec.securityContext.runAsNonRoot
          value: true
      - equal:
          path: spec.template.spec.securityContext.seccompProfile.type
          value: RuntimeDefault
      - equal:
          path: metadata.labels
          value:
            helm.sh/chart: cryostat-2.0.0
            app.kubernetes.io/name: cryostat
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/version: "4.0.0"
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/component: reports
            app.kubernetes.io/part-of: cryostat

  - it: should validate all container settings including environment variables and security contexts
    set:
      reports:
        replicas: 1
    asserts:
      - exists:
          path: spec.template.spec.containers[?(@.name=='cryostat-reports-authproxy')]
      - equal:
          path: spec.template.spec.containers[?(@.name=='cryostat-reports-authproxy')].image
          value: "quay.io/oauth2-proxy/oauth2-proxy:latest"
      - equal:
          path: spec.template.spec.containers[?(@.name=='cryostat-reports-authproxy')].ports
          value:
            - containerPort: 4180
              name: http
              protocol: TCP
      - exists:
          path: spec.template.spec.containers[?(@.name=='cryostat-reports')]
      - equal:
          path: spec.template.spec.containers[?(@.name=='cryostat-reports')].image
          value: "quay.io/cryostat/cryostat-reports:4.0.0"
      - equal:
          path: spec.template.spec.containers[?(@.name=='cryostat-reports')].env[?(@.name=='QUARKUS_HTTP_PORT')].value
          value: "10001"

  - it: should validate authproxy settings when deployed in OpenShift
    set:
      reports:
        replicas: 1
      authentication:
        openshift:
          enabled: true
    asserts:
      - exists:
          path: spec.template.spec.containers[?(@.name=='cryostat-reports-authproxy')]
      - equal:
          path: spec.template.spec.containers[?(@.name=='cryostat-reports-authproxy')].image
          value: "quay.io/cryostat/openshift-oauth-proxy:4.0.0"
      - equal:
          path: spec.template.spec.containers[?(@.name=='cryostat-reports-authproxy')].ports
          value:
            - containerPort: 4180
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP

  - it: should apply Kubernetes specific settings when configured
    set:
      reports:
        replicas: 1
      nodeSelector:
        disktype: ssd
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: disktype
                operator: In
                values:
                - ssd
      tolerations:
      - key: "key"
        operator: "Equal"
        value: "value"
        effect: "NoSchedule"
    asserts:
      - exists:
          path: spec.template.spec.nodeSelector
      - exists:
          path: spec.template.spec.affinity
      - exists:
          path: spec.template.spec.tolerations

  - it: should accept specific nodeSelector setting
    set:
      reports.replicas: 1
      reports.nodeSelector:
        diskType: ssd
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            diskType: ssd

  - it: should prefer specific nodeSelector over general
    set:
      reports.replicas: 1
      nodeSelector:
        disktype: hdd
      reports.nodeSelector:
        diskType: ssd
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            diskType: ssd

  - it: should accept specific tolerations setting
    set:
      reports.replicas: 1
      reports.tolerations:
        - key: "key1"
          operator: "Equal"
          value: "value1"
          effect: "NoSchedule"
    asserts:
      - equal:
          path: spec.template.spec.tolerations
          value:
            - key: "key1"
              operator: "Equal"
              value: "value1"
              effect: "NoSchedule"

  - it: should prefer specific tolerations over general
    set:
      reports.replicas: 1
      tolerations:
        - key: "key1"
          operator: "Equal"
          value: "value1"
          effect: "NoSchedule"
      reports.tolerations:
        - key: "key2"
          operator: "Equal"
          value: "value2"
          effect: "NoSchedule"
    asserts:
      - equal:
          path: spec.template.spec.tolerations
          value:
            - key: "key2"
              operator: "Equal"
              value: "value2"
              effect: "NoSchedule"

  - it: should accept specific affinity setting
    set:
      reports.replicas: 1
      reports.affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: disktype
                operator: In
                values:
                - ssd
    asserts:
      - equal:
          path: spec.template.spec.affinity
          value:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: disktype
                    operator: In
                    values:
                    - ssd

  - it: should prefer specific affinity over general
    set:
      reports.replicas: 1
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: disktype
                operator: In
                values:
                - ssd
      reports.affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: disktype
                operator: In
                values:
                - ssd
    asserts:
      - equal:
          path: spec.template.spec.affinity
          value:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: disktype
                    operator: In
                    values:
                    - ssd

  - it: should verify image pull policies for development snapshots
    set:
      reports:
        replicas: 1
        image:
          tag: "4.0.0-snapshot"
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name=='cryostat-reports')].imagePullPolicy
          value: IfNotPresent

  - it: should verify image pull policies for release versions
    set:
      reports:
        replicas: 1
        image:
          tag: "4.1.0"
          pullPolicy: "IfNotPresent"
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name=='cryostat-reports')].imagePullPolicy
          value: "IfNotPresent"

  - it: should set default podAnnotations
    set:
      reports.replicas: 1
      podAnnotations:
        foo: bar
    asserts:
      - equal:
          path: spec.template.metadata.annotations
          value:
            foo: bar

  - it: should set pod-specific podAnnotations
    set:
      reports.replicas: 1
      reports.podAnnotations:
        foo: bar
    asserts:
      - equal:
          path: spec.template.metadata.annotations
          value:
            foo: bar

  - it: should set merge pod-specific and default podAnnotations
    set:
      reports.replicas: 1
      reports.podAnnotations:
        foo: bar
      podAnnotations:
        alice: bob
    asserts:
      - equal:
          path: spec.template.metadata.annotations
          value:
            alice: bob
            foo: bar
