# Deployment manifest for gloo-fed
{{- if .Values.enabled }}
{{- $glooFed := $.Values.glooFed}}
{{- $glooFedImage := $glooFed.image }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo-fed
  name: gloo-fed
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: gloo-fed
  template:
    metadata:
      labels:
        app: gloo-fed
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: gloo-fed
      containers:
      - image: {{ $glooFedImage.registry }}/{{ $glooFedImage.repository }}:{{ $glooFedImage.tag }}
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: WRITE_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: GLOO_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.license_secret_name }}
              key: license-key
        imagePullPolicy: {{ $glooFedImage.pullPolicy }}
        name: gloo-fed
{{- if $glooFed.resources }}
        resources:
{{ toYaml $glooFed.resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
        {{- end}}
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- if $glooFedImage.pullSecret }}
      imagePullSecrets:
      - name: {{ $glooFedImage.pullSecret }}
  {{- end}}


---

# Service account for gloo-fed

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo-fed
  name: gloo-fed
  namespace: {{ $.Release.Namespace }}
{{- end }} {{/* .Values.enabled */}}
