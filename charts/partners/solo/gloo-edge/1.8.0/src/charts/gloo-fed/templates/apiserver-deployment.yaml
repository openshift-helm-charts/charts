{{- if .Values.enabled }}
{{- if .Values.glooFedApiserver.enable }}
# Deployment manifest for gloo-fed-apiserver
{{- $glooFedApiserver := $.Values.glooFedApiserver}}
{{- $glooFedApiserverImage := $glooFedApiserver.image }}
{{- $envoy := $glooFedApiserver.envoy }}
{{- $envoyImage := $envoy.image }}
{{- $console := $glooFedApiserver.console }}
{{- $consoleImage := $console.image }}
{{- $statsConfig := $.Values.glooFedApiserver.stats }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo-fed
    gloo-fed: console
  name: gloo-fed-console
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not (kindIs "invalid" $glooFedApiserver.replicas) }}
  replicas: {{ $glooFedApiserver.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app: gloo-fed
      gloo-fed: console
  template:
    metadata:
      labels:
        app: gloo-fed
        gloo-fed: console
      {{- if or $statsConfig.enabled .Values.global.istioIntegration.disableAutoinjection }}
      annotations:
        {{- if $statsConfig.enabled}}
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
        {{- end}}
        {{- if .Values.global.istioIntegration.disableAutoinjection }}
        sidecar.istio.io/inject: "false"
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: gloo-fed-console
      containers:
      - image: {{ $glooFedApiserverImage.registry }}/{{ $glooFedApiserverImage.repository }}:{{ $glooFedApiserverImage.tag }}
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: WRITE_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: GLOO_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.license_secret_name }}
              key: license-key
        imagePullPolicy: {{ $glooFedApiserverImage.pullPolicy }}
        name: apiserver
        volumeMounts:
        - name: empty-cache
          mountPath: /var/cache/nginx
        - name: empty-run
          mountPath: /var/run
        ports:
          - name: grpc
            containerPort: {{ $glooFedApiserver.port}}
            protocol: TCP
          - name: healthcheck
            containerPort: {{ $glooFedApiserver.healthCheckPort}}
            protocol: TCP
{{- if $glooFedApiserver.resources }}
        resources:
{{ toYaml $glooFedApiserver.resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
        securityContext:
          {{- if not $glooFedApiserver.floatingUserId }}
          runAsUser: {{ printf "%.0f" (float64 $glooFedApiserver.runAsUser) -}}
          {{- end }}
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - name: console
        securityContext:
          runAsUser: 101
        image: {{ $consoleImage.registry }}/{{ $consoleImage.repository }}:{{ $consoleImage.tag }}
        imagePullPolicy: {{ $consoleImage.pullPolicy }}
        volumeMounts:
          - name: empty-cache
            mountPath: /var/cache/nginx
          - name: empty-run
            mountPath: /var/run
        ports:
          - name: static
            containerPort: {{ $console.port }}
            protocol: TCP
{{- if $console.resources }}
        resources:
{{ toYaml $console.resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
      - name: envoy
        securityContext:
          runAsUser: 101
        env:
          {{/* Prevents Envoy from trying to chown things away from default user 101 */}}
          - name: ENVOY_UID
            value: "0"
        image: {{ $envoyImage.registry }}/{{ $envoyImage.repository }}:{{ $envoyImage.tag }}
        imagePullPolicy: {{ $envoyImage.pullPolicy }}
{{- if $envoy.resources }}
        resources:
{{ toYaml $envoy.resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
        readinessProbe:
          httpGet:
            path: /
            port: 8090
          periodSeconds: 10
          initialDelaySeconds: 5
        volumeMounts:
          - name: envoy-config
            mountPath: /etc/envoy
            readOnly: true
      volumes:
        - name: empty-cache
          emptyDir: {}
        - name: empty-run
          emptyDir: {}
        - name: envoy-config
          configMap:
            name: {{ $envoy.bootstrapConfig.configMapName }}
{{- if $glooFedApiserverImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $glooFedApiserverImage.pullSecret }}
{{- end}}

---

# ConfigMap for gloo-fed apiserver

{{- if eq .Values.glooFedApiserver.envoy.bootstrapConfig.configMapName "gloo-fed-default-apiserver-envoy-config" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: gloo-fed-default-apiserver-envoy-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: gloo-fed
    gloo: apiserver
data:
  config.yaml: |-
{{ .Files.Get "files/gloo-fed-default-apiserver-envoy-config.yaml" | indent 4 }}
{{- end }}

---

# Service account for gloo-fed-console

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo-fed
    gloo-fed: console
  name: gloo-fed-console
  namespace: {{ $.Release.Namespace }}

{{- end }} {{/* .Values.glooFedApiserver.enable */}}
{{- end }} {{/* .Values.enabled */}}