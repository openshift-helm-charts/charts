{{- define "ingress.deploymentSpec"}}
{{- if or (.Values.ingress.enabled) (.Values.settings.integrations.knative.enabled) }}
{{- $image := .Values.ingress.deployment.image }}
{{- if .Values.global  }}
{{- $image = merge .Values.ingress.deployment.image .Values.global.image }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo
    gloo: ingress
  name: ingress
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.ingress.deployment.replicas }}
  selector:
    matchLabels:
      gloo: ingress
  template:
    metadata:
      labels:
        gloo: ingress
        {{- if .Values.ingress.deployment.extraIngressLabels }}
        {{- range $key, $value := .Values.ingress.deployment.extraIngressLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      annotations:
        {{- if .Values.global.istioIntegration.disableAutoinjection }}
        sidecar.istio.io/inject: "false"
        {{- end }}
        {{- if .Values.ingress.deployment.extraIngressAnnotations }}
        {{- range $key, $value := .Values.ingress.deployment.extraIngressAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
    spec:
      {{- include "gloo.pullSecret" $image | nindent 6 -}}
      {{- include "gloo.podSpecStandardFields" .Values.ingress.deployment | nindent 6 -}}
      securityContext:
        runAsNonRoot: true
        {{- if not .Values.ingress.deployment.floatingUserId }}
        runAsUser: {{ printf "%.0f" (float64 .Values.ingress.deployment.runAsUser) -}}
        {{- end }}
      containers:
      - image: {{template "gloo.image" $image}}
        imagePullPolicy: {{ $image.pullPolicy }}
        name: ingress
{{- if .Values.ingress.deployment.resources }}
        resources:
{{ toYaml .Values.ingress.deployment.resources | indent 10}}
{{- end}}
        env:
{{- if .Values.ingress.deployment.customEnv }}
{{ toYaml .Values.ingress.deployment.customEnv | indent 8 }}
{{- end }}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{- if .Values.settings.integrations.knative.enabled }}
        - name: "ENABLE_KNATIVE_INGRESS"
          value: "true"
{{- end }}
{{- if .Values.settings.integrations.knative.version }}
        - name: "KNATIVE_VERSION"
          value: "{{.Values.settings.integrations.knative.version}}"
{{- end }}

{{- if not (.Values.ingress.enabled) }}
        - name: "DISABLE_KUBE_INGRESS"
          value: "true"
{{- else }}

  {{- if or .Values.ingress.requireIngressClass .Values.settings.integrations.knative.requireIngressClass }}
        - name: "REQUIRE_INGRESS_CLASS"
          value: "true"
  {{- end }}

  {{- if and .Values.ingress.customIngressClass }}
        - name: "CUSTOM_INGRESS_CLASS"
          value: "{{ .Values.ingress.customIngressClass }}"
  {{- end }}
{{- end }}
{{- end }} {{/* if or (.Values.ingress.enabled) (.Values.settings.integrations.knative.enabled) */}}
{{- end }} {{/* define "ingress.deploymentSpec" */}}

{{/* Render template with yaml overrides */}}
{{- $kubeResourceOverride := dict -}}
{{- if .Values.ingress.deployment -}}
{{- if .Values.ingress.deployment.kubeResourceOverride -}}
{{- $kubeResourceOverride = .Values.ingress.deployment.kubeResourceOverride  -}}
{{- end -}}
{{- end -}}
{{- include "gloo.util.merge" (list . $kubeResourceOverride "ingress.deploymentSpec") -}}

