# Code generated by solo-kit. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: upstreamgroups.gloo.solo.io
spec:
  group: gloo.solo.io
  names:
    kind: UpstreamGroup
    listKind: UpstreamGroupList
    plural: upstreamgroups
    shortNames:
    - ug
    singular: upstreamgroup
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            destinations:
              description: The destinations that are part of this upstream group.
              items:
                description: WeightedDestination attaches a weight to a single destination.
                properties:
                  destination:
                    properties:
                      consul:
                        description: Route requests to a consul service
                        properties:
                          dataCenters:
                            description: If provided, load balance traffic only between
                              services running in the given [data centers](https://www.consul.io/docs/internals/architecture.html).
                            items:
                              type: string
                            type: array
                          serviceName:
                            description: The name of the target service. This field
                              is required.
                            type: string
                          tags:
                            description: If provided, load balance traffic only between
                              services matching all the given tags.
                            items:
                              type: string
                            type: array
                        type: object
                      destinationSpec:
                        description: Some upstreams utilize options which require
                          or permit additional configuration on routes targeting them.
                          gRPC upstreams, for example, allow specifying REST-style
                          parameters for JSON-to-gRPC transcoding in the destination
                          config. If the destination config is required for the upstream
                          and not provided by the user, Gloo will invalidate the destination
                          and its parent resources.
                        properties:
                          aws:
                            properties:
                              invocationStyle:
                                description: Can be either Sync or Async.
                                enum:
                                - SYNC
                                - ASYNC
                                type: string
                              logicalName:
                                description: The Logical Name of the LambdaFunctionSpec
                                  to be invoked.
                                type: string
                              responseTransformation:
                                description: de-jsonify response bodies returned from
                                  aws lambda
                                type: boolean
                            type: object
                          azure:
                            properties:
                              functionName:
                                description: The Function Name of the FunctionSpec
                                  to be invoked.
                                type: string
                            type: object
                          grpc:
                            properties:
                              function:
                                description: The name of the function.
                                type: string
                              package:
                                description: The proto package of the function.
                                type: string
                              parameters:
                                description: Parameters describe how to extract the
                                  function parameters from the request.
                                properties:
                                  headers:
                                    additionalProperties:
                                      type: string
                                    description: 'headers that will be used to extract
                                      data for processing output templates Gloo will
                                      search for parameters by their name in header
                                      value strings, enclosed in single curly braces
                                      Example: extensions: parameters: headers: x-user-id:
                                      ''{userId}'''
                                    type: object
                                  path:
                                    description: 'part of the (or the entire) path
                                      that will be used extract data for processing
                                      output templates Gloo will search for parameters
                                      by their name in header value strings, enclosed
                                      in single curly braces Example: extensions:
                                      parameters: path: /users/{ userId }'
                                    nullable: true
                                    type: string
                                type: object
                              service:
                                description: The name of the service of the function.
                                type: string
                            type: object
                          rest:
                            properties:
                              functionName:
                                type: string
                              parameters:
                                properties:
                                  headers:
                                    additionalProperties:
                                      type: string
                                    description: 'headers that will be used to extract
                                      data for processing output templates Gloo will
                                      search for parameters by their name in header
                                      value strings, enclosed in single curly braces
                                      Example: extensions: parameters: headers: x-user-id:
                                      ''{userId}'''
                                    type: object
                                  path:
                                    description: 'part of the (or the entire) path
                                      that will be used extract data for processing
                                      output templates Gloo will search for parameters
                                      by their name in header value strings, enclosed
                                      in single curly braces Example: extensions:
                                      parameters: path: /users/{ userId }'
                                    nullable: true
                                    type: string
                                type: object
                              responseTransformation:
                                properties:
                                  advancedTemplates:
                                    description: If set to true, use JSON pointer
                                      notation (e.g. "time/start") instead of dot
                                      notation (e.g. "time.start") to access JSON
                                      elements. Defaults to false.
                                    type: boolean
                                  body:
                                    description: Apply a template to the body
                                    properties:
                                      text:
                                        type: string
                                    type: object
                                  dynamicMetadataValues:
                                    description: Use this field to set Dynamic Metadata.
                                    items:
                                      description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                        entry.
                                      properties:
                                        key:
                                          description: The metadata key.
                                          type: string
                                        metadataNamespace:
                                          description: The metadata namespace. Defaults
                                            to the filter namespace.
                                          type: string
                                        value:
                                          description: A template that determines
                                            the metadata value.
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  extractors:
                                    additionalProperties:
                                      properties:
                                        body:
                                          description: Extract information from the
                                            request/response body
                                          maxProperties: 0
                                          type: object
                                        header:
                                          description: Extract information from headers
                                          type: string
                                        regex:
                                          description: Only strings matching this
                                            regular expression will be part of the
                                            extraction. The most simple value for
                                            this field is '.*', which matches the
                                            whole source. The field is required. If
                                            extraction fails the result is an empty
                                            value.
                                          type: string
                                        subgroup:
                                          description: If your regex contains capturing
                                            groups, use this field to determine which
                                            group should be selected.
                                          format: int32
                                          type: integer
                                      type: object
                                    description: Use this attribute to extract information
                                      from the request. It consists of a map of strings
                                      to extractors. The extractor will defines which
                                      information will be extracted, while the string
                                      key will provide the extractor with a name.
                                      You can reference extractors by their name in
                                      templates, e.g. "{{ my-extractor }}" will render
                                      to the value of the "my-extractor" extractor.
                                    type: object
                                  headers:
                                    additionalProperties:
                                      properties:
                                        text:
                                          type: string
                                      type: object
                                    description: 'Use this attribute to transform
                                      request/response headers. It consists of a map
                                      of strings to templates. The string key determines
                                      the name of the resulting header, the rendered
                                      template will determine the value. Any existing
                                      headers with the same header name will be replaced
                                      by the transformed header. If a header name
                                      is included in `headers` and `headers_to_append`,
                                      it will first be replaced the template in `headers`,
                                      then additional header values will be appended
                                      by the templates defined in `headers_to_append`.
                                      For example, the following header transformation
                                      configuration:'
                                    type: object
                                  headersToAppend:
                                    description: Use this attribute to transform request/response
                                      headers. It consists of an array of string/template
                                      objects. Use this attribute to define multiple
                                      templates for a single header. Header template(s)
                                      defined here will be appended to any existing
                                      headers with the same header name, not replace
                                      existing ones. See `headers` documentation to
                                      see an example of usage.
                                    items:
                                      description: Defines a header-template pair
                                        to be used in `headers_to_append`
                                      properties:
                                        key:
                                          description: Header name
                                          type: string
                                        value:
                                          description: Apply a template to the header
                                            value
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  ignoreErrorOnParse:
                                    description: If set to true, Envoy will not throw
                                      an exception in case the body parsing fails.
                                    type: boolean
                                  mergeExtractorsToBody:
                                    description: Merge all defined extractors to the
                                      request/response body. If you want to nest elements
                                      inside the body, use dot separator in the extractor
                                      name.
                                    type: object
                                  parseBodyBehavior:
                                    enum:
                                    - ParseAsJson
                                    - DontParse
                                    type: string
                                  passthrough:
                                    description: This will cause the transformation
                                      filter not to buffer the body. Use this setting
                                      if the response body is large and you don't
                                      need to transform nor extract information from
                                      it.
                                    type: object
                                type: object
                            type: object
                        type: object
                      kube:
                        description: Route requests to a kubernetes service
                        properties:
                          port:
                            description: The port attribute of the service
                            format: int32
                            type: integer
                          ref:
                            description: The target service
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                        type: object
                      subset:
                        description: If specified, traffic will only be routed to
                          a subset of the upstream. If upstream doesn't contain the
                          specified subset, we will fallback to normal upstream routing.
                        properties:
                          values:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      upstream:
                        description: Route requests to a Gloo upstream
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        type: object
                    type: object
                  options:
                    description: Apply configuration to traffic that is sent to this
                      weighted destination
                    properties:
                      bufferPerRoute:
                        description: 'BufferPerRoute can be used to set the maximum
                          request size that the filter will buffer before the connection
                          manager will stop buffering and return a 413 response. Note:
                          If you have not set a global config (at the gateway level),
                          this override will not do anything by itself.'
                        properties:
                          buffer:
                            description: 'Override the global configuration of the
                              buffer filter with this new config. Note: If you have
                              not set a global config (at the gateway level), this
                              override will not do anything by itself.'
                            properties:
                              maxRequestBytes:
                                description: The maximum request size that the filter
                                  will buffer before the connection manager will stop
                                  buffering and return a 413 response.
                                maximum: 4294967295
                                minimum: 0
                                nullable: true
                                type: integer
                            type: object
                          disabled:
                            description: Disable the buffer filter for this particular
                              vhost or route.
                            type: boolean
                        type: object
                      csrf:
                        description: Csrf can be used to set percent of requests for
                          which the CSRF filter is enabled, enable shadow-only mode
                          where policies will be evaluated and tracked, but not enforced
                          and add additional source origins that will be allowed in
                          addition to the destination origin. For more, see https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/http/csrf/v2/csrf.proto
                        properties:
                          additionalOrigins:
                            description: Specifies additional source origins that
                              will be allowed in addition to the destination origin.
                            items:
                              description: 'Specifies the way to match a string. [#next-free-field:
                                7]'
                              properties:
                                exact:
                                  description: The input string must match exactly
                                    the string specified here.
                                  type: string
                                ignoreCase:
                                  description: If true, indicates the exact/prefix/suffix
                                    matching should be case insensitive. This has
                                    no effect for the safe_regex match. For example,
                                    the matcher *data* will match both input string
                                    *Data* and *data* if set to true.
                                  type: boolean
                                prefix:
                                  description: 'The input string must have the prefix
                                    specified here. Note: empty prefix is not allowed,
                                    please use regex instead.'
                                  type: string
                                safeRegex:
                                  description: The input string must match the regular
                                    expression specified here.
                                  properties:
                                    googleRe2:
                                      description: Google's RE2 regex engine.
                                      properties:
                                        maxProgramSize:
                                          description: This field controls the RE2
                                            "program size" which is a rough estimate
                                            of how complex a compiled regex is to
                                            evaluate. A regex that has a program size
                                            greater than the configured value will
                                            fail to compile. In this case, the configured
                                            max program size can be increased or the
                                            regex can be simplified. If not specified,
                                            the default is 100.
                                          maximum: 4294967295
                                          minimum: 0
                                          nullable: true
                                          type: integer
                                      type: object
                                    regex:
                                      description: The regex match string. The string
                                        must be supported by the configured engine.
                                      type: string
                                  type: object
                                suffix:
                                  description: 'The input string must have the suffix
                                    specified here. Note: empty prefix is not allowed,
                                    please use regex instead.'
                                  type: string
                              type: object
                            type: array
                          filterEnabled:
                            description: Specifies the % of requests for which the
                              CSRF filter is enabled.
                            properties:
                              defaultValue:
                                description: Default value if the runtime value's
                                  for the numerator/denominator keys are not available.
                                properties:
                                  denominator:
                                    description: Specifies the denominator. If the
                                      denominator specified is less than the numerator,
                                      the final fractional percentage is capped at
                                      1 (100%).
                                    enum:
                                    - HUNDRED
                                    - TEN_THOUSAND
                                    - MILLION
                                    type: string
                                  numerator:
                                    description: Specifies the numerator. Defaults
                                      to 0.
                                    format: int32
                                    type: integer
                                type: object
                              runtimeKey:
                                description: Runtime key for a YAML representation
                                  of a FractionalPercent.
                                type: string
                            type: object
                          shadowEnabled:
                            description: Specifies that CSRF policies will be evaluated
                              and tracked, but not enforced.
                            properties:
                              defaultValue:
                                description: Default value if the runtime value's
                                  for the numerator/denominator keys are not available.
                                properties:
                                  denominator:
                                    description: Specifies the denominator. If the
                                      denominator specified is less than the numerator,
                                      the final fractional percentage is capped at
                                      1 (100%).
                                    enum:
                                    - HUNDRED
                                    - TEN_THOUSAND
                                    - MILLION
                                    type: string
                                  numerator:
                                    description: Specifies the numerator. Defaults
                                      to 0.
                                    format: int32
                                    type: integer
                                type: object
                              runtimeKey:
                                description: Runtime key for a YAML representation
                                  of a FractionalPercent.
                                type: string
                            type: object
                        type: object
                      extauth:
                        description: 'Enterprise-only: Authentication configuration'
                        properties:
                          configRef:
                            description: A reference to an AuthConfig. This is used
                              to configure the Gloo Edge Enterprise extauth server.
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                          customAuth:
                            description: Use this field if you are running your own
                              custom extauth server.
                            properties:
                              contextExtensions:
                                additionalProperties:
                                  type: string
                                description: When a request matches the virtual host,
                                  route, or weighted destination on which this configuration
                                  is defined, Gloo will add the given context_extensions
                                  to the request that is sent to the external authorization
                                  server. This allows the server to base the auth
                                  decision on metadata that you define on the source
                                  of the request.
                                type: object
                              name:
                                description: '[Enterprise-only] Only required in the
                                  case where multiple auth servers are configured
                                  in Settings This name must match a key in the named_extauth
                                  Settings.'
                                type: string
                            type: object
                          disable:
                            description: Set to true to disable auth on the virtual
                              host/route.
                            type: boolean
                        type: object
                      extensions:
                        description: Extensions will be passed along from Listeners,
                          Gateways, VirtualServices, Routes, and Route tables to the
                          underlying Proxy, making them useful for controllers, validation
                          tools, etc. which interact with kubernetes yaml.
                        properties:
                          configs:
                            additionalProperties:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: object
                        type: object
                      headerManipulation:
                        description: Append/Remove headers on Requests or Responses
                          to/from this Weighted Destination
                        properties:
                          requestHeadersToAdd:
                            description: Specifies a list of HTTP headers that should
                              be added to each request handled by this route or virtual
                              host. For more information, including details on header
                              value syntax, see the [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_conn_man/headers#config-http-conn-man-headers-custom-request-headers)
                              .
                            items:
                              description: Header name/value pair plus option to control
                                append behavior.
                              properties:
                                append:
                                  description: Should the value be appended? If true
                                    (default), the value is appended to existing values.
                                  nullable: true
                                  type: boolean
                                header:
                                  description: Explicitly specified header
                                  properties:
                                    key:
                                      description: Header name.
                                      type: string
                                    value:
                                      description: Header value.
                                      type: string
                                  type: object
                                headerSecretRef:
                                  description: Reference to header contained in a
                                    secret
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          requestHeadersToRemove:
                            description: Specifies a list of HTTP headers that should
                              be removed from each request handled by this route or
                              virtual host.
                            items:
                              type: string
                            type: array
                          responseHeadersToAdd:
                            description: Specifies a list of HTTP headers that should
                              be added to each response handled by this route or host.
                              For more information, including details on header value
                              syntax, see the [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_conn_man/headers#config-http-conn-man-headers-custom-request-headers)
                              .
                            items:
                              description: Header name/value pair plus option to control
                                append behavior.
                              properties:
                                append:
                                  description: Should the value be appended? If true
                                    (default), the value is appended to existing values.
                                  nullable: true
                                  type: boolean
                                header:
                                  description: Header name/value pair that this option
                                    applies to.
                                  properties:
                                    key:
                                      description: Header name.
                                      type: string
                                    value:
                                      description: Header value.
                                      type: string
                                  type: object
                              type: object
                            type: array
                          responseHeadersToRemove:
                            description: Specifies a list of HTTP headers that should
                              be removed from each response handled by this route
                              or virtual host.
                            items:
                              type: string
                            type: array
                        type: object
                      stagedTransformations:
                        description: Early transformations stage. These transformations
                          run before most other options are processed. If the `regular`
                          field is set in here, the `transformations` field is ignored.
                        properties:
                          early:
                            description: Early transformations happen before most
                              other options (Like Auth and Rate Limit).
                            properties:
                              requestTransforms:
                                description: Transformations to apply on the request.
                                  The first request that matches will apply.
                                items:
                                  properties:
                                    clearRouteCache:
                                      description: Should we clear the route cache
                                        if a transformation was matched.
                                      type: boolean
                                    matcher:
                                      description: Matches on the request properties.
                                      properties:
                                        caseSensitive:
                                          description: Indicates that prefix/path
                                            matching should be case sensitive. The
                                            default is true.
                                          nullable: true
                                          type: boolean
                                        exact:
                                          description: If specified, the route is
                                            an exact path rule meaning that the path
                                            must exactly match the *:path* header
                                            once the query string is removed.
                                          type: string
                                        headers:
                                          description: Specifies a set of headers
                                            that the route should match on. The router
                                            will check the request’s headers against
                                            all the specified headers in the route
                                            config. A match will happen if all the
                                            headers in the route are present in the
                                            request with the same values (or based
                                            on presence if the value field is not
                                            in the config).
                                          items:
                                            description: Internally, Gloo always uses
                                              the HTTP/2 *:authority* header to represent
                                              the HTTP/1 *Host* header. Thus, if attempting
                                              to match on *Host*, match on *:authority*
                                              instead.
                                            properties:
                                              invertMatch:
                                                description: If set to true, the result
                                                  of the match will be inverted. Defaults
                                                  to false.
                                                type: boolean
                                              name:
                                                description: Specifies the name of
                                                  the header in the request.
                                                type: string
                                              regex:
                                                description: Specifies whether the
                                                  header value should be treated as
                                                  regex or not.
                                                type: boolean
                                              value:
                                                description: Specifies the value of
                                                  the header. If the value is absent
                                                  a request that has the name header
                                                  will match, regardless of the header’s
                                                  value.
                                                type: string
                                            type: object
                                          type: array
                                        methods:
                                          description: HTTP Method/Verb(s) to match
                                            on. If none specified, the matcher will
                                            ignore the HTTP Method
                                          items:
                                            type: string
                                          type: array
                                        prefix:
                                          description: If specified, the route is
                                            a prefix rule meaning that the prefix
                                            must match the beginning of the *:path*
                                            header.
                                          type: string
                                        queryParameters:
                                          description: Specifies a set of URL query
                                            parameters on which the route should match.
                                            The router will check the query string
                                            from the *path* header against all the
                                            specified query parameters. If the number
                                            of specified query parameters is nonzero,
                                            they all must match the *path* header's
                                            query string for a match to occur.
                                          items:
                                            description: Query parameter matching
                                              treats the query string of a request's
                                              :path header as an ampersand-separated
                                              list of keys and/or key=value elements.
                                            properties:
                                              name:
                                                description: Specifies the name of
                                                  a key that must be present in the
                                                  requested *path*'s query string.
                                                type: string
                                              regex:
                                                description: Specifies whether the
                                                  query parameter value is a regular
                                                  expression. Defaults to false. The
                                                  entire query parameter value (i.e.,
                                                  the part to the right of the equals
                                                  sign in "key=value") must match
                                                  the regex. E.g., the regex "\d+$"
                                                  will match "123" but not "a123"
                                                  or "123a".
                                                type: boolean
                                              value:
                                                description: Specifies the value of
                                                  the key. If the value is absent,
                                                  a request that contains the key
                                                  in its query string will match,
                                                  whether the key appears with a value
                                                  (e.g., "?debug=true") or not (e.g.,
                                                  "?debug")
                                                type: string
                                            type: object
                                          type: array
                                        regex:
                                          description: If specified, the route is
                                            a regular expression rule meaning that
                                            the regex must match the *:path* header
                                            once the query string is removed. The
                                            entire path (without the query string)
                                            must match the regex. The rule will not
                                            match if only a sub-sequence of the *:path*
                                            header matches the regex. The regex grammar
                                            is defined `here <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
                                          type: string
                                      type: object
                                    requestTransformation:
                                      description: Transformation to apply on the
                                        request.
                                      properties:
                                        headerBodyTransform:
                                          description: 'This type of transformation
                                            will make all the headers available in
                                            the response body. The resulting JSON
                                            body will consist of two attributes: ''headers'',
                                            containing the headers, and ''body'',
                                            containing the original body.'
                                          type: object
                                        transformationTemplate:
                                          description: Apply transformation templates.
                                          properties:
                                            advancedTemplates:
                                              description: If set to true, use JSON
                                                pointer notation (e.g. "time/start")
                                                instead of dot notation (e.g. "time.start")
                                                to access JSON elements. Defaults
                                                to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the
                                                body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamicMetadataValues:
                                              description: Use this field to set Dynamic
                                                Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic
                                                  Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                                  entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadataNamespace:
                                                    description: The metadata namespace.
                                                      Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines
                                                      the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information
                                                      from the request/response body
                                                    maxProperties: 0
                                                    type: object
                                                  header:
                                                    description: Extract information
                                                      from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching
                                                      this regular expression will
                                                      be part of the extraction. The
                                                      most simple value for this field
                                                      is '.*', which matches the whole
                                                      source. The field is required.
                                                      If extraction fails the result
                                                      is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains
                                                      capturing groups, use this field
                                                      to determine which group should
                                                      be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract
                                                information from the request. It consists
                                                of a map of strings to extractors.
                                                The extractor will defines which information
                                                will be extracted, while the string
                                                key will provide the extractor with
                                                a name. You can reference extractors
                                                by their name in templates, e.g. "{{
                                                my-extractor }}" will render to the
                                                value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to
                                                transform request/response headers.
                                                It consists of a map of strings to
                                                templates. The string key determines
                                                the name of the resulting header,
                                                the rendered template will determine
                                                the value. Any existing headers with
                                                the same header name will be replaced
                                                by the transformed header. If a header
                                                name is included in `headers` and
                                                `headers_to_append`, it will first
                                                be replaced the template in `headers`,
                                                then additional header values will
                                                be appended by the templates defined
                                                in `headers_to_append`. For example,
                                                the following header transformation
                                                configuration:'
                                              type: object
                                            headersToAppend:
                                              description: Use this attribute to transform
                                                request/response headers. It consists
                                                of an array of string/template objects.
                                                Use this attribute to define multiple
                                                templates for a single header. Header
                                                template(s) defined here will be appended
                                                to any existing headers with the same
                                                header name, not replace existing
                                                ones. See `headers` documentation
                                                to see an example of usage.
                                              items:
                                                description: Defines a header-template
                                                  pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template
                                                      to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignoreErrorOnParse:
                                              description: If set to true, Envoy will
                                                not throw an exception in case the
                                                body parsing fails.
                                              type: boolean
                                            mergeExtractorsToBody:
                                              description: Merge all defined extractors
                                                to the request/response body. If you
                                                want to nest elements inside the body,
                                                use dot separator in the extractor
                                                name.
                                              type: object
                                            parseBodyBehavior:
                                              enum:
                                              - ParseAsJson
                                              - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation
                                                filter not to buffer the body. Use
                                                this setting if the response body
                                                is large and you don't need to transform
                                                nor extract information from it.
                                              type: object
                                          type: object
                                        xsltTransformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            nonXmlTransform:
                                              description: This should be set to true
                                                if the content being transformed is
                                                not XML. For example, if the content
                                                being transformed is from JSON to
                                                XML, this should be set to true. XSLT
                                                transformations can only take valid
                                                XML as input to be transformed. If
                                                the body is not a valid XML (e.g.
                                                using JSON as input in a JSON-to-XML
                                                transformation), setting `non_xml_transform`
                                                to true will allow the XSLT to accept
                                                the non-XML input without throwing
                                                an error by passing the input as XML
                                                CDATA. defaults to false.
                                              type: boolean
                                            setContentType:
                                              description: Changes the content-type
                                                header of the HTTP request/response
                                                to what is set here. This is useful
                                                in situations where an XSLT transformation
                                                is used to transform XML to JSON and
                                                the content-type should be changed
                                                from `application/xml` to `application/json`.
                                                If left empty, the content-type header
                                                remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template
                                                which you want to transform requests/responses
                                                with. Invalid XSLT transformation
                                                templates will result will result
                                                in a NACK during envoy configuration-time
                                                and the configuration will not be
                                                loaded.
                                              type: string
                                          type: object
                                      type: object
                                    responseTransformation:
                                      description: Transformation to apply on the
                                        response.
                                      properties:
                                        headerBodyTransform:
                                          description: 'This type of transformation
                                            will make all the headers available in
                                            the response body. The resulting JSON
                                            body will consist of two attributes: ''headers'',
                                            containing the headers, and ''body'',
                                            containing the original body.'
                                          type: object
                                        transformationTemplate:
                                          description: Apply transformation templates.
                                          properties:
                                            advancedTemplates:
                                              description: If set to true, use JSON
                                                pointer notation (e.g. "time/start")
                                                instead of dot notation (e.g. "time.start")
                                                to access JSON elements. Defaults
                                                to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the
                                                body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamicMetadataValues:
                                              description: Use this field to set Dynamic
                                                Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic
                                                  Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                                  entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadataNamespace:
                                                    description: The metadata namespace.
                                                      Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines
                                                      the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information
                                                      from the request/response body
                                                    maxProperties: 0
                                                    type: object
                                                  header:
                                                    description: Extract information
                                                      from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching
                                                      this regular expression will
                                                      be part of the extraction. The
                                                      most simple value for this field
                                                      is '.*', which matches the whole
                                                      source. The field is required.
                                                      If extraction fails the result
                                                      is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains
                                                      capturing groups, use this field
                                                      to determine which group should
                                                      be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract
                                                information from the request. It consists
                                                of a map of strings to extractors.
                                                The extractor will defines which information
                                                will be extracted, while the string
                                                key will provide the extractor with
                                                a name. You can reference extractors
                                                by their name in templates, e.g. "{{
                                                my-extractor }}" will render to the
                                                value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to
                                                transform request/response headers.
                                                It consists of a map of strings to
                                                templates. The string key determines
                                                the name of the resulting header,
                                                the rendered template will determine
                                                the value. Any existing headers with
                                                the same header name will be replaced
                                                by the transformed header. If a header
                                                name is included in `headers` and
                                                `headers_to_append`, it will first
                                                be replaced the template in `headers`,
                                                then additional header values will
                                                be appended by the templates defined
                                                in `headers_to_append`. For example,
                                                the following header transformation
                                                configuration:'
                                              type: object
                                            headersToAppend:
                                              description: Use this attribute to transform
                                                request/response headers. It consists
                                                of an array of string/template objects.
                                                Use this attribute to define multiple
                                                templates for a single header. Header
                                                template(s) defined here will be appended
                                                to any existing headers with the same
                                                header name, not replace existing
                                                ones. See `headers` documentation
                                                to see an example of usage.
                                              items:
                                                description: Defines a header-template
                                                  pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template
                                                      to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignoreErrorOnParse:
                                              description: If set to true, Envoy will
                                                not throw an exception in case the
                                                body parsing fails.
                                              type: boolean
                                            mergeExtractorsToBody:
                                              description: Merge all defined extractors
                                                to the request/response body. If you
                                                want to nest elements inside the body,
                                                use dot separator in the extractor
                                                name.
                                              type: object
                                            parseBodyBehavior:
                                              enum:
                                              - ParseAsJson
                                              - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation
                                                filter not to buffer the body. Use
                                                this setting if the response body
                                                is large and you don't need to transform
                                                nor extract information from it.
                                              type: object
                                          type: object
                                        xsltTransformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            nonXmlTransform:
                                              description: This should be set to true
                                                if the content being transformed is
                                                not XML. For example, if the content
                                                being transformed is from JSON to
                                                XML, this should be set to true. XSLT
                                                transformations can only take valid
                                                XML as input to be transformed. If
                                                the body is not a valid XML (e.g.
                                                using JSON as input in a JSON-to-XML
                                                transformation), setting `non_xml_transform`
                                                to true will allow the XSLT to accept
                                                the non-XML input without throwing
                                                an error by passing the input as XML
                                                CDATA. defaults to false.
                                              type: boolean
                                            setContentType:
                                              description: Changes the content-type
                                                header of the HTTP request/response
                                                to what is set here. This is useful
                                                in situations where an XSLT transformation
                                                is used to transform XML to JSON and
                                                the content-type should be changed
                                                from `application/xml` to `application/json`.
                                                If left empty, the content-type header
                                                remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template
                                                which you want to transform requests/responses
                                                with. Invalid XSLT transformation
                                                templates will result will result
                                                in a NACK during envoy configuration-time
                                                and the configuration will not be
                                                loaded.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                              responseTransforms:
                                description: Transformations to apply on the response.
                                  This field is only consulted if there is no response
                                  transformation in the matched `request_transforms`.
                                  i.e. Only one response transformation will be executed.
                                  The first response transformation that matches will
                                  apply.
                                items:
                                  properties:
                                    matchers:
                                      description: Response headers to match on.
                                      items:
                                        description: Internally, Gloo always uses
                                          the HTTP/2 *:authority* header to represent
                                          the HTTP/1 *Host* header. Thus, if attempting
                                          to match on *Host*, match on *:authority*
                                          instead.
                                        properties:
                                          invertMatch:
                                            description: If set to true, the result
                                              of the match will be inverted. Defaults
                                              to false.
                                            type: boolean
                                          name:
                                            description: Specifies the name of the
                                              header in the request.
                                            type: string
                                          regex:
                                            description: Specifies whether the header
                                              value should be treated as regex or
                                              not.
                                            type: boolean
                                          value:
                                            description: Specifies the value of the
                                              header. If the value is absent a request
                                              that has the name header will match,
                                              regardless of the header’s value.
                                            type: string
                                        type: object
                                      type: array
                                    responseCodeDetails:
                                      description: Response code detail to match on.
                                        To see the response code details for your
                                        usecase, you can use the envoy access log
                                        %RESPONSE_CODE_DETAILS% formatter to log it.
                                      type: string
                                    responseTransformation:
                                      description: Transformation to apply on the
                                        response.
                                      properties:
                                        headerBodyTransform:
                                          description: 'This type of transformation
                                            will make all the headers available in
                                            the response body. The resulting JSON
                                            body will consist of two attributes: ''headers'',
                                            containing the headers, and ''body'',
                                            containing the original body.'
                                          type: object
                                        transformationTemplate:
                                          description: Apply transformation templates.
                                          properties:
                                            advancedTemplates:
                                              description: If set to true, use JSON
                                                pointer notation (e.g. "time/start")
                                                instead of dot notation (e.g. "time.start")
                                                to access JSON elements. Defaults
                                                to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the
                                                body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamicMetadataValues:
                                              description: Use this field to set Dynamic
                                                Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic
                                                  Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                                  entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadataNamespace:
                                                    description: The metadata namespace.
                                                      Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines
                                                      the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information
                                                      from the request/response body
                                                    maxProperties: 0
                                                    type: object
                                                  header:
                                                    description: Extract information
                                                      from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching
                                                      this regular expression will
                                                      be part of the extraction. The
                                                      most simple value for this field
                                                      is '.*', which matches the whole
                                                      source. The field is required.
                                                      If extraction fails the result
                                                      is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains
                                                      capturing groups, use this field
                                                      to determine which group should
                                                      be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract
                                                information from the request. It consists
                                                of a map of strings to extractors.
                                                The extractor will defines which information
                                                will be extracted, while the string
                                                key will provide the extractor with
                                                a name. You can reference extractors
                                                by their name in templates, e.g. "{{
                                                my-extractor }}" will render to the
                                                value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to
                                                transform request/response headers.
                                                It consists of a map of strings to
                                                templates. The string key determines
                                                the name of the resulting header,
                                                the rendered template will determine
                                                the value. Any existing headers with
                                                the same header name will be replaced
                                                by the transformed header. If a header
                                                name is included in `headers` and
                                                `headers_to_append`, it will first
                                                be replaced the template in `headers`,
                                                then additional header values will
                                                be appended by the templates defined
                                                in `headers_to_append`. For example,
                                                the following header transformation
                                                configuration:'
                                              type: object
                                            headersToAppend:
                                              description: Use this attribute to transform
                                                request/response headers. It consists
                                                of an array of string/template objects.
                                                Use this attribute to define multiple
                                                templates for a single header. Header
                                                template(s) defined here will be appended
                                                to any existing headers with the same
                                                header name, not replace existing
                                                ones. See `headers` documentation
                                                to see an example of usage.
                                              items:
                                                description: Defines a header-template
                                                  pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template
                                                      to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignoreErrorOnParse:
                                              description: If set to true, Envoy will
                                                not throw an exception in case the
                                                body parsing fails.
                                              type: boolean
                                            mergeExtractorsToBody:
                                              description: Merge all defined extractors
                                                to the request/response body. If you
                                                want to nest elements inside the body,
                                                use dot separator in the extractor
                                                name.
                                              type: object
                                            parseBodyBehavior:
                                              enum:
                                              - ParseAsJson
                                              - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation
                                                filter not to buffer the body. Use
                                                this setting if the response body
                                                is large and you don't need to transform
                                                nor extract information from it.
                                              type: object
                                          type: object
                                        xsltTransformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            nonXmlTransform:
                                              description: This should be set to true
                                                if the content being transformed is
                                                not XML. For example, if the content
                                                being transformed is from JSON to
                                                XML, this should be set to true. XSLT
                                                transformations can only take valid
                                                XML as input to be transformed. If
                                                the body is not a valid XML (e.g.
                                                using JSON as input in a JSON-to-XML
                                                transformation), setting `non_xml_transform`
                                                to true will allow the XSLT to accept
                                                the non-XML input without throwing
                                                an error by passing the input as XML
                                                CDATA. defaults to false.
                                              type: boolean
                                            setContentType:
                                              description: Changes the content-type
                                                header of the HTTP request/response
                                                to what is set here. This is useful
                                                in situations where an XSLT transformation
                                                is used to transform XML to JSON and
                                                the content-type should be changed
                                                from `application/xml` to `application/json`.
                                                If left empty, the content-type header
                                                remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template
                                                which you want to transform requests/responses
                                                with. Invalid XSLT transformation
                                                templates will result will result
                                                in a NACK during envoy configuration-time
                                                and the configuration will not be
                                                loaded.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                          inheritTransformation:
                            description: Inherit transformation config from parent.
                              This has no affect on VirtualHost level transformations.
                              If a RouteTable or Route wants to inherit transformations
                              from it's parent RouteTable or VirtualHost, this should
                              be set to true, else transformations from parents will
                              not be inherited. Transformations are ordered so the
                              child's transformation gets priority, so in the case
                              where a child and parent's transformation matchers are
                              the same, only the child's transformation will run because
                              only one transformation will run per stage. Defaults
                              to false.
                            type: boolean
                          regular:
                            description: Regular transformations happen after Auth
                              and Rate limit decisions has been made.
                            properties:
                              requestTransforms:
                                description: Transformations to apply on the request.
                                  The first request that matches will apply.
                                items:
                                  properties:
                                    clearRouteCache:
                                      description: Should we clear the route cache
                                        if a transformation was matched.
                                      type: boolean
                                    matcher:
                                      description: Matches on the request properties.
                                      properties:
                                        caseSensitive:
                                          description: Indicates that prefix/path
                                            matching should be case sensitive. The
                                            default is true.
                                          nullable: true
                                          type: boolean
                                        exact:
                                          description: If specified, the route is
                                            an exact path rule meaning that the path
                                            must exactly match the *:path* header
                                            once the query string is removed.
                                          type: string
                                        headers:
                                          description: Specifies a set of headers
                                            that the route should match on. The router
                                            will check the request’s headers against
                                            all the specified headers in the route
                                            config. A match will happen if all the
                                            headers in the route are present in the
                                            request with the same values (or based
                                            on presence if the value field is not
                                            in the config).
                                          items:
                                            description: Internally, Gloo always uses
                                              the HTTP/2 *:authority* header to represent
                                              the HTTP/1 *Host* header. Thus, if attempting
                                              to match on *Host*, match on *:authority*
                                              instead.
                                            properties:
                                              invertMatch:
                                                description: If set to true, the result
                                                  of the match will be inverted. Defaults
                                                  to false.
                                                type: boolean
                                              name:
                                                description: Specifies the name of
                                                  the header in the request.
                                                type: string
                                              regex:
                                                description: Specifies whether the
                                                  header value should be treated as
                                                  regex or not.
                                                type: boolean
                                              value:
                                                description: Specifies the value of
                                                  the header. If the value is absent
                                                  a request that has the name header
                                                  will match, regardless of the header’s
                                                  value.
                                                type: string
                                            type: object
                                          type: array
                                        methods:
                                          description: HTTP Method/Verb(s) to match
                                            on. If none specified, the matcher will
                                            ignore the HTTP Method
                                          items:
                                            type: string
                                          type: array
                                        prefix:
                                          description: If specified, the route is
                                            a prefix rule meaning that the prefix
                                            must match the beginning of the *:path*
                                            header.
                                          type: string
                                        queryParameters:
                                          description: Specifies a set of URL query
                                            parameters on which the route should match.
                                            The router will check the query string
                                            from the *path* header against all the
                                            specified query parameters. If the number
                                            of specified query parameters is nonzero,
                                            they all must match the *path* header's
                                            query string for a match to occur.
                                          items:
                                            description: Query parameter matching
                                              treats the query string of a request's
                                              :path header as an ampersand-separated
                                              list of keys and/or key=value elements.
                                            properties:
                                              name:
                                                description: Specifies the name of
                                                  a key that must be present in the
                                                  requested *path*'s query string.
                                                type: string
                                              regex:
                                                description: Specifies whether the
                                                  query parameter value is a regular
                                                  expression. Defaults to false. The
                                                  entire query parameter value (i.e.,
                                                  the part to the right of the equals
                                                  sign in "key=value") must match
                                                  the regex. E.g., the regex "\d+$"
                                                  will match "123" but not "a123"
                                                  or "123a".
                                                type: boolean
                                              value:
                                                description: Specifies the value of
                                                  the key. If the value is absent,
                                                  a request that contains the key
                                                  in its query string will match,
                                                  whether the key appears with a value
                                                  (e.g., "?debug=true") or not (e.g.,
                                                  "?debug")
                                                type: string
                                            type: object
                                          type: array
                                        regex:
                                          description: If specified, the route is
                                            a regular expression rule meaning that
                                            the regex must match the *:path* header
                                            once the query string is removed. The
                                            entire path (without the query string)
                                            must match the regex. The rule will not
                                            match if only a sub-sequence of the *:path*
                                            header matches the regex. The regex grammar
                                            is defined `here <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
                                          type: string
                                      type: object
                                    requestTransformation:
                                      description: Transformation to apply on the
                                        request.
                                      properties:
                                        headerBodyTransform:
                                          description: 'This type of transformation
                                            will make all the headers available in
                                            the response body. The resulting JSON
                                            body will consist of two attributes: ''headers'',
                                            containing the headers, and ''body'',
                                            containing the original body.'
                                          type: object
                                        transformationTemplate:
                                          description: Apply transformation templates.
                                          properties:
                                            advancedTemplates:
                                              description: If set to true, use JSON
                                                pointer notation (e.g. "time/start")
                                                instead of dot notation (e.g. "time.start")
                                                to access JSON elements. Defaults
                                                to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the
                                                body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamicMetadataValues:
                                              description: Use this field to set Dynamic
                                                Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic
                                                  Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                                  entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadataNamespace:
                                                    description: The metadata namespace.
                                                      Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines
                                                      the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information
                                                      from the request/response body
                                                    maxProperties: 0
                                                    type: object
                                                  header:
                                                    description: Extract information
                                                      from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching
                                                      this regular expression will
                                                      be part of the extraction. The
                                                      most simple value for this field
                                                      is '.*', which matches the whole
                                                      source. The field is required.
                                                      If extraction fails the result
                                                      is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains
                                                      capturing groups, use this field
                                                      to determine which group should
                                                      be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract
                                                information from the request. It consists
                                                of a map of strings to extractors.
                                                The extractor will defines which information
                                                will be extracted, while the string
                                                key will provide the extractor with
                                                a name. You can reference extractors
                                                by their name in templates, e.g. "{{
                                                my-extractor }}" will render to the
                                                value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to
                                                transform request/response headers.
                                                It consists of a map of strings to
                                                templates. The string key determines
                                                the name of the resulting header,
                                                the rendered template will determine
                                                the value. Any existing headers with
                                                the same header name will be replaced
                                                by the transformed header. If a header
                                                name is included in `headers` and
                                                `headers_to_append`, it will first
                                                be replaced the template in `headers`,
                                                then additional header values will
                                                be appended by the templates defined
                                                in `headers_to_append`. For example,
                                                the following header transformation
                                                configuration:'
                                              type: object
                                            headersToAppend:
                                              description: Use this attribute to transform
                                                request/response headers. It consists
                                                of an array of string/template objects.
                                                Use this attribute to define multiple
                                                templates for a single header. Header
                                                template(s) defined here will be appended
                                                to any existing headers with the same
                                                header name, not replace existing
                                                ones. See `headers` documentation
                                                to see an example of usage.
                                              items:
                                                description: Defines a header-template
                                                  pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template
                                                      to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignoreErrorOnParse:
                                              description: If set to true, Envoy will
                                                not throw an exception in case the
                                                body parsing fails.
                                              type: boolean
                                            mergeExtractorsToBody:
                                              description: Merge all defined extractors
                                                to the request/response body. If you
                                                want to nest elements inside the body,
                                                use dot separator in the extractor
                                                name.
                                              type: object
                                            parseBodyBehavior:
                                              enum:
                                              - ParseAsJson
                                              - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation
                                                filter not to buffer the body. Use
                                                this setting if the response body
                                                is large and you don't need to transform
                                                nor extract information from it.
                                              type: object
                                          type: object
                                        xsltTransformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            nonXmlTransform:
                                              description: This should be set to true
                                                if the content being transformed is
                                                not XML. For example, if the content
                                                being transformed is from JSON to
                                                XML, this should be set to true. XSLT
                                                transformations can only take valid
                                                XML as input to be transformed. If
                                                the body is not a valid XML (e.g.
                                                using JSON as input in a JSON-to-XML
                                                transformation), setting `non_xml_transform`
                                                to true will allow the XSLT to accept
                                                the non-XML input without throwing
                                                an error by passing the input as XML
                                                CDATA. defaults to false.
                                              type: boolean
                                            setContentType:
                                              description: Changes the content-type
                                                header of the HTTP request/response
                                                to what is set here. This is useful
                                                in situations where an XSLT transformation
                                                is used to transform XML to JSON and
                                                the content-type should be changed
                                                from `application/xml` to `application/json`.
                                                If left empty, the content-type header
                                                remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template
                                                which you want to transform requests/responses
                                                with. Invalid XSLT transformation
                                                templates will result will result
                                                in a NACK during envoy configuration-time
                                                and the configuration will not be
                                                loaded.
                                              type: string
                                          type: object
                                      type: object
                                    responseTransformation:
                                      description: Transformation to apply on the
                                        response.
                                      properties:
                                        headerBodyTransform:
                                          description: 'This type of transformation
                                            will make all the headers available in
                                            the response body. The resulting JSON
                                            body will consist of two attributes: ''headers'',
                                            containing the headers, and ''body'',
                                            containing the original body.'
                                          type: object
                                        transformationTemplate:
                                          description: Apply transformation templates.
                                          properties:
                                            advancedTemplates:
                                              description: If set to true, use JSON
                                                pointer notation (e.g. "time/start")
                                                instead of dot notation (e.g. "time.start")
                                                to access JSON elements. Defaults
                                                to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the
                                                body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamicMetadataValues:
                                              description: Use this field to set Dynamic
                                                Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic
                                                  Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                                  entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadataNamespace:
                                                    description: The metadata namespace.
                                                      Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines
                                                      the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information
                                                      from the request/response body
                                                    maxProperties: 0
                                                    type: object
                                                  header:
                                                    description: Extract information
                                                      from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching
                                                      this regular expression will
                                                      be part of the extraction. The
                                                      most simple value for this field
                                                      is '.*', which matches the whole
                                                      source. The field is required.
                                                      If extraction fails the result
                                                      is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains
                                                      capturing groups, use this field
                                                      to determine which group should
                                                      be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract
                                                information from the request. It consists
                                                of a map of strings to extractors.
                                                The extractor will defines which information
                                                will be extracted, while the string
                                                key will provide the extractor with
                                                a name. You can reference extractors
                                                by their name in templates, e.g. "{{
                                                my-extractor }}" will render to the
                                                value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to
                                                transform request/response headers.
                                                It consists of a map of strings to
                                                templates. The string key determines
                                                the name of the resulting header,
                                                the rendered template will determine
                                                the value. Any existing headers with
                                                the same header name will be replaced
                                                by the transformed header. If a header
                                                name is included in `headers` and
                                                `headers_to_append`, it will first
                                                be replaced the template in `headers`,
                                                then additional header values will
                                                be appended by the templates defined
                                                in `headers_to_append`. For example,
                                                the following header transformation
                                                configuration:'
                                              type: object
                                            headersToAppend:
                                              description: Use this attribute to transform
                                                request/response headers. It consists
                                                of an array of string/template objects.
                                                Use this attribute to define multiple
                                                templates for a single header. Header
                                                template(s) defined here will be appended
                                                to any existing headers with the same
                                                header name, not replace existing
                                                ones. See `headers` documentation
                                                to see an example of usage.
                                              items:
                                                description: Defines a header-template
                                                  pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template
                                                      to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignoreErrorOnParse:
                                              description: If set to true, Envoy will
                                                not throw an exception in case the
                                                body parsing fails.
                                              type: boolean
                                            mergeExtractorsToBody:
                                              description: Merge all defined extractors
                                                to the request/response body. If you
                                                want to nest elements inside the body,
                                                use dot separator in the extractor
                                                name.
                                              type: object
                                            parseBodyBehavior:
                                              enum:
                                              - ParseAsJson
                                              - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation
                                                filter not to buffer the body. Use
                                                this setting if the response body
                                                is large and you don't need to transform
                                                nor extract information from it.
                                              type: object
                                          type: object
                                        xsltTransformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            nonXmlTransform:
                                              description: This should be set to true
                                                if the content being transformed is
                                                not XML. For example, if the content
                                                being transformed is from JSON to
                                                XML, this should be set to true. XSLT
                                                transformations can only take valid
                                                XML as input to be transformed. If
                                                the body is not a valid XML (e.g.
                                                using JSON as input in a JSON-to-XML
                                                transformation), setting `non_xml_transform`
                                                to true will allow the XSLT to accept
                                                the non-XML input without throwing
                                                an error by passing the input as XML
                                                CDATA. defaults to false.
                                              type: boolean
                                            setContentType:
                                              description: Changes the content-type
                                                header of the HTTP request/response
                                                to what is set here. This is useful
                                                in situations where an XSLT transformation
                                                is used to transform XML to JSON and
                                                the content-type should be changed
                                                from `application/xml` to `application/json`.
                                                If left empty, the content-type header
                                                remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template
                                                which you want to transform requests/responses
                                                with. Invalid XSLT transformation
                                                templates will result will result
                                                in a NACK during envoy configuration-time
                                                and the configuration will not be
                                                loaded.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                              responseTransforms:
                                description: Transformations to apply on the response.
                                  This field is only consulted if there is no response
                                  transformation in the matched `request_transforms`.
                                  i.e. Only one response transformation will be executed.
                                  The first response transformation that matches will
                                  apply.
                                items:
                                  properties:
                                    matchers:
                                      description: Response headers to match on.
                                      items:
                                        description: Internally, Gloo always uses
                                          the HTTP/2 *:authority* header to represent
                                          the HTTP/1 *Host* header. Thus, if attempting
                                          to match on *Host*, match on *:authority*
                                          instead.
                                        properties:
                                          invertMatch:
                                            description: If set to true, the result
                                              of the match will be inverted. Defaults
                                              to false.
                                            type: boolean
                                          name:
                                            description: Specifies the name of the
                                              header in the request.
                                            type: string
                                          regex:
                                            description: Specifies whether the header
                                              value should be treated as regex or
                                              not.
                                            type: boolean
                                          value:
                                            description: Specifies the value of the
                                              header. If the value is absent a request
                                              that has the name header will match,
                                              regardless of the header’s value.
                                            type: string
                                        type: object
                                      type: array
                                    responseCodeDetails:
                                      description: Response code detail to match on.
                                        To see the response code details for your
                                        usecase, you can use the envoy access log
                                        %RESPONSE_CODE_DETAILS% formatter to log it.
                                      type: string
                                    responseTransformation:
                                      description: Transformation to apply on the
                                        response.
                                      properties:
                                        headerBodyTransform:
                                          description: 'This type of transformation
                                            will make all the headers available in
                                            the response body. The resulting JSON
                                            body will consist of two attributes: ''headers'',
                                            containing the headers, and ''body'',
                                            containing the original body.'
                                          type: object
                                        transformationTemplate:
                                          description: Apply transformation templates.
                                          properties:
                                            advancedTemplates:
                                              description: If set to true, use JSON
                                                pointer notation (e.g. "time/start")
                                                instead of dot notation (e.g. "time.start")
                                                to access JSON elements. Defaults
                                                to false.
                                              type: boolean
                                            body:
                                              description: Apply a template to the
                                                body
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                            dynamicMetadataValues:
                                              description: Use this field to set Dynamic
                                                Metadata.
                                              items:
                                                description: Defines an [Envoy Dynamic
                                                  Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                                  entry.
                                                properties:
                                                  key:
                                                    description: The metadata key.
                                                    type: string
                                                  metadataNamespace:
                                                    description: The metadata namespace.
                                                      Defaults to the filter namespace.
                                                    type: string
                                                  value:
                                                    description: A template that determines
                                                      the metadata value.
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            extractors:
                                              additionalProperties:
                                                properties:
                                                  body:
                                                    description: Extract information
                                                      from the request/response body
                                                    maxProperties: 0
                                                    type: object
                                                  header:
                                                    description: Extract information
                                                      from headers
                                                    type: string
                                                  regex:
                                                    description: Only strings matching
                                                      this regular expression will
                                                      be part of the extraction. The
                                                      most simple value for this field
                                                      is '.*', which matches the whole
                                                      source. The field is required.
                                                      If extraction fails the result
                                                      is an empty value.
                                                    type: string
                                                  subgroup:
                                                    description: If your regex contains
                                                      capturing groups, use this field
                                                      to determine which group should
                                                      be selected.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              description: Use this attribute to extract
                                                information from the request. It consists
                                                of a map of strings to extractors.
                                                The extractor will defines which information
                                                will be extracted, while the string
                                                key will provide the extractor with
                                                a name. You can reference extractors
                                                by their name in templates, e.g. "{{
                                                my-extractor }}" will render to the
                                                value of the "my-extractor" extractor.
                                              type: object
                                            headers:
                                              additionalProperties:
                                                properties:
                                                  text:
                                                    type: string
                                                type: object
                                              description: 'Use this attribute to
                                                transform request/response headers.
                                                It consists of a map of strings to
                                                templates. The string key determines
                                                the name of the resulting header,
                                                the rendered template will determine
                                                the value. Any existing headers with
                                                the same header name will be replaced
                                                by the transformed header. If a header
                                                name is included in `headers` and
                                                `headers_to_append`, it will first
                                                be replaced the template in `headers`,
                                                then additional header values will
                                                be appended by the templates defined
                                                in `headers_to_append`. For example,
                                                the following header transformation
                                                configuration:'
                                              type: object
                                            headersToAppend:
                                              description: Use this attribute to transform
                                                request/response headers. It consists
                                                of an array of string/template objects.
                                                Use this attribute to define multiple
                                                templates for a single header. Header
                                                template(s) defined here will be appended
                                                to any existing headers with the same
                                                header name, not replace existing
                                                ones. See `headers` documentation
                                                to see an example of usage.
                                              items:
                                                description: Defines a header-template
                                                  pair to be used in `headers_to_append`
                                                properties:
                                                  key:
                                                    description: Header name
                                                    type: string
                                                  value:
                                                    description: Apply a template
                                                      to the header value
                                                    properties:
                                                      text:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            ignoreErrorOnParse:
                                              description: If set to true, Envoy will
                                                not throw an exception in case the
                                                body parsing fails.
                                              type: boolean
                                            mergeExtractorsToBody:
                                              description: Merge all defined extractors
                                                to the request/response body. If you
                                                want to nest elements inside the body,
                                                use dot separator in the extractor
                                                name.
                                              type: object
                                            parseBodyBehavior:
                                              enum:
                                              - ParseAsJson
                                              - DontParse
                                              type: string
                                            passthrough:
                                              description: This will cause the transformation
                                                filter not to buffer the body. Use
                                                this setting if the response body
                                                is large and you don't need to transform
                                                nor extract information from it.
                                              type: object
                                          type: object
                                        xsltTransformation:
                                          description: '(Enterprise Only): Xslt Transformation'
                                          properties:
                                            nonXmlTransform:
                                              description: This should be set to true
                                                if the content being transformed is
                                                not XML. For example, if the content
                                                being transformed is from JSON to
                                                XML, this should be set to true. XSLT
                                                transformations can only take valid
                                                XML as input to be transformed. If
                                                the body is not a valid XML (e.g.
                                                using JSON as input in a JSON-to-XML
                                                transformation), setting `non_xml_transform`
                                                to true will allow the XSLT to accept
                                                the non-XML input without throwing
                                                an error by passing the input as XML
                                                CDATA. defaults to false.
                                              type: boolean
                                            setContentType:
                                              description: Changes the content-type
                                                header of the HTTP request/response
                                                to what is set here. This is useful
                                                in situations where an XSLT transformation
                                                is used to transform XML to JSON and
                                                the content-type should be changed
                                                from `application/xml` to `application/json`.
                                                If left empty, the content-type header
                                                remains unmodified by default.
                                              type: string
                                            xslt:
                                              description: XSLT transformation template
                                                which you want to transform requests/responses
                                                with. Invalid XSLT transformation
                                                templates will result will result
                                                in a NACK during envoy configuration-time
                                                and the configuration will not be
                                                loaded.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                        type: object
                      transformations:
                        description: 'Transformations to apply. Note: this field is
                          superseded by `staged_transformations`. If `staged_transformations.regular`
                          is set, this field will be ignored.'
                        properties:
                          clearRouteCache:
                            description: Clear the route cache if the request transformation
                              was applied.
                            type: boolean
                          requestTransformation:
                            description: Apply a transformation to requests.
                            properties:
                              headerBodyTransform:
                                description: 'This type of transformation will make
                                  all the headers available in the response body.
                                  The resulting JSON body will consist of two attributes:
                                  ''headers'', containing the headers, and ''body'',
                                  containing the original body.'
                                type: object
                              transformationTemplate:
                                description: Apply transformation templates.
                                properties:
                                  advancedTemplates:
                                    description: If set to true, use JSON pointer
                                      notation (e.g. "time/start") instead of dot
                                      notation (e.g. "time.start") to access JSON
                                      elements. Defaults to false.
                                    type: boolean
                                  body:
                                    description: Apply a template to the body
                                    properties:
                                      text:
                                        type: string
                                    type: object
                                  dynamicMetadataValues:
                                    description: Use this field to set Dynamic Metadata.
                                    items:
                                      description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                        entry.
                                      properties:
                                        key:
                                          description: The metadata key.
                                          type: string
                                        metadataNamespace:
                                          description: The metadata namespace. Defaults
                                            to the filter namespace.
                                          type: string
                                        value:
                                          description: A template that determines
                                            the metadata value.
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  extractors:
                                    additionalProperties:
                                      properties:
                                        body:
                                          description: Extract information from the
                                            request/response body
                                          maxProperties: 0
                                          type: object
                                        header:
                                          description: Extract information from headers
                                          type: string
                                        regex:
                                          description: Only strings matching this
                                            regular expression will be part of the
                                            extraction. The most simple value for
                                            this field is '.*', which matches the
                                            whole source. The field is required. If
                                            extraction fails the result is an empty
                                            value.
                                          type: string
                                        subgroup:
                                          description: If your regex contains capturing
                                            groups, use this field to determine which
                                            group should be selected.
                                          format: int32
                                          type: integer
                                      type: object
                                    description: Use this attribute to extract information
                                      from the request. It consists of a map of strings
                                      to extractors. The extractor will defines which
                                      information will be extracted, while the string
                                      key will provide the extractor with a name.
                                      You can reference extractors by their name in
                                      templates, e.g. "{{ my-extractor }}" will render
                                      to the value of the "my-extractor" extractor.
                                    type: object
                                  headers:
                                    additionalProperties:
                                      properties:
                                        text:
                                          type: string
                                      type: object
                                    description: 'Use this attribute to transform
                                      request/response headers. It consists of a map
                                      of strings to templates. The string key determines
                                      the name of the resulting header, the rendered
                                      template will determine the value. Any existing
                                      headers with the same header name will be replaced
                                      by the transformed header. If a header name
                                      is included in `headers` and `headers_to_append`,
                                      it will first be replaced the template in `headers`,
                                      then additional header values will be appended
                                      by the templates defined in `headers_to_append`.
                                      For example, the following header transformation
                                      configuration:'
                                    type: object
                                  headersToAppend:
                                    description: Use this attribute to transform request/response
                                      headers. It consists of an array of string/template
                                      objects. Use this attribute to define multiple
                                      templates for a single header. Header template(s)
                                      defined here will be appended to any existing
                                      headers with the same header name, not replace
                                      existing ones. See `headers` documentation to
                                      see an example of usage.
                                    items:
                                      description: Defines a header-template pair
                                        to be used in `headers_to_append`
                                      properties:
                                        key:
                                          description: Header name
                                          type: string
                                        value:
                                          description: Apply a template to the header
                                            value
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  ignoreErrorOnParse:
                                    description: If set to true, Envoy will not throw
                                      an exception in case the body parsing fails.
                                    type: boolean
                                  mergeExtractorsToBody:
                                    description: Merge all defined extractors to the
                                      request/response body. If you want to nest elements
                                      inside the body, use dot separator in the extractor
                                      name.
                                    type: object
                                  parseBodyBehavior:
                                    enum:
                                    - ParseAsJson
                                    - DontParse
                                    type: string
                                  passthrough:
                                    description: This will cause the transformation
                                      filter not to buffer the body. Use this setting
                                      if the response body is large and you don't
                                      need to transform nor extract information from
                                      it.
                                    type: object
                                type: object
                              xsltTransformation:
                                description: '(Enterprise Only): Xslt Transformation'
                                properties:
                                  nonXmlTransform:
                                    description: This should be set to true if the
                                      content being transformed is not XML. For example,
                                      if the content being transformed is from JSON
                                      to XML, this should be set to true. XSLT transformations
                                      can only take valid XML as input to be transformed.
                                      If the body is not a valid XML (e.g. using JSON
                                      as input in a JSON-to-XML transformation), setting
                                      `non_xml_transform` to true will allow the XSLT
                                      to accept the non-XML input without throwing
                                      an error by passing the input as XML CDATA.
                                      defaults to false.
                                    type: boolean
                                  setContentType:
                                    description: Changes the content-type header of
                                      the HTTP request/response to what is set here.
                                      This is useful in situations where an XSLT transformation
                                      is used to transform XML to JSON and the content-type
                                      should be changed from `application/xml` to
                                      `application/json`. If left empty, the content-type
                                      header remains unmodified by default.
                                    type: string
                                  xslt:
                                    description: XSLT transformation template which
                                      you want to transform requests/responses with.
                                      Invalid XSLT transformation templates will result
                                      will result in a NACK during envoy configuration-time
                                      and the configuration will not be loaded.
                                    type: string
                                type: object
                            type: object
                          responseTransformation:
                            description: Apply a transformation to responses.
                            properties:
                              headerBodyTransform:
                                description: 'This type of transformation will make
                                  all the headers available in the response body.
                                  The resulting JSON body will consist of two attributes:
                                  ''headers'', containing the headers, and ''body'',
                                  containing the original body.'
                                type: object
                              transformationTemplate:
                                description: Apply transformation templates.
                                properties:
                                  advancedTemplates:
                                    description: If set to true, use JSON pointer
                                      notation (e.g. "time/start") instead of dot
                                      notation (e.g. "time.start") to access JSON
                                      elements. Defaults to false.
                                    type: boolean
                                  body:
                                    description: Apply a template to the body
                                    properties:
                                      text:
                                        type: string
                                    type: object
                                  dynamicMetadataValues:
                                    description: Use this field to set Dynamic Metadata.
                                    items:
                                      description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                        entry.
                                      properties:
                                        key:
                                          description: The metadata key.
                                          type: string
                                        metadataNamespace:
                                          description: The metadata namespace. Defaults
                                            to the filter namespace.
                                          type: string
                                        value:
                                          description: A template that determines
                                            the metadata value.
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  extractors:
                                    additionalProperties:
                                      properties:
                                        body:
                                          description: Extract information from the
                                            request/response body
                                          maxProperties: 0
                                          type: object
                                        header:
                                          description: Extract information from headers
                                          type: string
                                        regex:
                                          description: Only strings matching this
                                            regular expression will be part of the
                                            extraction. The most simple value for
                                            this field is '.*', which matches the
                                            whole source. The field is required. If
                                            extraction fails the result is an empty
                                            value.
                                          type: string
                                        subgroup:
                                          description: If your regex contains capturing
                                            groups, use this field to determine which
                                            group should be selected.
                                          format: int32
                                          type: integer
                                      type: object
                                    description: Use this attribute to extract information
                                      from the request. It consists of a map of strings
                                      to extractors. The extractor will defines which
                                      information will be extracted, while the string
                                      key will provide the extractor with a name.
                                      You can reference extractors by their name in
                                      templates, e.g. "{{ my-extractor }}" will render
                                      to the value of the "my-extractor" extractor.
                                    type: object
                                  headers:
                                    additionalProperties:
                                      properties:
                                        text:
                                          type: string
                                      type: object
                                    description: 'Use this attribute to transform
                                      request/response headers. It consists of a map
                                      of strings to templates. The string key determines
                                      the name of the resulting header, the rendered
                                      template will determine the value. Any existing
                                      headers with the same header name will be replaced
                                      by the transformed header. If a header name
                                      is included in `headers` and `headers_to_append`,
                                      it will first be replaced the template in `headers`,
                                      then additional header values will be appended
                                      by the templates defined in `headers_to_append`.
                                      For example, the following header transformation
                                      configuration:'
                                    type: object
                                  headersToAppend:
                                    description: Use this attribute to transform request/response
                                      headers. It consists of an array of string/template
                                      objects. Use this attribute to define multiple
                                      templates for a single header. Header template(s)
                                      defined here will be appended to any existing
                                      headers with the same header name, not replace
                                      existing ones. See `headers` documentation to
                                      see an example of usage.
                                    items:
                                      description: Defines a header-template pair
                                        to be used in `headers_to_append`
                                      properties:
                                        key:
                                          description: Header name
                                          type: string
                                        value:
                                          description: Apply a template to the header
                                            value
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  ignoreErrorOnParse:
                                    description: If set to true, Envoy will not throw
                                      an exception in case the body parsing fails.
                                    type: boolean
                                  mergeExtractorsToBody:
                                    description: Merge all defined extractors to the
                                      request/response body. If you want to nest elements
                                      inside the body, use dot separator in the extractor
                                      name.
                                    type: object
                                  parseBodyBehavior:
                                    enum:
                                    - ParseAsJson
                                    - DontParse
                                    type: string
                                  passthrough:
                                    description: This will cause the transformation
                                      filter not to buffer the body. Use this setting
                                      if the response body is large and you don't
                                      need to transform nor extract information from
                                      it.
                                    type: object
                                type: object
                              xsltTransformation:
                                description: '(Enterprise Only): Xslt Transformation'
                                properties:
                                  nonXmlTransform:
                                    description: This should be set to true if the
                                      content being transformed is not XML. For example,
                                      if the content being transformed is from JSON
                                      to XML, this should be set to true. XSLT transformations
                                      can only take valid XML as input to be transformed.
                                      If the body is not a valid XML (e.g. using JSON
                                      as input in a JSON-to-XML transformation), setting
                                      `non_xml_transform` to true will allow the XSLT
                                      to accept the non-XML input without throwing
                                      an error by passing the input as XML CDATA.
                                      defaults to false.
                                    type: boolean
                                  setContentType:
                                    description: Changes the content-type header of
                                      the HTTP request/response to what is set here.
                                      This is useful in situations where an XSLT transformation
                                      is used to transform XML to JSON and the content-type
                                      should be changed from `application/xml` to
                                      `application/json`. If left empty, the content-type
                                      header remains unmodified by default.
                                    type: string
                                  xslt:
                                    description: XSLT transformation template which
                                      you want to transform requests/responses with.
                                      Invalid XSLT transformation templates will result
                                      will result in a NACK during envoy configuration-time
                                      and the configuration will not be loaded.
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  weight:
                    description: Weight must be greater than zero Routing to each
                      destination will be balanced by the ratio of the destination's
                      weight to the total weight on a route
                    format: int32
                    type: integer
                type: object
              type: array
            status:
              description: Status indicates the validation status of this resource.
                Status is read-only by clients, and set by gloo during validation
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
        status:
          description: Status indicates the validation status of this resource. Status
            is read-only by clients, and set by gloo during validation
          type: object
          x-kubernetes-preserve-unknown-fields: true
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
