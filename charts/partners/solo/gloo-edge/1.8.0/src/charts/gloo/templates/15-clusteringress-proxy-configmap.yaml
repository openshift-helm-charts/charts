{{- define "clusterIngressProxy.configMapSpec"}}
{{- if .Values.settings.integrations.knative.enabled }}
{{- if (semverCompare "< 0.8.0" .Values.settings.integrations.knative.version ) }}

# configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: clusteringress-envoy-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: gloo
    gloo: clusteringress-proxy
data:
  envoy.yaml: |
    layered_runtime:
      layers:
      - name: static_layer
        static_layer:
          overload:
            global_downstream_max_connections: 250000
      - name: admin_layer
        admin_layer: {}
    node:
      cluster: clusteringress
      id: "{{ `{{.PodName}}.{{.PodNamespace}}` }}"
      metadata:
        # role's value is the key for the in-memory xds cache (projects/gloo/pkg/xds/envoy.go)
        role: "{{ `{{.PodNamespace}}` }}~clusteringress-proxy"
    static_resources:
      clusters:
      - name: xds_cluster
        connect_timeout: 5.000s
        load_assignment:
          cluster_name: xds_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: gloo
                    port_value: {{ .Values.gloo.deployment.xdsPort }}
        http2_protocol_options: {}
        upstream_connection_options:
          tcp_keepalive: {}
        type: STRICT_DNS
      - name: rest_xds_cluster
        alt_stat_name: rest_xds_cluster
        connect_timeout: 5.000s
        load_assignment:
          cluster_name: rest_xds_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: gloo
                    port_value: {{ $.Values.gloo.deployment.restXdsPort }}
        upstream_connection_options:
          tcp_keepalive: {}
        type: STRICT_DNS
        respect_dns_ttl: true
{{- if .Values.settings.integrations.knative.proxy.stats }}
      - name: admin_port_cluster
        connect_timeout: 5.000s
        type: STATIC
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: admin_port_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 19000

      listeners:
        - name: prometheus_listener
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: AUTO
                    stat_prefix: prometheus
                    route_config:
                      name: prometheus_route
                      virtual_hosts:
                        - name: prometheus_host
                          domains:
                            - "*"
                          routes:
                            - match:
                                prefix: "/metrics"
                                headers:
                                - name: ":method"
                                  exact_match: GET
                              route:
                                prefix_rewrite: {{ .Values.global.glooStats.routePrefixRewrite }}
                                cluster: admin_port_cluster
                    http_filters:
                      - name: envoy.filters.http.router
{{- if .Values.settings.integrations.knative.proxy.tracing }}
                    tracing:
{{ toYaml .Values.settings.integrations.knative.proxy.tracing | indent 22}}
{{- end}} {{/* if .Values.settings.integrations.knative.proxy.tracing */}}
{{- end}}


    dynamic_resources:
      ads_config:
        transport_api_version: V3
        api_type: GRPC
        rate_limit_settings: {}
        grpc_services:
        - envoy_grpc: {cluster_name: xds_cluster}
      cds_config:
        resource_api_version: V3
        ads: {}
      lds_config:
        resource_api_version: V3
        ads: {}
    admin:
      access_log_path: /dev/null
      address:
        socket_address:
          address: {{ .Values.settings.integrations.knative.proxy.loopBackAddress }}
          port_value: 19000
{{- end }}
{{- end }} {{/* if .Values.settings.integrations.knative.enabled */}}
{{- end }} {{/*define "clusterIngressProxy.configMapSpec"*/}}

{{/* Render template with yaml overrides */}}
{{- $kubeResourceOverride := dict -}}
{{- if .Values.settings.integrations.knative.proxy -}}
{{- if .Values.settings.integrations.knative.proxy.configMap -}}
{{- $kubeResourceOverride = .Values.settings.integrations.knative.proxy.configMap.kubeResourceOverride  -}}
{{- end -}}
{{- end -}}
{{- include "gloo.util.merge" (list . $kubeResourceOverride "clusterIngressProxy.configMapSpec") -}}