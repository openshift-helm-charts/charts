# Code generated by solo-kit. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: virtualhostoptions.gateway.solo.io
spec:
  group: gateway.solo.io
  names:
    kind: VirtualHostOption
    listKind: VirtualHostOptionList
    plural: virtualhostoptions
    shortNames:
    - vho
    - vhopts
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The **VirtualHostOption** holds `options` configuration for
            a VirtualHost. VirtualHosts can inherit `options` config from `VirtualHostOption`
            objects by delegating to them.
          properties:
            options:
              description: VirtualHost options. See VirtualHost for delegation behavior.
              properties:
                bufferPerRoute:
                  description: 'BufferPerRoute can be used to set the maximum request
                    size that the filter will buffer before the connection manager
                    will stop buffering and return a 413 response. Note: If you have
                    not set a global config (at the gateway level), this override
                    will not do anything by itself.'
                  properties:
                    buffer:
                      description: 'Override the global configuration of the buffer
                        filter with this new config. Note: If you have not set a global
                        config (at the gateway level), this override will not do anything
                        by itself.'
                      properties:
                        maxRequestBytes:
                          description: The maximum request size that the filter will
                            buffer before the connection manager will stop buffering
                            and return a 413 response.
                          maximum: 4294967295
                          minimum: 0
                          nullable: true
                          type: integer
                      type: object
                    disabled:
                      description: Disable the buffer filter for this particular vhost
                        or route.
                      type: boolean
                  type: object
                cors:
                  description: Defines a CORS policy for the virtual host If a CORS
                    policy is also defined on the route matched by the request, the
                    policies are merged.
                  properties:
                    allowCredentials:
                      description: Specifies whether the resource allows credentials.
                      type: boolean
                    allowHeaders:
                      description: Specifies the content for the *access-control-allow-headers*
                        header.
                      items:
                        type: string
                      type: array
                    allowMethods:
                      description: Specifies the content for the *access-control-allow-methods*
                        header.
                      items:
                        type: string
                      type: array
                    allowOrigin:
                      description: Specifies the origins that will be allowed to make
                        CORS requests.
                      items:
                        type: string
                      type: array
                    allowOriginRegex:
                      description: Specifies regex patterns that match origins that
                        will be allowed to make CORS requests.
                      items:
                        type: string
                      type: array
                    disableForRoute:
                      description: Optional, only applies to route-specific CORS Policies,
                        defaults to false. If set, the CORS Policy (specified on the
                        virtual host) will be disabled for this route.
                      type: boolean
                    exposeHeaders:
                      description: Specifies the content for the *access-control-expose-headers*
                        header.
                      items:
                        type: string
                      type: array
                    maxAge:
                      description: Specifies the content for the *access-control-max-age*
                        header.
                      type: string
                  type: object
                csrf:
                  description: Csrf can be used to set percent of requests for which
                    the CSRF filter is enabled, enable shadow-only mode where policies
                    will be evaluated and tracked, but not enforced and add additional
                    source origins that will be allowed in addition to the destination
                    origin. For more, see https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/http/csrf/v2/csrf.proto
                  properties:
                    additionalOrigins:
                      description: Specifies additional source origins that will be
                        allowed in addition to the destination origin.
                      items:
                        description: 'Specifies the way to match a string. [#next-free-field:
                          7]'
                        properties:
                          exact:
                            description: The input string must match exactly the string
                              specified here.
                            type: string
                          ignoreCase:
                            description: If true, indicates the exact/prefix/suffix
                              matching should be case insensitive. This has no effect
                              for the safe_regex match. For example, the matcher *data*
                              will match both input string *Data* and *data* if set
                              to true.
                            type: boolean
                          prefix:
                            description: 'The input string must have the prefix specified
                              here. Note: empty prefix is not allowed, please use
                              regex instead.'
                            type: string
                          safeRegex:
                            description: The input string must match the regular expression
                              specified here.
                            properties:
                              googleRe2:
                                description: Google's RE2 regex engine.
                                properties:
                                  maxProgramSize:
                                    description: This field controls the RE2 "program
                                      size" which is a rough estimate of how complex
                                      a compiled regex is to evaluate. A regex that
                                      has a program size greater than the configured
                                      value will fail to compile. In this case, the
                                      configured max program size can be increased
                                      or the regex can be simplified. If not specified,
                                      the default is 100.
                                    maximum: 4294967295
                                    minimum: 0
                                    nullable: true
                                    type: integer
                                type: object
                              regex:
                                description: The regex match string. The string must
                                  be supported by the configured engine.
                                type: string
                            type: object
                          suffix:
                            description: 'The input string must have the suffix specified
                              here. Note: empty prefix is not allowed, please use
                              regex instead.'
                            type: string
                        type: object
                      type: array
                    filterEnabled:
                      description: Specifies the % of requests for which the CSRF
                        filter is enabled.
                      properties:
                        defaultValue:
                          description: Default value if the runtime value's for the
                            numerator/denominator keys are not available.
                          properties:
                            denominator:
                              description: Specifies the denominator. If the denominator
                                specified is less than the numerator, the final fractional
                                percentage is capped at 1 (100%).
                              enum:
                              - HUNDRED
                              - TEN_THOUSAND
                              - MILLION
                              type: string
                            numerator:
                              description: Specifies the numerator. Defaults to 0.
                              format: int32
                              type: integer
                          type: object
                        runtimeKey:
                          description: Runtime key for a YAML representation of a
                            FractionalPercent.
                          type: string
                      type: object
                    shadowEnabled:
                      description: Specifies that CSRF policies will be evaluated
                        and tracked, but not enforced.
                      properties:
                        defaultValue:
                          description: Default value if the runtime value's for the
                            numerator/denominator keys are not available.
                          properties:
                            denominator:
                              description: Specifies the denominator. If the denominator
                                specified is less than the numerator, the final fractional
                                percentage is capped at 1 (100%).
                              enum:
                              - HUNDRED
                              - TEN_THOUSAND
                              - MILLION
                              type: string
                            numerator:
                              description: Specifies the numerator. Defaults to 0.
                              format: int32
                              type: integer
                          type: object
                        runtimeKey:
                          description: Runtime key for a YAML representation of a
                            FractionalPercent.
                          type: string
                      type: object
                  type: object
                dlp:
                  description: 'Enterprise-only: Config for data loss prevention'
                  properties:
                    actions:
                      description: List of data loss prevention actions to be applied.
                        These actions will be applied in order, one at a time.
                      items:
                        description: A single action meant to mask sensitive data.
                          The action type represents a set of pre configured actions,
                          as well as the ability to create custom actions. These actions
                          can also be shadowed, a shadowed action will be recorded
                          in the statistics, and debug logs, but not actually committed
                          in the response body.
                        properties:
                          actionType:
                            description: The action type to implement.
                            enum:
                            - CUSTOM
                            - SSN
                            - MASTERCARD
                            - VISA
                            - AMEX
                            - DISCOVER
                            - JCB
                            - DINERS_CLUB
                            - CREDIT_CARD_TRACKERS
                            - ALL_CREDIT_CARDS
                            type: string
                          customAction:
                            description: The custom user action to be applied. This
                              field will only be used if the custom action type is
                              specified above.
                            properties:
                              maskChar:
                                description: 'The masking character for the sensitive
                                  data. default value: X'
                                type: string
                              name:
                                description: The name of the custom action. This name
                                  is used for logging and debugging purposes.
                                type: string
                              percent:
                                description: 'The percent of the string which will
                                  be masked by the mask_char default value: 75% rounds
                                  ratio (percent/100) by std::round http://www.cplusplus.com/reference/cmath/round/'
                                properties:
                                  value:
                                    type: number
                                type: object
                              regex:
                                description: The list of regex strings which will
                                  be applied in order.
                                items:
                                  type: string
                                type: array
                            type: object
                          shadow:
                            description: Shadow represents whether the action should
                              be taken, or just recorded.
                            type: boolean
                        type: object
                      type: array
                    enabledFor:
                      description: Whether responses, access logs, or both should
                        be masked by the applied actions. If not defined, masking
                        will only be enabled for responses bodies.
                      enum:
                      - RESPONSE_BODY
                      - ACCESS_LOGS
                      - ALL
                      type: string
                  type: object
                extauth:
                  description: 'Enterprise-only: Authentication configuration'
                  properties:
                    configRef:
                      description: A reference to an AuthConfig. This is used to configure
                        the Gloo Edge Enterprise extauth server.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                    customAuth:
                      description: Use this field if you are running your own custom
                        extauth server.
                      properties:
                        contextExtensions:
                          additionalProperties:
                            type: string
                          description: When a request matches the virtual host, route,
                            or weighted destination on which this configuration is
                            defined, Gloo will add the given context_extensions to
                            the request that is sent to the external authorization
                            server. This allows the server to base the auth decision
                            on metadata that you define on the source of the request.
                          type: object
                        name:
                          description: '[Enterprise-only] Only required in the case
                            where multiple auth servers are configured in Settings
                            This name must match a key in the named_extauth Settings.'
                          type: string
                      type: object
                    disable:
                      description: Set to true to disable auth on the virtual host/route.
                      type: boolean
                  type: object
                extensions:
                  description: Extensions will be passed along from Listeners, Gateways,
                    VirtualServices, Routes, and Route tables to the underlying Proxy,
                    making them useful for controllers, validation tools, etc. which
                    interact with kubernetes yaml.
                  properties:
                    configs:
                      additionalProperties:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: object
                  type: object
                headerManipulation:
                  description: Append/Remove headers on Requests or Responses on all
                    routes contained in this Virtual Host
                  properties:
                    requestHeadersToAdd:
                      description: Specifies a list of HTTP headers that should be
                        added to each request handled by this route or virtual host.
                        For more information, including details on header value syntax,
                        see the [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_conn_man/headers#config-http-conn-man-headers-custom-request-headers)
                        .
                      items:
                        description: Header name/value pair plus option to control
                          append behavior.
                        properties:
                          append:
                            description: Should the value be appended? If true (default),
                              the value is appended to existing values.
                            nullable: true
                            type: boolean
                          header:
                            description: Explicitly specified header
                            properties:
                              key:
                                description: Header name.
                                type: string
                              value:
                                description: Header value.
                                type: string
                            type: object
                          headerSecretRef:
                            description: Reference to header contained in a secret
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                        type: object
                      type: array
                    requestHeadersToRemove:
                      description: Specifies a list of HTTP headers that should be
                        removed from each request handled by this route or virtual
                        host.
                      items:
                        type: string
                      type: array
                    responseHeadersToAdd:
                      description: Specifies a list of HTTP headers that should be
                        added to each response handled by this route or host. For
                        more information, including details on header value syntax,
                        see the [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_conn_man/headers#config-http-conn-man-headers-custom-request-headers)
                        .
                      items:
                        description: Header name/value pair plus option to control
                          append behavior.
                        properties:
                          append:
                            description: Should the value be appended? If true (default),
                              the value is appended to existing values.
                            nullable: true
                            type: boolean
                          header:
                            description: Header name/value pair that this option applies
                              to.
                            properties:
                              key:
                                description: Header name.
                                type: string
                              value:
                                description: Header value.
                                type: string
                            type: object
                        type: object
                      type: array
                    responseHeadersToRemove:
                      description: Specifies a list of HTTP headers that should be
                        removed from each response handled by this route or virtual
                        host.
                      items:
                        type: string
                      type: array
                  type: object
                includeAttemptCountInResponse:
                  description: IncludeAttemptCountInResponse decides whether the x-envoy-attempt-count
                    header should be included in the downstream response. Setting
                    this option will cause the router to override any existing header
                    value, so in the case of two Envoys on the request path with this
                    option enabled, the downstream will see the attempt count as perceived
                    by the Envoy closest upstream from itself. Defaults to false.
                  nullable: true
                  type: boolean
                includeRequestAttemptCount:
                  description: IncludeRequestAttemptCount decides whether the x-envoy-attempt-count
                    header should be included in the upstream request. Setting this
                    option will cause it to override any existing header value, so
                    in the case of two Envoys on the request path with this option
                    enabled, the upstream will see the attempt count as perceived
                    by the second Envoy. Defaults to false.
                  nullable: true
                  type: boolean
                jwt:
                  description: 'Enterprise-only: Config for reading and verifying
                    JWTs. Copy verifiable information from JWTs into other headers
                    to make routing decisions or combine with RBAC for fine-grained
                    access control. This has been deprecated in favor of staged jwt.
                    The same configuration can be achieved through staged jwt using
                    AfterExtAuth.'
                  properties:
                    allowMissingOrFailedJwt:
                      description: Allow pass through of JWT requests for this virtual
                        host, even if JWT token is missing or JWT auth failed. If
                        this is false (default false), requests that fail JWT authentication
                        will fail authorization immediately. For example, if a request
                        requires either JWT auth OR another auth method, this can
                        be enabled to allow a failed JWT auth request to pass through
                        to the other auth method.
                      type: boolean
                    providers:
                      additionalProperties:
                        properties:
                          audiences:
                            description: An incoming JWT must have an 'aud' claim
                              and it must be in this list.
                            items:
                              type: string
                            type: array
                          claimsToHeaders:
                            description: What claims should be copied to upstream
                              headers.
                            items:
                              description: Allows copying verified claims to headers
                                sent upstream
                              properties:
                                append:
                                  description: If the header exists, append to it
                                    (true), or overwrite it (false).
                                  type: boolean
                                claim:
                                  description: Claim name. for example, "sub"
                                  type: string
                                header:
                                  description: The header the claim will be copied
                                    to. for example, "x-sub".
                                  type: string
                              type: object
                            type: array
                          issuer:
                            description: Issuer of the JWT. the 'iss' claim of the
                              JWT must match this.
                            type: string
                          jwks:
                            description: The source for the keys to validate JWTs.
                            properties:
                              local:
                                description: Use an inline JWKS
                                properties:
                                  key:
                                    description: Inline key. this can be json web
                                      key, key-set or PEM format.
                                    type: string
                                type: object
                              remote:
                                description: Use a remote JWKS server
                                properties:
                                  cacheDuration:
                                    description: Duration after which the cached JWKS
                                      should be expired. If not specified, default
                                      cache duration is 5 minutes.
                                    type: string
                                  upstreamRef:
                                    description: The Upstream representing the Json
                                      Web Key Set server
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                  url:
                                    description: The url used when accessing the upstream
                                      for Json Web Key Set. This is used to set the
                                      host and path in the request
                                    type: string
                                type: object
                            type: object
                          keepToken:
                            description: Should the token forwarded upstream. if false,
                              the header containing the token will be removed.
                            type: boolean
                          tokenSource:
                            description: Where to find the JWT of the current provider.
                            properties:
                              headers:
                                description: Try to retrieve token from these headers
                                items:
                                  description: Describes how to retrieve a JWT from
                                    a header
                                  properties:
                                    header:
                                      description: The name of the header. for example,
                                        "authorization"
                                      type: string
                                    prefix:
                                      description: Prefix before the token. for example,
                                        "Bearer "
                                      type: string
                                  type: object
                                type: array
                              queryParams:
                                description: Try to retrieve token from these query
                                  params
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      description: Map of JWT provider name to Provider. If specified,
                        multiple providers will be `OR`-ed together and will allow
                        validation to any of the providers.
                      type: object
                  type: object
                jwtStaged:
                  description: 'Enterprise-only: Config for reading and verifying
                    JWTs. Copy verifiable information from JWTs into other headers
                    to make routing decisions or combine with RBAC for fine-grained
                    access control. JWT configuration has stages "BeforeExtAuth" and
                    "AfterExtAuth". BeforeExtAuth JWT validation runs before the external
                    authentication service. This is useful when JWT is used in conjunction
                    with other auth mechanisms specified in the [boolean expression
                    Extauth API](https://docs.solo.io/gloo-edge/latest/reference/api/github.com/solo-io/gloo/projects/gloo/api/v1/enterprise/options/extauth/v1/extauth.proto.sk/#authconfig).
                    AfterExtAuth validation runs after external authentication service,
                    which is useful for verifying JWTs obtained during extauth (e.g.
                    oauth/oidc)'
                  properties:
                    afterExtAuth:
                      description: JWT Virtual host config for the JWT filter that
                        runs after the extauth filter.
                      properties:
                        allowMissingOrFailedJwt:
                          description: Allow pass through of JWT requests for this
                            virtual host, even if JWT token is missing or JWT auth
                            failed. If this is false (default false), requests that
                            fail JWT authentication will fail authorization immediately.
                            For example, if a request requires either JWT auth OR
                            another auth method, this can be enabled to allow a failed
                            JWT auth request to pass through to the other auth method.
                          type: boolean
                        providers:
                          additionalProperties:
                            properties:
                              audiences:
                                description: An incoming JWT must have an 'aud' claim
                                  and it must be in this list.
                                items:
                                  type: string
                                type: array
                              claimsToHeaders:
                                description: What claims should be copied to upstream
                                  headers.
                                items:
                                  description: Allows copying verified claims to headers
                                    sent upstream
                                  properties:
                                    append:
                                      description: If the header exists, append to
                                        it (true), or overwrite it (false).
                                      type: boolean
                                    claim:
                                      description: Claim name. for example, "sub"
                                      type: string
                                    header:
                                      description: The header the claim will be copied
                                        to. for example, "x-sub".
                                      type: string
                                  type: object
                                type: array
                              issuer:
                                description: Issuer of the JWT. the 'iss' claim of
                                  the JWT must match this.
                                type: string
                              jwks:
                                description: The source for the keys to validate JWTs.
                                properties:
                                  local:
                                    description: Use an inline JWKS
                                    properties:
                                      key:
                                        description: Inline key. this can be json
                                          web key, key-set or PEM format.
                                        type: string
                                    type: object
                                  remote:
                                    description: Use a remote JWKS server
                                    properties:
                                      cacheDuration:
                                        description: Duration after which the cached
                                          JWKS should be expired. If not specified,
                                          default cache duration is 5 minutes.
                                        type: string
                                      upstreamRef:
                                        description: The Upstream representing the
                                          Json Web Key Set server
                                        properties:
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                      url:
                                        description: The url used when accessing the
                                          upstream for Json Web Key Set. This is used
                                          to set the host and path in the request
                                        type: string
                                    type: object
                                type: object
                              keepToken:
                                description: Should the token forwarded upstream.
                                  if false, the header containing the token will be
                                  removed.
                                type: boolean
                              tokenSource:
                                description: Where to find the JWT of the current
                                  provider.
                                properties:
                                  headers:
                                    description: Try to retrieve token from these
                                      headers
                                    items:
                                      description: Describes how to retrieve a JWT
                                        from a header
                                      properties:
                                        header:
                                          description: The name of the header. for
                                            example, "authorization"
                                          type: string
                                        prefix:
                                          description: Prefix before the token. for
                                            example, "Bearer "
                                          type: string
                                      type: object
                                    type: array
                                  queryParams:
                                    description: Try to retrieve token from these
                                      query params
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          description: Map of JWT provider name to Provider. If specified,
                            multiple providers will be `OR`-ed together and will allow
                            validation to any of the providers.
                          type: object
                      type: object
                    beforeExtAuth:
                      description: JWT Virtual host config for the JWT filter that
                        runs before the extauth filter.
                      properties:
                        allowMissingOrFailedJwt:
                          description: Allow pass through of JWT requests for this
                            virtual host, even if JWT token is missing or JWT auth
                            failed. If this is false (default false), requests that
                            fail JWT authentication will fail authorization immediately.
                            For example, if a request requires either JWT auth OR
                            another auth method, this can be enabled to allow a failed
                            JWT auth request to pass through to the other auth method.
                          type: boolean
                        providers:
                          additionalProperties:
                            properties:
                              audiences:
                                description: An incoming JWT must have an 'aud' claim
                                  and it must be in this list.
                                items:
                                  type: string
                                type: array
                              claimsToHeaders:
                                description: What claims should be copied to upstream
                                  headers.
                                items:
                                  description: Allows copying verified claims to headers
                                    sent upstream
                                  properties:
                                    append:
                                      description: If the header exists, append to
                                        it (true), or overwrite it (false).
                                      type: boolean
                                    claim:
                                      description: Claim name. for example, "sub"
                                      type: string
                                    header:
                                      description: The header the claim will be copied
                                        to. for example, "x-sub".
                                      type: string
                                  type: object
                                type: array
                              issuer:
                                description: Issuer of the JWT. the 'iss' claim of
                                  the JWT must match this.
                                type: string
                              jwks:
                                description: The source for the keys to validate JWTs.
                                properties:
                                  local:
                                    description: Use an inline JWKS
                                    properties:
                                      key:
                                        description: Inline key. this can be json
                                          web key, key-set or PEM format.
                                        type: string
                                    type: object
                                  remote:
                                    description: Use a remote JWKS server
                                    properties:
                                      cacheDuration:
                                        description: Duration after which the cached
                                          JWKS should be expired. If not specified,
                                          default cache duration is 5 minutes.
                                        type: string
                                      upstreamRef:
                                        description: The Upstream representing the
                                          Json Web Key Set server
                                        properties:
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                      url:
                                        description: The url used when accessing the
                                          upstream for Json Web Key Set. This is used
                                          to set the host and path in the request
                                        type: string
                                    type: object
                                type: object
                              keepToken:
                                description: Should the token forwarded upstream.
                                  if false, the header containing the token will be
                                  removed.
                                type: boolean
                              tokenSource:
                                description: Where to find the JWT of the current
                                  provider.
                                properties:
                                  headers:
                                    description: Try to retrieve token from these
                                      headers
                                    items:
                                      description: Describes how to retrieve a JWT
                                        from a header
                                      properties:
                                        header:
                                          description: The name of the header. for
                                            example, "authorization"
                                          type: string
                                        prefix:
                                          description: Prefix before the token. for
                                            example, "Bearer "
                                          type: string
                                      type: object
                                    type: array
                                  queryParams:
                                    description: Try to retrieve token from these
                                      query params
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          description: Map of JWT provider name to Provider. If specified,
                            multiple providers will be `OR`-ed together and will allow
                            validation to any of the providers.
                          type: object
                      type: object
                  type: object
                rateLimitConfigs:
                  description: References to RateLimitConfig resources. This is used
                    to configure the GlooE rate limit server. Only one of `ratelimit`
                    or `rate_limit_configs` can be set.
                  properties:
                    refs:
                      items:
                        description: A reference to a `RateLimitConfig` resource.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        type: object
                      type: array
                  type: object
                ratelimit:
                  description: 'Enterprise-only: Partial config for GlooE rate-limiting
                    based on Envoy''s rate-limit service; supports Envoy''s rate-limit
                    service API. (reference here: https://github.com/lyft/ratelimit#configuration)
                    Configure rate-limit *actions* here, which define how request
                    characteristics get translated into descriptors used by the rate-limit
                    service for rate-limiting. Configure rate-limit *descriptors*
                    and their associated limits on the Gloo settings. Only one of
                    `ratelimit` or `rate_limit_configs` can be set.'
                  properties:
                    rateLimits:
                      description: Define individual rate limits here. Each rate limit
                        will be evaluated, if any rate limit would be throttled, the
                        entire request returns a 429 (gets throttled)
                      items:
                        description: 'Each action and setAction in the lists maps
                          part of the request (or its context) to a descriptor. The
                          tuple or set of descriptors generated by the provided actions
                          is sent to the rate limit server and matched against rate
                          limit rules. Order matters on provided actions but not on
                          setActions, e.g. the following actions: - actions: - requestHeaders:
                          descriptorKey: account_id headerName: x-account-id - requestHeaders:
                          descriptorKey: plan headerName: x-plan define an ordered
                          descriptor tuple like so: (''account_id'', ''<x-account-id
                          value>''), (''plan'', ''<x-plan value>'')'
                        properties:
                          actions:
                            items:
                              description: Copied directly from envoy https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-ratelimit-action
                              properties:
                                destinationCluster:
                                  description: Rate limit on destination cluster.
                                  type: object
                                genericKey:
                                  description: Rate limit on a generic key.
                                  properties:
                                    descriptorValue:
                                      description: The value to use in the descriptor
                                        entry.
                                      type: string
                                  type: object
                                headerValueMatch:
                                  description: Rate limit on the existence of request
                                    headers.
                                  properties:
                                    descriptorValue:
                                      description: The value to use in the descriptor
                                        entry.
                                      type: string
                                    expectMatch:
                                      description: If set to true, the action will
                                        append a descriptor entry when the request
                                        matches the headers. If set to false, the
                                        action will append a descriptor entry when
                                        the request does not match the headers. The
                                        default value is true.
                                      nullable: true
                                      type: boolean
                                    headers:
                                      description: Specifies a set of headers that
                                        the rate limit action should match on. The
                                        action will check the request’s headers against
                                        all the specified headers in the config. A
                                        match will happen if all the headers in the
                                        config are present in the request with the
                                        same values (or based on presence if the value
                                        field is not in the config).
                                      items:
                                        properties:
                                          exactMatch:
                                            description: If specified, header match
                                              will be performed based on the value
                                              of the header.
                                            type: string
                                          invertMatch:
                                            description: If specified, the match result
                                              will be inverted before checking. Defaults
                                              to false.
                                            type: boolean
                                          name:
                                            description: Specifies the name of the
                                              header in the request.
                                            type: string
                                          prefixMatch:
                                            description: 'If specified, header match
                                              will be performed based on the prefix
                                              of the header value. Note: empty prefix
                                              is not allowed, please use present_match
                                              instead.'
                                            type: string
                                          presentMatch:
                                            description: If specified, header match
                                              will be performed based on whether the
                                              header is in the request.
                                            type: boolean
                                          rangeMatch:
                                            description: 'If specified, header match
                                              will be performed based on range. The
                                              rule will match if the request header
                                              value is within this range. The entire
                                              request header value must represent
                                              an integer in base 10 notation: consisting
                                              of an optional plus or minus sign followed
                                              by a sequence of digits. The rule will
                                              not match if the header value does not
                                              represent an integer. Match will fail
                                              for empty values, floating point numbers
                                              or if only a subsequence of the header
                                              value is an integer.'
                                            properties:
                                              end:
                                                description: end of the range (exclusive)
                                                format: int64
                                                type: integer
                                              start:
                                                description: start of the range (inclusive)
                                                format: int64
                                                type: integer
                                            type: object
                                          regexMatch:
                                            description: If specified, this regex
                                              string is a regular expression rule
                                              which implies the entire request header
                                              value must match the regex. The rule
                                              will not match if only a subsequence
                                              of the request header value matches
                                              the regex. The regex grammar used in
                                              the value field is defined `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.
                                            type: string
                                          suffixMatch:
                                            description: 'If specified, header match
                                              will be performed based on the suffix
                                              of the header value. Note: empty suffix
                                              is not allowed, please use present_match
                                              instead.'
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                metadata:
                                  description: Rate limit on metadata.
                                  properties:
                                    defaultValue:
                                      description: An optional value to use if *metadata_key*
                                        is empty. If not set and no value is present
                                        under the metadata_key then no descriptor
                                        is generated.
                                      type: string
                                    descriptorKey:
                                      description: Required. The key to use in the
                                        descriptor entry.
                                      type: string
                                    metadataKey:
                                      description: Required. Metadata struct that
                                        defines the key and path to retrieve the string
                                        value. A match will only happen if the value
                                        in the metadata is of type string.
                                      properties:
                                        key:
                                          description: Required. The key name of Metadata
                                            to retrieve the Struct from the metadata.
                                            Typically, it represents a builtin subsystem
                                            or custom extension.
                                          type: string
                                        path:
                                          description: Must have at least one element.
                                            The path to retrieve the Value from the
                                            Struct. It can be a prefix or a full path,
                                            e.g. ``[prop, xyz]`` for a struct or ``[prop,
                                            foo]`` for a string in the example, which
                                            depends on the particular scenario.
                                          items:
                                            description: Specifies the segment in
                                              a path to retrieve value from Metadata.
                                              Currently it is only supported to specify
                                              the key, i.e. field name, as one segment
                                              of a path.
                                            properties:
                                              key:
                                                description: Required. If specified,
                                                  use the key to retrieve the value
                                                  in a Struct.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    source:
                                      description: Source of metadata
                                      enum:
                                      - DYNAMIC
                                      - ROUTE_ENTRY
                                      type: string
                                  type: object
                                remoteAddress:
                                  description: Rate limit on remote address.
                                  type: object
                                requestHeaders:
                                  description: Rate limit on request headers.
                                  properties:
                                    descriptorKey:
                                      description: The key to use in the descriptor
                                        entry.
                                      type: string
                                    headerName:
                                      description: The header name to be queried from
                                        the request headers. The header’s value is
                                        used to populate the value of the descriptor
                                        entry for the descriptor_key.
                                      type: string
                                  type: object
                                sourceCluster:
                                  description: Rate limit on source cluster.
                                  type: object
                              type: object
                            type: array
                          setActions:
                            items:
                              description: Copied directly from envoy https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-ratelimit-action
                              properties:
                                destinationCluster:
                                  description: Rate limit on destination cluster.
                                  type: object
                                genericKey:
                                  description: Rate limit on a generic key.
                                  properties:
                                    descriptorValue:
                                      description: The value to use in the descriptor
                                        entry.
                                      type: string
                                  type: object
                                headerValueMatch:
                                  description: Rate limit on the existence of request
                                    headers.
                                  properties:
                                    descriptorValue:
                                      description: The value to use in the descriptor
                                        entry.
                                      type: string
                                    expectMatch:
                                      description: If set to true, the action will
                                        append a descriptor entry when the request
                                        matches the headers. If set to false, the
                                        action will append a descriptor entry when
                                        the request does not match the headers. The
                                        default value is true.
                                      nullable: true
                                      type: boolean
                                    headers:
                                      description: Specifies a set of headers that
                                        the rate limit action should match on. The
                                        action will check the request’s headers against
                                        all the specified headers in the config. A
                                        match will happen if all the headers in the
                                        config are present in the request with the
                                        same values (or based on presence if the value
                                        field is not in the config).
                                      items:
                                        properties:
                                          exactMatch:
                                            description: If specified, header match
                                              will be performed based on the value
                                              of the header.
                                            type: string
                                          invertMatch:
                                            description: If specified, the match result
                                              will be inverted before checking. Defaults
                                              to false.
                                            type: boolean
                                          name:
                                            description: Specifies the name of the
                                              header in the request.
                                            type: string
                                          prefixMatch:
                                            description: 'If specified, header match
                                              will be performed based on the prefix
                                              of the header value. Note: empty prefix
                                              is not allowed, please use present_match
                                              instead.'
                                            type: string
                                          presentMatch:
                                            description: If specified, header match
                                              will be performed based on whether the
                                              header is in the request.
                                            type: boolean
                                          rangeMatch:
                                            description: 'If specified, header match
                                              will be performed based on range. The
                                              rule will match if the request header
                                              value is within this range. The entire
                                              request header value must represent
                                              an integer in base 10 notation: consisting
                                              of an optional plus or minus sign followed
                                              by a sequence of digits. The rule will
                                              not match if the header value does not
                                              represent an integer. Match will fail
                                              for empty values, floating point numbers
                                              or if only a subsequence of the header
                                              value is an integer.'
                                            properties:
                                              end:
                                                description: end of the range (exclusive)
                                                format: int64
                                                type: integer
                                              start:
                                                description: start of the range (inclusive)
                                                format: int64
                                                type: integer
                                            type: object
                                          regexMatch:
                                            description: If specified, this regex
                                              string is a regular expression rule
                                              which implies the entire request header
                                              value must match the regex. The rule
                                              will not match if only a subsequence
                                              of the request header value matches
                                              the regex. The regex grammar used in
                                              the value field is defined `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.
                                            type: string
                                          suffixMatch:
                                            description: 'If specified, header match
                                              will be performed based on the suffix
                                              of the header value. Note: empty suffix
                                              is not allowed, please use present_match
                                              instead.'
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                metadata:
                                  description: Rate limit on metadata.
                                  properties:
                                    defaultValue:
                                      description: An optional value to use if *metadata_key*
                                        is empty. If not set and no value is present
                                        under the metadata_key then no descriptor
                                        is generated.
                                      type: string
                                    descriptorKey:
                                      description: Required. The key to use in the
                                        descriptor entry.
                                      type: string
                                    metadataKey:
                                      description: Required. Metadata struct that
                                        defines the key and path to retrieve the string
                                        value. A match will only happen if the value
                                        in the metadata is of type string.
                                      properties:
                                        key:
                                          description: Required. The key name of Metadata
                                            to retrieve the Struct from the metadata.
                                            Typically, it represents a builtin subsystem
                                            or custom extension.
                                          type: string
                                        path:
                                          description: Must have at least one element.
                                            The path to retrieve the Value from the
                                            Struct. It can be a prefix or a full path,
                                            e.g. ``[prop, xyz]`` for a struct or ``[prop,
                                            foo]`` for a string in the example, which
                                            depends on the particular scenario.
                                          items:
                                            description: Specifies the segment in
                                              a path to retrieve value from Metadata.
                                              Currently it is only supported to specify
                                              the key, i.e. field name, as one segment
                                              of a path.
                                            properties:
                                              key:
                                                description: Required. If specified,
                                                  use the key to retrieve the value
                                                  in a Struct.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    source:
                                      description: Source of metadata
                                      enum:
                                      - DYNAMIC
                                      - ROUTE_ENTRY
                                      type: string
                                  type: object
                                remoteAddress:
                                  description: Rate limit on remote address.
                                  type: object
                                requestHeaders:
                                  description: Rate limit on request headers.
                                  properties:
                                    descriptorKey:
                                      description: The key to use in the descriptor
                                        entry.
                                      type: string
                                    headerName:
                                      description: The header name to be queried from
                                        the request headers. The header’s value is
                                        used to populate the value of the descriptor
                                        entry for the descriptor_key.
                                      type: string
                                  type: object
                                sourceCluster:
                                  description: Rate limit on source cluster.
                                  type: object
                              type: object
                            type: array
                        type: object
                      type: array
                  type: object
                ratelimitBasic:
                  description: 'Enterprise-only: Config for GlooE rate-limiting using
                    simplified (gloo-specific) API'
                  properties:
                    anonymousLimits:
                      properties:
                        requestsPerUnit:
                          format: int32
                          type: integer
                        unit:
                          enum:
                          - UNKNOWN
                          - SECOND
                          - MINUTE
                          - HOUR
                          - DAY
                          type: string
                      type: object
                    authorizedLimits:
                      properties:
                        requestsPerUnit:
                          format: int32
                          type: integer
                        unit:
                          enum:
                          - UNKNOWN
                          - SECOND
                          - MINUTE
                          - HOUR
                          - DAY
                          type: string
                      type: object
                  type: object
                rbac:
                  description: 'Enterprise-only: Config for RBAC (currently only supports
                    RBAC based on JWT claims)'
                  properties:
                    disable:
                      description: Disable RBAC checks on this resource (default false).
                        This is useful to allow access to static resources/login page
                        without RBAC checks. If provided on a route, all route settings
                        override any vhost settings
                      type: boolean
                    policies:
                      additionalProperties:
                        properties:
                          permissions:
                            description: Permissions granted to the principals.
                            properties:
                              methods:
                                description: What http methods (GET, POST, ...) are
                                  allowed.
                                items:
                                  type: string
                                type: array
                              pathPrefix:
                                description: Paths that have this prefix will be allowed.
                                type: string
                            type: object
                          principals:
                            description: Principals in this policy.
                            items:
                              description: An RBAC principal - the identity entity
                                (usually a user or a service account).
                              properties:
                                jwtPrincipal:
                                  properties:
                                    claims:
                                      additionalProperties:
                                        type: string
                                      description: Set of claims that make up this
                                        principal. Commonly, the 'iss' and 'sub' or
                                        'email' claims are used. all claims must be
                                        present on the JWT.
                                      type: object
                                    provider:
                                      description: Verify that the JWT came from a
                                        specific provider. This usually can be left
                                        empty and a provider will be chosen automatically.
                                      type: string
                                  type: object
                              type: object
                            type: array
                        type: object
                      description: Named policies to apply.
                      type: object
                  type: object
                retries:
                  properties:
                    numRetries:
                      description: Specifies the allowed number of retries. This parameter
                        is optional and defaults to 1. These are the same conditions
                        [documented for Envoy](https://www.envoyproxy.io/docs/envoy/v1.14.1/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-retry-on)
                      format: int32
                      type: integer
                    perTryTimeout:
                      description: Specifies a non-zero upstream timeout per retry
                        attempt. This parameter is optional.
                      type: string
                    retryOn:
                      description: Specifies the conditions under which retry takes
                        place. These are the same conditions [documented for Envoy](https://www.envoyproxy.io/docs/envoy/v1.14.1/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-retry-on)
                      type: string
                  type: object
                stagedTransformations:
                  description: Early transformations stage. These transformations
                    run before most other options are processed. If the `regular`
                    field is set in here, the `transformations` field is ignored.
                  properties:
                    early:
                      description: Early transformations happen before most other
                        options (Like Auth and Rate Limit).
                      properties:
                        requestTransforms:
                          description: Transformations to apply on the request. The
                            first request that matches will apply.
                          items:
                            properties:
                              clearRouteCache:
                                description: Should we clear the route cache if a
                                  transformation was matched.
                                type: boolean
                              matcher:
                                description: Matches on the request properties.
                                properties:
                                  caseSensitive:
                                    description: Indicates that prefix/path matching
                                      should be case sensitive. The default is true.
                                    nullable: true
                                    type: boolean
                                  exact:
                                    description: If specified, the route is an exact
                                      path rule meaning that the path must exactly
                                      match the *:path* header once the query string
                                      is removed.
                                    type: string
                                  headers:
                                    description: Specifies a set of headers that the
                                      route should match on. The router will check
                                      the request’s headers against all the specified
                                      headers in the route config. A match will happen
                                      if all the headers in the route are present
                                      in the request with the same values (or based
                                      on presence if the value field is not in the
                                      config).
                                    items:
                                      description: Internally, Gloo always uses the
                                        HTTP/2 *:authority* header to represent the
                                        HTTP/1 *Host* header. Thus, if attempting
                                        to match on *Host*, match on *:authority*
                                        instead.
                                      properties:
                                        invertMatch:
                                          description: If set to true, the result
                                            of the match will be inverted. Defaults
                                            to false.
                                          type: boolean
                                        name:
                                          description: Specifies the name of the header
                                            in the request.
                                          type: string
                                        regex:
                                          description: Specifies whether the header
                                            value should be treated as regex or not.
                                          type: boolean
                                        value:
                                          description: Specifies the value of the
                                            header. If the value is absent a request
                                            that has the name header will match, regardless
                                            of the header’s value.
                                          type: string
                                      type: object
                                    type: array
                                  methods:
                                    description: HTTP Method/Verb(s) to match on.
                                      If none specified, the matcher will ignore the
                                      HTTP Method
                                    items:
                                      type: string
                                    type: array
                                  prefix:
                                    description: If specified, the route is a prefix
                                      rule meaning that the prefix must match the
                                      beginning of the *:path* header.
                                    type: string
                                  queryParameters:
                                    description: Specifies a set of URL query parameters
                                      on which the route should match. The router
                                      will check the query string from the *path*
                                      header against all the specified query parameters.
                                      If the number of specified query parameters
                                      is nonzero, they all must match the *path* header's
                                      query string for a match to occur.
                                    items:
                                      description: Query parameter matching treats
                                        the query string of a request's :path header
                                        as an ampersand-separated list of keys and/or
                                        key=value elements.
                                      properties:
                                        name:
                                          description: Specifies the name of a key
                                            that must be present in the requested
                                            *path*'s query string.
                                          type: string
                                        regex:
                                          description: Specifies whether the query
                                            parameter value is a regular expression.
                                            Defaults to false. The entire query parameter
                                            value (i.e., the part to the right of
                                            the equals sign in "key=value") must match
                                            the regex. E.g., the regex "\d+$" will
                                            match "123" but not "a123" or "123a".
                                          type: boolean
                                        value:
                                          description: Specifies the value of the
                                            key. If the value is absent, a request
                                            that contains the key in its query string
                                            will match, whether the key appears with
                                            a value (e.g., "?debug=true") or not (e.g.,
                                            "?debug")
                                          type: string
                                      type: object
                                    type: array
                                  regex:
                                    description: If specified, the route is a regular
                                      expression rule meaning that the regex must
                                      match the *:path* header once the query string
                                      is removed. The entire path (without the query
                                      string) must match the regex. The rule will
                                      not match if only a sub-sequence of the *:path*
                                      header matches the regex. The regex grammar
                                      is defined `here <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
                                    type: string
                                type: object
                              requestTransformation:
                                description: Transformation to apply on the request.
                                properties:
                                  headerBodyTransform:
                                    description: 'This type of transformation will
                                      make all the headers available in the response
                                      body. The resulting JSON body will consist of
                                      two attributes: ''headers'', containing the
                                      headers, and ''body'', containing the original
                                      body.'
                                    type: object
                                  transformationTemplate:
                                    description: Apply transformation templates.
                                    properties:
                                      advancedTemplates:
                                        description: If set to true, use JSON pointer
                                          notation (e.g. "time/start") instead of
                                          dot notation (e.g. "time.start") to access
                                          JSON elements. Defaults to false.
                                        type: boolean
                                      body:
                                        description: Apply a template to the body
                                        properties:
                                          text:
                                            type: string
                                        type: object
                                      dynamicMetadataValues:
                                        description: Use this field to set Dynamic
                                          Metadata.
                                        items:
                                          description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                            entry.
                                          properties:
                                            key:
                                              description: The metadata key.
                                              type: string
                                            metadataNamespace:
                                              description: The metadata namespace.
                                                Defaults to the filter namespace.
                                              type: string
                                            value:
                                              description: A template that determines
                                                the metadata value.
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      extractors:
                                        additionalProperties:
                                          properties:
                                            body:
                                              description: Extract information from
                                                the request/response body
                                              maxProperties: 0
                                              type: object
                                            header:
                                              description: Extract information from
                                                headers
                                              type: string
                                            regex:
                                              description: Only strings matching this
                                                regular expression will be part of
                                                the extraction. The most simple value
                                                for this field is '.*', which matches
                                                the whole source. The field is required.
                                                If extraction fails the result is
                                                an empty value.
                                              type: string
                                            subgroup:
                                              description: If your regex contains
                                                capturing groups, use this field to
                                                determine which group should be selected.
                                              format: int32
                                              type: integer
                                          type: object
                                        description: Use this attribute to extract
                                          information from the request. It consists
                                          of a map of strings to extractors. The extractor
                                          will defines which information will be extracted,
                                          while the string key will provide the extractor
                                          with a name. You can reference extractors
                                          by their name in templates, e.g. "{{ my-extractor
                                          }}" will render to the value of the "my-extractor"
                                          extractor.
                                        type: object
                                      headers:
                                        additionalProperties:
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                        description: 'Use this attribute to transform
                                          request/response headers. It consists of
                                          a map of strings to templates. The string
                                          key determines the name of the resulting
                                          header, the rendered template will determine
                                          the value. Any existing headers with the
                                          same header name will be replaced by the
                                          transformed header. If a header name is
                                          included in `headers` and `headers_to_append`,
                                          it will first be replaced the template in
                                          `headers`, then additional header values
                                          will be appended by the templates defined
                                          in `headers_to_append`. For example, the
                                          following header transformation configuration:'
                                        type: object
                                      headersToAppend:
                                        description: Use this attribute to transform
                                          request/response headers. It consists of
                                          an array of string/template objects. Use
                                          this attribute to define multiple templates
                                          for a single header. Header template(s)
                                          defined here will be appended to any existing
                                          headers with the same header name, not replace
                                          existing ones. See `headers` documentation
                                          to see an example of usage.
                                        items:
                                          description: Defines a header-template pair
                                            to be used in `headers_to_append`
                                          properties:
                                            key:
                                              description: Header name
                                              type: string
                                            value:
                                              description: Apply a template to the
                                                header value
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      ignoreErrorOnParse:
                                        description: If set to true, Envoy will not
                                          throw an exception in case the body parsing
                                          fails.
                                        type: boolean
                                      mergeExtractorsToBody:
                                        description: Merge all defined extractors
                                          to the request/response body. If you want
                                          to nest elements inside the body, use dot
                                          separator in the extractor name.
                                        type: object
                                      parseBodyBehavior:
                                        enum:
                                        - ParseAsJson
                                        - DontParse
                                        type: string
                                      passthrough:
                                        description: This will cause the transformation
                                          filter not to buffer the body. Use this
                                          setting if the response body is large and
                                          you don't need to transform nor extract
                                          information from it.
                                        type: object
                                    type: object
                                  xsltTransformation:
                                    description: '(Enterprise Only): Xslt Transformation'
                                    properties:
                                      nonXmlTransform:
                                        description: This should be set to true if
                                          the content being transformed is not XML.
                                          For example, if the content being transformed
                                          is from JSON to XML, this should be set
                                          to true. XSLT transformations can only take
                                          valid XML as input to be transformed. If
                                          the body is not a valid XML (e.g. using
                                          JSON as input in a JSON-to-XML transformation),
                                          setting `non_xml_transform` to true will
                                          allow the XSLT to accept the non-XML input
                                          without throwing an error by passing the
                                          input as XML CDATA. defaults to false.
                                        type: boolean
                                      setContentType:
                                        description: Changes the content-type header
                                          of the HTTP request/response to what is
                                          set here. This is useful in situations where
                                          an XSLT transformation is used to transform
                                          XML to JSON and the content-type should
                                          be changed from `application/xml` to `application/json`.
                                          If left empty, the content-type header remains
                                          unmodified by default.
                                        type: string
                                      xslt:
                                        description: XSLT transformation template
                                          which you want to transform requests/responses
                                          with. Invalid XSLT transformation templates
                                          will result will result in a NACK during
                                          envoy configuration-time and the configuration
                                          will not be loaded.
                                        type: string
                                    type: object
                                type: object
                              responseTransformation:
                                description: Transformation to apply on the response.
                                properties:
                                  headerBodyTransform:
                                    description: 'This type of transformation will
                                      make all the headers available in the response
                                      body. The resulting JSON body will consist of
                                      two attributes: ''headers'', containing the
                                      headers, and ''body'', containing the original
                                      body.'
                                    type: object
                                  transformationTemplate:
                                    description: Apply transformation templates.
                                    properties:
                                      advancedTemplates:
                                        description: If set to true, use JSON pointer
                                          notation (e.g. "time/start") instead of
                                          dot notation (e.g. "time.start") to access
                                          JSON elements. Defaults to false.
                                        type: boolean
                                      body:
                                        description: Apply a template to the body
                                        properties:
                                          text:
                                            type: string
                                        type: object
                                      dynamicMetadataValues:
                                        description: Use this field to set Dynamic
                                          Metadata.
                                        items:
                                          description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                            entry.
                                          properties:
                                            key:
                                              description: The metadata key.
                                              type: string
                                            metadataNamespace:
                                              description: The metadata namespace.
                                                Defaults to the filter namespace.
                                              type: string
                                            value:
                                              description: A template that determines
                                                the metadata value.
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      extractors:
                                        additionalProperties:
                                          properties:
                                            body:
                                              description: Extract information from
                                                the request/response body
                                              maxProperties: 0
                                              type: object
                                            header:
                                              description: Extract information from
                                                headers
                                              type: string
                                            regex:
                                              description: Only strings matching this
                                                regular expression will be part of
                                                the extraction. The most simple value
                                                for this field is '.*', which matches
                                                the whole source. The field is required.
                                                If extraction fails the result is
                                                an empty value.
                                              type: string
                                            subgroup:
                                              description: If your regex contains
                                                capturing groups, use this field to
                                                determine which group should be selected.
                                              format: int32
                                              type: integer
                                          type: object
                                        description: Use this attribute to extract
                                          information from the request. It consists
                                          of a map of strings to extractors. The extractor
                                          will defines which information will be extracted,
                                          while the string key will provide the extractor
                                          with a name. You can reference extractors
                                          by their name in templates, e.g. "{{ my-extractor
                                          }}" will render to the value of the "my-extractor"
                                          extractor.
                                        type: object
                                      headers:
                                        additionalProperties:
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                        description: 'Use this attribute to transform
                                          request/response headers. It consists of
                                          a map of strings to templates. The string
                                          key determines the name of the resulting
                                          header, the rendered template will determine
                                          the value. Any existing headers with the
                                          same header name will be replaced by the
                                          transformed header. If a header name is
                                          included in `headers` and `headers_to_append`,
                                          it will first be replaced the template in
                                          `headers`, then additional header values
                                          will be appended by the templates defined
                                          in `headers_to_append`. For example, the
                                          following header transformation configuration:'
                                        type: object
                                      headersToAppend:
                                        description: Use this attribute to transform
                                          request/response headers. It consists of
                                          an array of string/template objects. Use
                                          this attribute to define multiple templates
                                          for a single header. Header template(s)
                                          defined here will be appended to any existing
                                          headers with the same header name, not replace
                                          existing ones. See `headers` documentation
                                          to see an example of usage.
                                        items:
                                          description: Defines a header-template pair
                                            to be used in `headers_to_append`
                                          properties:
                                            key:
                                              description: Header name
                                              type: string
                                            value:
                                              description: Apply a template to the
                                                header value
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      ignoreErrorOnParse:
                                        description: If set to true, Envoy will not
                                          throw an exception in case the body parsing
                                          fails.
                                        type: boolean
                                      mergeExtractorsToBody:
                                        description: Merge all defined extractors
                                          to the request/response body. If you want
                                          to nest elements inside the body, use dot
                                          separator in the extractor name.
                                        type: object
                                      parseBodyBehavior:
                                        enum:
                                        - ParseAsJson
                                        - DontParse
                                        type: string
                                      passthrough:
                                        description: This will cause the transformation
                                          filter not to buffer the body. Use this
                                          setting if the response body is large and
                                          you don't need to transform nor extract
                                          information from it.
                                        type: object
                                    type: object
                                  xsltTransformation:
                                    description: '(Enterprise Only): Xslt Transformation'
                                    properties:
                                      nonXmlTransform:
                                        description: This should be set to true if
                                          the content being transformed is not XML.
                                          For example, if the content being transformed
                                          is from JSON to XML, this should be set
                                          to true. XSLT transformations can only take
                                          valid XML as input to be transformed. If
                                          the body is not a valid XML (e.g. using
                                          JSON as input in a JSON-to-XML transformation),
                                          setting `non_xml_transform` to true will
                                          allow the XSLT to accept the non-XML input
                                          without throwing an error by passing the
                                          input as XML CDATA. defaults to false.
                                        type: boolean
                                      setContentType:
                                        description: Changes the content-type header
                                          of the HTTP request/response to what is
                                          set here. This is useful in situations where
                                          an XSLT transformation is used to transform
                                          XML to JSON and the content-type should
                                          be changed from `application/xml` to `application/json`.
                                          If left empty, the content-type header remains
                                          unmodified by default.
                                        type: string
                                      xslt:
                                        description: XSLT transformation template
                                          which you want to transform requests/responses
                                          with. Invalid XSLT transformation templates
                                          will result will result in a NACK during
                                          envoy configuration-time and the configuration
                                          will not be loaded.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                        responseTransforms:
                          description: Transformations to apply on the response. This
                            field is only consulted if there is no response transformation
                            in the matched `request_transforms`. i.e. Only one response
                            transformation will be executed. The first response transformation
                            that matches will apply.
                          items:
                            properties:
                              matchers:
                                description: Response headers to match on.
                                items:
                                  description: Internally, Gloo always uses the HTTP/2
                                    *:authority* header to represent the HTTP/1 *Host*
                                    header. Thus, if attempting to match on *Host*,
                                    match on *:authority* instead.
                                  properties:
                                    invertMatch:
                                      description: If set to true, the result of the
                                        match will be inverted. Defaults to false.
                                      type: boolean
                                    name:
                                      description: Specifies the name of the header
                                        in the request.
                                      type: string
                                    regex:
                                      description: Specifies whether the header value
                                        should be treated as regex or not.
                                      type: boolean
                                    value:
                                      description: Specifies the value of the header.
                                        If the value is absent a request that has
                                        the name header will match, regardless of
                                        the header’s value.
                                      type: string
                                  type: object
                                type: array
                              responseCodeDetails:
                                description: Response code detail to match on. To
                                  see the response code details for your usecase,
                                  you can use the envoy access log %RESPONSE_CODE_DETAILS%
                                  formatter to log it.
                                type: string
                              responseTransformation:
                                description: Transformation to apply on the response.
                                properties:
                                  headerBodyTransform:
                                    description: 'This type of transformation will
                                      make all the headers available in the response
                                      body. The resulting JSON body will consist of
                                      two attributes: ''headers'', containing the
                                      headers, and ''body'', containing the original
                                      body.'
                                    type: object
                                  transformationTemplate:
                                    description: Apply transformation templates.
                                    properties:
                                      advancedTemplates:
                                        description: If set to true, use JSON pointer
                                          notation (e.g. "time/start") instead of
                                          dot notation (e.g. "time.start") to access
                                          JSON elements. Defaults to false.
                                        type: boolean
                                      body:
                                        description: Apply a template to the body
                                        properties:
                                          text:
                                            type: string
                                        type: object
                                      dynamicMetadataValues:
                                        description: Use this field to set Dynamic
                                          Metadata.
                                        items:
                                          description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                            entry.
                                          properties:
                                            key:
                                              description: The metadata key.
                                              type: string
                                            metadataNamespace:
                                              description: The metadata namespace.
                                                Defaults to the filter namespace.
                                              type: string
                                            value:
                                              description: A template that determines
                                                the metadata value.
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      extractors:
                                        additionalProperties:
                                          properties:
                                            body:
                                              description: Extract information from
                                                the request/response body
                                              maxProperties: 0
                                              type: object
                                            header:
                                              description: Extract information from
                                                headers
                                              type: string
                                            regex:
                                              description: Only strings matching this
                                                regular expression will be part of
                                                the extraction. The most simple value
                                                for this field is '.*', which matches
                                                the whole source. The field is required.
                                                If extraction fails the result is
                                                an empty value.
                                              type: string
                                            subgroup:
                                              description: If your regex contains
                                                capturing groups, use this field to
                                                determine which group should be selected.
                                              format: int32
                                              type: integer
                                          type: object
                                        description: Use this attribute to extract
                                          information from the request. It consists
                                          of a map of strings to extractors. The extractor
                                          will defines which information will be extracted,
                                          while the string key will provide the extractor
                                          with a name. You can reference extractors
                                          by their name in templates, e.g. "{{ my-extractor
                                          }}" will render to the value of the "my-extractor"
                                          extractor.
                                        type: object
                                      headers:
                                        additionalProperties:
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                        description: 'Use this attribute to transform
                                          request/response headers. It consists of
                                          a map of strings to templates. The string
                                          key determines the name of the resulting
                                          header, the rendered template will determine
                                          the value. Any existing headers with the
                                          same header name will be replaced by the
                                          transformed header. If a header name is
                                          included in `headers` and `headers_to_append`,
                                          it will first be replaced the template in
                                          `headers`, then additional header values
                                          will be appended by the templates defined
                                          in `headers_to_append`. For example, the
                                          following header transformation configuration:'
                                        type: object
                                      headersToAppend:
                                        description: Use this attribute to transform
                                          request/response headers. It consists of
                                          an array of string/template objects. Use
                                          this attribute to define multiple templates
                                          for a single header. Header template(s)
                                          defined here will be appended to any existing
                                          headers with the same header name, not replace
                                          existing ones. See `headers` documentation
                                          to see an example of usage.
                                        items:
                                          description: Defines a header-template pair
                                            to be used in `headers_to_append`
                                          properties:
                                            key:
                                              description: Header name
                                              type: string
                                            value:
                                              description: Apply a template to the
                                                header value
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      ignoreErrorOnParse:
                                        description: If set to true, Envoy will not
                                          throw an exception in case the body parsing
                                          fails.
                                        type: boolean
                                      mergeExtractorsToBody:
                                        description: Merge all defined extractors
                                          to the request/response body. If you want
                                          to nest elements inside the body, use dot
                                          separator in the extractor name.
                                        type: object
                                      parseBodyBehavior:
                                        enum:
                                        - ParseAsJson
                                        - DontParse
                                        type: string
                                      passthrough:
                                        description: This will cause the transformation
                                          filter not to buffer the body. Use this
                                          setting if the response body is large and
                                          you don't need to transform nor extract
                                          information from it.
                                        type: object
                                    type: object
                                  xsltTransformation:
                                    description: '(Enterprise Only): Xslt Transformation'
                                    properties:
                                      nonXmlTransform:
                                        description: This should be set to true if
                                          the content being transformed is not XML.
                                          For example, if the content being transformed
                                          is from JSON to XML, this should be set
                                          to true. XSLT transformations can only take
                                          valid XML as input to be transformed. If
                                          the body is not a valid XML (e.g. using
                                          JSON as input in a JSON-to-XML transformation),
                                          setting `non_xml_transform` to true will
                                          allow the XSLT to accept the non-XML input
                                          without throwing an error by passing the
                                          input as XML CDATA. defaults to false.
                                        type: boolean
                                      setContentType:
                                        description: Changes the content-type header
                                          of the HTTP request/response to what is
                                          set here. This is useful in situations where
                                          an XSLT transformation is used to transform
                                          XML to JSON and the content-type should
                                          be changed from `application/xml` to `application/json`.
                                          If left empty, the content-type header remains
                                          unmodified by default.
                                        type: string
                                      xslt:
                                        description: XSLT transformation template
                                          which you want to transform requests/responses
                                          with. Invalid XSLT transformation templates
                                          will result will result in a NACK during
                                          envoy configuration-time and the configuration
                                          will not be loaded.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                      type: object
                    inheritTransformation:
                      description: Inherit transformation config from parent. This
                        has no affect on VirtualHost level transformations. If a RouteTable
                        or Route wants to inherit transformations from it's parent
                        RouteTable or VirtualHost, this should be set to true, else
                        transformations from parents will not be inherited. Transformations
                        are ordered so the child's transformation gets priority, so
                        in the case where a child and parent's transformation matchers
                        are the same, only the child's transformation will run because
                        only one transformation will run per stage. Defaults to false.
                      type: boolean
                    regular:
                      description: Regular transformations happen after Auth and Rate
                        limit decisions has been made.
                      properties:
                        requestTransforms:
                          description: Transformations to apply on the request. The
                            first request that matches will apply.
                          items:
                            properties:
                              clearRouteCache:
                                description: Should we clear the route cache if a
                                  transformation was matched.
                                type: boolean
                              matcher:
                                description: Matches on the request properties.
                                properties:
                                  caseSensitive:
                                    description: Indicates that prefix/path matching
                                      should be case sensitive. The default is true.
                                    nullable: true
                                    type: boolean
                                  exact:
                                    description: If specified, the route is an exact
                                      path rule meaning that the path must exactly
                                      match the *:path* header once the query string
                                      is removed.
                                    type: string
                                  headers:
                                    description: Specifies a set of headers that the
                                      route should match on. The router will check
                                      the request’s headers against all the specified
                                      headers in the route config. A match will happen
                                      if all the headers in the route are present
                                      in the request with the same values (or based
                                      on presence if the value field is not in the
                                      config).
                                    items:
                                      description: Internally, Gloo always uses the
                                        HTTP/2 *:authority* header to represent the
                                        HTTP/1 *Host* header. Thus, if attempting
                                        to match on *Host*, match on *:authority*
                                        instead.
                                      properties:
                                        invertMatch:
                                          description: If set to true, the result
                                            of the match will be inverted. Defaults
                                            to false.
                                          type: boolean
                                        name:
                                          description: Specifies the name of the header
                                            in the request.
                                          type: string
                                        regex:
                                          description: Specifies whether the header
                                            value should be treated as regex or not.
                                          type: boolean
                                        value:
                                          description: Specifies the value of the
                                            header. If the value is absent a request
                                            that has the name header will match, regardless
                                            of the header’s value.
                                          type: string
                                      type: object
                                    type: array
                                  methods:
                                    description: HTTP Method/Verb(s) to match on.
                                      If none specified, the matcher will ignore the
                                      HTTP Method
                                    items:
                                      type: string
                                    type: array
                                  prefix:
                                    description: If specified, the route is a prefix
                                      rule meaning that the prefix must match the
                                      beginning of the *:path* header.
                                    type: string
                                  queryParameters:
                                    description: Specifies a set of URL query parameters
                                      on which the route should match. The router
                                      will check the query string from the *path*
                                      header against all the specified query parameters.
                                      If the number of specified query parameters
                                      is nonzero, they all must match the *path* header's
                                      query string for a match to occur.
                                    items:
                                      description: Query parameter matching treats
                                        the query string of a request's :path header
                                        as an ampersand-separated list of keys and/or
                                        key=value elements.
                                      properties:
                                        name:
                                          description: Specifies the name of a key
                                            that must be present in the requested
                                            *path*'s query string.
                                          type: string
                                        regex:
                                          description: Specifies whether the query
                                            parameter value is a regular expression.
                                            Defaults to false. The entire query parameter
                                            value (i.e., the part to the right of
                                            the equals sign in "key=value") must match
                                            the regex. E.g., the regex "\d+$" will
                                            match "123" but not "a123" or "123a".
                                          type: boolean
                                        value:
                                          description: Specifies the value of the
                                            key. If the value is absent, a request
                                            that contains the key in its query string
                                            will match, whether the key appears with
                                            a value (e.g., "?debug=true") or not (e.g.,
                                            "?debug")
                                          type: string
                                      type: object
                                    type: array
                                  regex:
                                    description: If specified, the route is a regular
                                      expression rule meaning that the regex must
                                      match the *:path* header once the query string
                                      is removed. The entire path (without the query
                                      string) must match the regex. The rule will
                                      not match if only a sub-sequence of the *:path*
                                      header matches the regex. The regex grammar
                                      is defined `here <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
                                    type: string
                                type: object
                              requestTransformation:
                                description: Transformation to apply on the request.
                                properties:
                                  headerBodyTransform:
                                    description: 'This type of transformation will
                                      make all the headers available in the response
                                      body. The resulting JSON body will consist of
                                      two attributes: ''headers'', containing the
                                      headers, and ''body'', containing the original
                                      body.'
                                    type: object
                                  transformationTemplate:
                                    description: Apply transformation templates.
                                    properties:
                                      advancedTemplates:
                                        description: If set to true, use JSON pointer
                                          notation (e.g. "time/start") instead of
                                          dot notation (e.g. "time.start") to access
                                          JSON elements. Defaults to false.
                                        type: boolean
                                      body:
                                        description: Apply a template to the body
                                        properties:
                                          text:
                                            type: string
                                        type: object
                                      dynamicMetadataValues:
                                        description: Use this field to set Dynamic
                                          Metadata.
                                        items:
                                          description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                            entry.
                                          properties:
                                            key:
                                              description: The metadata key.
                                              type: string
                                            metadataNamespace:
                                              description: The metadata namespace.
                                                Defaults to the filter namespace.
                                              type: string
                                            value:
                                              description: A template that determines
                                                the metadata value.
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      extractors:
                                        additionalProperties:
                                          properties:
                                            body:
                                              description: Extract information from
                                                the request/response body
                                              maxProperties: 0
                                              type: object
                                            header:
                                              description: Extract information from
                                                headers
                                              type: string
                                            regex:
                                              description: Only strings matching this
                                                regular expression will be part of
                                                the extraction. The most simple value
                                                for this field is '.*', which matches
                                                the whole source. The field is required.
                                                If extraction fails the result is
                                                an empty value.
                                              type: string
                                            subgroup:
                                              description: If your regex contains
                                                capturing groups, use this field to
                                                determine which group should be selected.
                                              format: int32
                                              type: integer
                                          type: object
                                        description: Use this attribute to extract
                                          information from the request. It consists
                                          of a map of strings to extractors. The extractor
                                          will defines which information will be extracted,
                                          while the string key will provide the extractor
                                          with a name. You can reference extractors
                                          by their name in templates, e.g. "{{ my-extractor
                                          }}" will render to the value of the "my-extractor"
                                          extractor.
                                        type: object
                                      headers:
                                        additionalProperties:
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                        description: 'Use this attribute to transform
                                          request/response headers. It consists of
                                          a map of strings to templates. The string
                                          key determines the name of the resulting
                                          header, the rendered template will determine
                                          the value. Any existing headers with the
                                          same header name will be replaced by the
                                          transformed header. If a header name is
                                          included in `headers` and `headers_to_append`,
                                          it will first be replaced the template in
                                          `headers`, then additional header values
                                          will be appended by the templates defined
                                          in `headers_to_append`. For example, the
                                          following header transformation configuration:'
                                        type: object
                                      headersToAppend:
                                        description: Use this attribute to transform
                                          request/response headers. It consists of
                                          an array of string/template objects. Use
                                          this attribute to define multiple templates
                                          for a single header. Header template(s)
                                          defined here will be appended to any existing
                                          headers with the same header name, not replace
                                          existing ones. See `headers` documentation
                                          to see an example of usage.
                                        items:
                                          description: Defines a header-template pair
                                            to be used in `headers_to_append`
                                          properties:
                                            key:
                                              description: Header name
                                              type: string
                                            value:
                                              description: Apply a template to the
                                                header value
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      ignoreErrorOnParse:
                                        description: If set to true, Envoy will not
                                          throw an exception in case the body parsing
                                          fails.
                                        type: boolean
                                      mergeExtractorsToBody:
                                        description: Merge all defined extractors
                                          to the request/response body. If you want
                                          to nest elements inside the body, use dot
                                          separator in the extractor name.
                                        type: object
                                      parseBodyBehavior:
                                        enum:
                                        - ParseAsJson
                                        - DontParse
                                        type: string
                                      passthrough:
                                        description: This will cause the transformation
                                          filter not to buffer the body. Use this
                                          setting if the response body is large and
                                          you don't need to transform nor extract
                                          information from it.
                                        type: object
                                    type: object
                                  xsltTransformation:
                                    description: '(Enterprise Only): Xslt Transformation'
                                    properties:
                                      nonXmlTransform:
                                        description: This should be set to true if
                                          the content being transformed is not XML.
                                          For example, if the content being transformed
                                          is from JSON to XML, this should be set
                                          to true. XSLT transformations can only take
                                          valid XML as input to be transformed. If
                                          the body is not a valid XML (e.g. using
                                          JSON as input in a JSON-to-XML transformation),
                                          setting `non_xml_transform` to true will
                                          allow the XSLT to accept the non-XML input
                                          without throwing an error by passing the
                                          input as XML CDATA. defaults to false.
                                        type: boolean
                                      setContentType:
                                        description: Changes the content-type header
                                          of the HTTP request/response to what is
                                          set here. This is useful in situations where
                                          an XSLT transformation is used to transform
                                          XML to JSON and the content-type should
                                          be changed from `application/xml` to `application/json`.
                                          If left empty, the content-type header remains
                                          unmodified by default.
                                        type: string
                                      xslt:
                                        description: XSLT transformation template
                                          which you want to transform requests/responses
                                          with. Invalid XSLT transformation templates
                                          will result will result in a NACK during
                                          envoy configuration-time and the configuration
                                          will not be loaded.
                                        type: string
                                    type: object
                                type: object
                              responseTransformation:
                                description: Transformation to apply on the response.
                                properties:
                                  headerBodyTransform:
                                    description: 'This type of transformation will
                                      make all the headers available in the response
                                      body. The resulting JSON body will consist of
                                      two attributes: ''headers'', containing the
                                      headers, and ''body'', containing the original
                                      body.'
                                    type: object
                                  transformationTemplate:
                                    description: Apply transformation templates.
                                    properties:
                                      advancedTemplates:
                                        description: If set to true, use JSON pointer
                                          notation (e.g. "time/start") instead of
                                          dot notation (e.g. "time.start") to access
                                          JSON elements. Defaults to false.
                                        type: boolean
                                      body:
                                        description: Apply a template to the body
                                        properties:
                                          text:
                                            type: string
                                        type: object
                                      dynamicMetadataValues:
                                        description: Use this field to set Dynamic
                                          Metadata.
                                        items:
                                          description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                            entry.
                                          properties:
                                            key:
                                              description: The metadata key.
                                              type: string
                                            metadataNamespace:
                                              description: The metadata namespace.
                                                Defaults to the filter namespace.
                                              type: string
                                            value:
                                              description: A template that determines
                                                the metadata value.
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      extractors:
                                        additionalProperties:
                                          properties:
                                            body:
                                              description: Extract information from
                                                the request/response body
                                              maxProperties: 0
                                              type: object
                                            header:
                                              description: Extract information from
                                                headers
                                              type: string
                                            regex:
                                              description: Only strings matching this
                                                regular expression will be part of
                                                the extraction. The most simple value
                                                for this field is '.*', which matches
                                                the whole source. The field is required.
                                                If extraction fails the result is
                                                an empty value.
                                              type: string
                                            subgroup:
                                              description: If your regex contains
                                                capturing groups, use this field to
                                                determine which group should be selected.
                                              format: int32
                                              type: integer
                                          type: object
                                        description: Use this attribute to extract
                                          information from the request. It consists
                                          of a map of strings to extractors. The extractor
                                          will defines which information will be extracted,
                                          while the string key will provide the extractor
                                          with a name. You can reference extractors
                                          by their name in templates, e.g. "{{ my-extractor
                                          }}" will render to the value of the "my-extractor"
                                          extractor.
                                        type: object
                                      headers:
                                        additionalProperties:
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                        description: 'Use this attribute to transform
                                          request/response headers. It consists of
                                          a map of strings to templates. The string
                                          key determines the name of the resulting
                                          header, the rendered template will determine
                                          the value. Any existing headers with the
                                          same header name will be replaced by the
                                          transformed header. If a header name is
                                          included in `headers` and `headers_to_append`,
                                          it will first be replaced the template in
                                          `headers`, then additional header values
                                          will be appended by the templates defined
                                          in `headers_to_append`. For example, the
                                          following header transformation configuration:'
                                        type: object
                                      headersToAppend:
                                        description: Use this attribute to transform
                                          request/response headers. It consists of
                                          an array of string/template objects. Use
                                          this attribute to define multiple templates
                                          for a single header. Header template(s)
                                          defined here will be appended to any existing
                                          headers with the same header name, not replace
                                          existing ones. See `headers` documentation
                                          to see an example of usage.
                                        items:
                                          description: Defines a header-template pair
                                            to be used in `headers_to_append`
                                          properties:
                                            key:
                                              description: Header name
                                              type: string
                                            value:
                                              description: Apply a template to the
                                                header value
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      ignoreErrorOnParse:
                                        description: If set to true, Envoy will not
                                          throw an exception in case the body parsing
                                          fails.
                                        type: boolean
                                      mergeExtractorsToBody:
                                        description: Merge all defined extractors
                                          to the request/response body. If you want
                                          to nest elements inside the body, use dot
                                          separator in the extractor name.
                                        type: object
                                      parseBodyBehavior:
                                        enum:
                                        - ParseAsJson
                                        - DontParse
                                        type: string
                                      passthrough:
                                        description: This will cause the transformation
                                          filter not to buffer the body. Use this
                                          setting if the response body is large and
                                          you don't need to transform nor extract
                                          information from it.
                                        type: object
                                    type: object
                                  xsltTransformation:
                                    description: '(Enterprise Only): Xslt Transformation'
                                    properties:
                                      nonXmlTransform:
                                        description: This should be set to true if
                                          the content being transformed is not XML.
                                          For example, if the content being transformed
                                          is from JSON to XML, this should be set
                                          to true. XSLT transformations can only take
                                          valid XML as input to be transformed. If
                                          the body is not a valid XML (e.g. using
                                          JSON as input in a JSON-to-XML transformation),
                                          setting `non_xml_transform` to true will
                                          allow the XSLT to accept the non-XML input
                                          without throwing an error by passing the
                                          input as XML CDATA. defaults to false.
                                        type: boolean
                                      setContentType:
                                        description: Changes the content-type header
                                          of the HTTP request/response to what is
                                          set here. This is useful in situations where
                                          an XSLT transformation is used to transform
                                          XML to JSON and the content-type should
                                          be changed from `application/xml` to `application/json`.
                                          If left empty, the content-type header remains
                                          unmodified by default.
                                        type: string
                                      xslt:
                                        description: XSLT transformation template
                                          which you want to transform requests/responses
                                          with. Invalid XSLT transformation templates
                                          will result will result in a NACK during
                                          envoy configuration-time and the configuration
                                          will not be loaded.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                        responseTransforms:
                          description: Transformations to apply on the response. This
                            field is only consulted if there is no response transformation
                            in the matched `request_transforms`. i.e. Only one response
                            transformation will be executed. The first response transformation
                            that matches will apply.
                          items:
                            properties:
                              matchers:
                                description: Response headers to match on.
                                items:
                                  description: Internally, Gloo always uses the HTTP/2
                                    *:authority* header to represent the HTTP/1 *Host*
                                    header. Thus, if attempting to match on *Host*,
                                    match on *:authority* instead.
                                  properties:
                                    invertMatch:
                                      description: If set to true, the result of the
                                        match will be inverted. Defaults to false.
                                      type: boolean
                                    name:
                                      description: Specifies the name of the header
                                        in the request.
                                      type: string
                                    regex:
                                      description: Specifies whether the header value
                                        should be treated as regex or not.
                                      type: boolean
                                    value:
                                      description: Specifies the value of the header.
                                        If the value is absent a request that has
                                        the name header will match, regardless of
                                        the header’s value.
                                      type: string
                                  type: object
                                type: array
                              responseCodeDetails:
                                description: Response code detail to match on. To
                                  see the response code details for your usecase,
                                  you can use the envoy access log %RESPONSE_CODE_DETAILS%
                                  formatter to log it.
                                type: string
                              responseTransformation:
                                description: Transformation to apply on the response.
                                properties:
                                  headerBodyTransform:
                                    description: 'This type of transformation will
                                      make all the headers available in the response
                                      body. The resulting JSON body will consist of
                                      two attributes: ''headers'', containing the
                                      headers, and ''body'', containing the original
                                      body.'
                                    type: object
                                  transformationTemplate:
                                    description: Apply transformation templates.
                                    properties:
                                      advancedTemplates:
                                        description: If set to true, use JSON pointer
                                          notation (e.g. "time/start") instead of
                                          dot notation (e.g. "time.start") to access
                                          JSON elements. Defaults to false.
                                        type: boolean
                                      body:
                                        description: Apply a template to the body
                                        properties:
                                          text:
                                            type: string
                                        type: object
                                      dynamicMetadataValues:
                                        description: Use this field to set Dynamic
                                          Metadata.
                                        items:
                                          description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                            entry.
                                          properties:
                                            key:
                                              description: The metadata key.
                                              type: string
                                            metadataNamespace:
                                              description: The metadata namespace.
                                                Defaults to the filter namespace.
                                              type: string
                                            value:
                                              description: A template that determines
                                                the metadata value.
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      extractors:
                                        additionalProperties:
                                          properties:
                                            body:
                                              description: Extract information from
                                                the request/response body
                                              maxProperties: 0
                                              type: object
                                            header:
                                              description: Extract information from
                                                headers
                                              type: string
                                            regex:
                                              description: Only strings matching this
                                                regular expression will be part of
                                                the extraction. The most simple value
                                                for this field is '.*', which matches
                                                the whole source. The field is required.
                                                If extraction fails the result is
                                                an empty value.
                                              type: string
                                            subgroup:
                                              description: If your regex contains
                                                capturing groups, use this field to
                                                determine which group should be selected.
                                              format: int32
                                              type: integer
                                          type: object
                                        description: Use this attribute to extract
                                          information from the request. It consists
                                          of a map of strings to extractors. The extractor
                                          will defines which information will be extracted,
                                          while the string key will provide the extractor
                                          with a name. You can reference extractors
                                          by their name in templates, e.g. "{{ my-extractor
                                          }}" will render to the value of the "my-extractor"
                                          extractor.
                                        type: object
                                      headers:
                                        additionalProperties:
                                          properties:
                                            text:
                                              type: string
                                          type: object
                                        description: 'Use this attribute to transform
                                          request/response headers. It consists of
                                          a map of strings to templates. The string
                                          key determines the name of the resulting
                                          header, the rendered template will determine
                                          the value. Any existing headers with the
                                          same header name will be replaced by the
                                          transformed header. If a header name is
                                          included in `headers` and `headers_to_append`,
                                          it will first be replaced the template in
                                          `headers`, then additional header values
                                          will be appended by the templates defined
                                          in `headers_to_append`. For example, the
                                          following header transformation configuration:'
                                        type: object
                                      headersToAppend:
                                        description: Use this attribute to transform
                                          request/response headers. It consists of
                                          an array of string/template objects. Use
                                          this attribute to define multiple templates
                                          for a single header. Header template(s)
                                          defined here will be appended to any existing
                                          headers with the same header name, not replace
                                          existing ones. See `headers` documentation
                                          to see an example of usage.
                                        items:
                                          description: Defines a header-template pair
                                            to be used in `headers_to_append`
                                          properties:
                                            key:
                                              description: Header name
                                              type: string
                                            value:
                                              description: Apply a template to the
                                                header value
                                              properties:
                                                text:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      ignoreErrorOnParse:
                                        description: If set to true, Envoy will not
                                          throw an exception in case the body parsing
                                          fails.
                                        type: boolean
                                      mergeExtractorsToBody:
                                        description: Merge all defined extractors
                                          to the request/response body. If you want
                                          to nest elements inside the body, use dot
                                          separator in the extractor name.
                                        type: object
                                      parseBodyBehavior:
                                        enum:
                                        - ParseAsJson
                                        - DontParse
                                        type: string
                                      passthrough:
                                        description: This will cause the transformation
                                          filter not to buffer the body. Use this
                                          setting if the response body is large and
                                          you don't need to transform nor extract
                                          information from it.
                                        type: object
                                    type: object
                                  xsltTransformation:
                                    description: '(Enterprise Only): Xslt Transformation'
                                    properties:
                                      nonXmlTransform:
                                        description: This should be set to true if
                                          the content being transformed is not XML.
                                          For example, if the content being transformed
                                          is from JSON to XML, this should be set
                                          to true. XSLT transformations can only take
                                          valid XML as input to be transformed. If
                                          the body is not a valid XML (e.g. using
                                          JSON as input in a JSON-to-XML transformation),
                                          setting `non_xml_transform` to true will
                                          allow the XSLT to accept the non-XML input
                                          without throwing an error by passing the
                                          input as XML CDATA. defaults to false.
                                        type: boolean
                                      setContentType:
                                        description: Changes the content-type header
                                          of the HTTP request/response to what is
                                          set here. This is useful in situations where
                                          an XSLT transformation is used to transform
                                          XML to JSON and the content-type should
                                          be changed from `application/xml` to `application/json`.
                                          If left empty, the content-type header remains
                                          unmodified by default.
                                        type: string
                                      xslt:
                                        description: XSLT transformation template
                                          which you want to transform requests/responses
                                          with. Invalid XSLT transformation templates
                                          will result will result in a NACK during
                                          envoy configuration-time and the configuration
                                          will not be loaded.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                      type: object
                  type: object
                stats:
                  properties:
                    virtualClusters:
                      description: Virtual clusters allow exposing additional statistics
                        for traffic served by a Virtual Host.
                      items:
                        description: Virtual clusters allow you to expose statistics
                          for virtual host traffic that matches certain criteria.
                          This is useful because what the application considers to
                          be an endpoint does often not map directly to the routing
                          configuration, so Envoy does not emit per endpoint statistics.
                          Using virtual clusters you can define logical endpoints
                          and have Envoy emit dedicated statistics for any matching
                          request. Virtual cluster statistics are emitted on the downstream
                          side and thus include network level failures.
                        properties:
                          method:
                            description: If specified, statistics will be exposed
                              only for requests matching the given HTTP method.
                            type: string
                          name:
                            description: 'The name of the virtual cluster. This value
                              will be used together with the virtual host name to
                              compute the name of the statistics emitted by this virtual
                              cluster. Statistics names will be in the form: vhost.<virtual
                              host name>.vcluster.<virtual cluster name>.<stat name>.
                              See [the official Envoy documentation](https://www.envoyproxy.io/docs/envoy/v1.5.0/configuration/http_filters/router_filter#config-http-filters-router-stats)
                              for more information about the statistics emitted when
                              virtual cluster configurations are specified.'
                            type: string
                          pattern:
                            description: The regex pattern used by Envoy to decide
                              whether to expose statistics for a particular request.
                              Please note that **the entire path** of the request
                              must match the regex (e.g. the regex `/rides/d+` matches
                              the path `/rides/0`, but not `/rides/123/456`). The
                              regex grammar used is defined [here](https://en.cppreference.com/w/cpp/regex/ecmascript).
                            type: string
                        type: object
                      type: array
                  type: object
                transformations:
                  description: 'Transformations to apply. Note: this field is superseded
                    by `staged_transformations`. If `staged_transformations.regular`
                    is set, this field will be ignored.'
                  properties:
                    clearRouteCache:
                      description: Clear the route cache if the request transformation
                        was applied.
                      type: boolean
                    requestTransformation:
                      description: Apply a transformation to requests.
                      properties:
                        headerBodyTransform:
                          description: 'This type of transformation will make all
                            the headers available in the response body. The resulting
                            JSON body will consist of two attributes: ''headers'',
                            containing the headers, and ''body'', containing the original
                            body.'
                          type: object
                        transformationTemplate:
                          description: Apply transformation templates.
                          properties:
                            advancedTemplates:
                              description: If set to true, use JSON pointer notation
                                (e.g. "time/start") instead of dot notation (e.g.
                                "time.start") to access JSON elements. Defaults to
                                false.
                              type: boolean
                            body:
                              description: Apply a template to the body
                              properties:
                                text:
                                  type: string
                              type: object
                            dynamicMetadataValues:
                              description: Use this field to set Dynamic Metadata.
                              items:
                                description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                  entry.
                                properties:
                                  key:
                                    description: The metadata key.
                                    type: string
                                  metadataNamespace:
                                    description: The metadata namespace. Defaults
                                      to the filter namespace.
                                    type: string
                                  value:
                                    description: A template that determines the metadata
                                      value.
                                    properties:
                                      text:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            extractors:
                              additionalProperties:
                                properties:
                                  body:
                                    description: Extract information from the request/response
                                      body
                                    maxProperties: 0
                                    type: object
                                  header:
                                    description: Extract information from headers
                                    type: string
                                  regex:
                                    description: Only strings matching this regular
                                      expression will be part of the extraction. The
                                      most simple value for this field is '.*', which
                                      matches the whole source. The field is required.
                                      If extraction fails the result is an empty value.
                                    type: string
                                  subgroup:
                                    description: If your regex contains capturing
                                      groups, use this field to determine which group
                                      should be selected.
                                    format: int32
                                    type: integer
                                type: object
                              description: Use this attribute to extract information
                                from the request. It consists of a map of strings
                                to extractors. The extractor will defines which information
                                will be extracted, while the string key will provide
                                the extractor with a name. You can reference extractors
                                by their name in templates, e.g. "{{ my-extractor
                                }}" will render to the value of the "my-extractor"
                                extractor.
                              type: object
                            headers:
                              additionalProperties:
                                properties:
                                  text:
                                    type: string
                                type: object
                              description: 'Use this attribute to transform request/response
                                headers. It consists of a map of strings to templates.
                                The string key determines the name of the resulting
                                header, the rendered template will determine the value.
                                Any existing headers with the same header name will
                                be replaced by the transformed header. If a header
                                name is included in `headers` and `headers_to_append`,
                                it will first be replaced the template in `headers`,
                                then additional header values will be appended by
                                the templates defined in `headers_to_append`. For
                                example, the following header transformation configuration:'
                              type: object
                            headersToAppend:
                              description: Use this attribute to transform request/response
                                headers. It consists of an array of string/template
                                objects. Use this attribute to define multiple templates
                                for a single header. Header template(s) defined here
                                will be appended to any existing headers with the
                                same header name, not replace existing ones. See `headers`
                                documentation to see an example of usage.
                              items:
                                description: Defines a header-template pair to be
                                  used in `headers_to_append`
                                properties:
                                  key:
                                    description: Header name
                                    type: string
                                  value:
                                    description: Apply a template to the header value
                                    properties:
                                      text:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            ignoreErrorOnParse:
                              description: If set to true, Envoy will not throw an
                                exception in case the body parsing fails.
                              type: boolean
                            mergeExtractorsToBody:
                              description: Merge all defined extractors to the request/response
                                body. If you want to nest elements inside the body,
                                use dot separator in the extractor name.
                              type: object
                            parseBodyBehavior:
                              enum:
                              - ParseAsJson
                              - DontParse
                              type: string
                            passthrough:
                              description: This will cause the transformation filter
                                not to buffer the body. Use this setting if the response
                                body is large and you don't need to transform nor
                                extract information from it.
                              type: object
                          type: object
                        xsltTransformation:
                          description: '(Enterprise Only): Xslt Transformation'
                          properties:
                            nonXmlTransform:
                              description: This should be set to true if the content
                                being transformed is not XML. For example, if the
                                content being transformed is from JSON to XML, this
                                should be set to true. XSLT transformations can only
                                take valid XML as input to be transformed. If the
                                body is not a valid XML (e.g. using JSON as input
                                in a JSON-to-XML transformation), setting `non_xml_transform`
                                to true will allow the XSLT to accept the non-XML
                                input without throwing an error by passing the input
                                as XML CDATA. defaults to false.
                              type: boolean
                            setContentType:
                              description: Changes the content-type header of the
                                HTTP request/response to what is set here. This is
                                useful in situations where an XSLT transformation
                                is used to transform XML to JSON and the content-type
                                should be changed from `application/xml` to `application/json`.
                                If left empty, the content-type header remains unmodified
                                by default.
                              type: string
                            xslt:
                              description: XSLT transformation template which you
                                want to transform requests/responses with. Invalid
                                XSLT transformation templates will result will result
                                in a NACK during envoy configuration-time and the
                                configuration will not be loaded.
                              type: string
                          type: object
                      type: object
                    responseTransformation:
                      description: Apply a transformation to responses.
                      properties:
                        headerBodyTransform:
                          description: 'This type of transformation will make all
                            the headers available in the response body. The resulting
                            JSON body will consist of two attributes: ''headers'',
                            containing the headers, and ''body'', containing the original
                            body.'
                          type: object
                        transformationTemplate:
                          description: Apply transformation templates.
                          properties:
                            advancedTemplates:
                              description: If set to true, use JSON pointer notation
                                (e.g. "time/start") instead of dot notation (e.g.
                                "time.start") to access JSON elements. Defaults to
                                false.
                              type: boolean
                            body:
                              description: Apply a template to the body
                              properties:
                                text:
                                  type: string
                              type: object
                            dynamicMetadataValues:
                              description: Use this field to set Dynamic Metadata.
                              items:
                                description: Defines an [Envoy Dynamic Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                  entry.
                                properties:
                                  key:
                                    description: The metadata key.
                                    type: string
                                  metadataNamespace:
                                    description: The metadata namespace. Defaults
                                      to the filter namespace.
                                    type: string
                                  value:
                                    description: A template that determines the metadata
                                      value.
                                    properties:
                                      text:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            extractors:
                              additionalProperties:
                                properties:
                                  body:
                                    description: Extract information from the request/response
                                      body
                                    maxProperties: 0
                                    type: object
                                  header:
                                    description: Extract information from headers
                                    type: string
                                  regex:
                                    description: Only strings matching this regular
                                      expression will be part of the extraction. The
                                      most simple value for this field is '.*', which
                                      matches the whole source. The field is required.
                                      If extraction fails the result is an empty value.
                                    type: string
                                  subgroup:
                                    description: If your regex contains capturing
                                      groups, use this field to determine which group
                                      should be selected.
                                    format: int32
                                    type: integer
                                type: object
                              description: Use this attribute to extract information
                                from the request. It consists of a map of strings
                                to extractors. The extractor will defines which information
                                will be extracted, while the string key will provide
                                the extractor with a name. You can reference extractors
                                by their name in templates, e.g. "{{ my-extractor
                                }}" will render to the value of the "my-extractor"
                                extractor.
                              type: object
                            headers:
                              additionalProperties:
                                properties:
                                  text:
                                    type: string
                                type: object
                              description: 'Use this attribute to transform request/response
                                headers. It consists of a map of strings to templates.
                                The string key determines the name of the resulting
                                header, the rendered template will determine the value.
                                Any existing headers with the same header name will
                                be replaced by the transformed header. If a header
                                name is included in `headers` and `headers_to_append`,
                                it will first be replaced the template in `headers`,
                                then additional header values will be appended by
                                the templates defined in `headers_to_append`. For
                                example, the following header transformation configuration:'
                              type: object
                            headersToAppend:
                              description: Use this attribute to transform request/response
                                headers. It consists of an array of string/template
                                objects. Use this attribute to define multiple templates
                                for a single header. Header template(s) defined here
                                will be appended to any existing headers with the
                                same header name, not replace existing ones. See `headers`
                                documentation to see an example of usage.
                              items:
                                description: Defines a header-template pair to be
                                  used in `headers_to_append`
                                properties:
                                  key:
                                    description: Header name
                                    type: string
                                  value:
                                    description: Apply a template to the header value
                                    properties:
                                      text:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            ignoreErrorOnParse:
                              description: If set to true, Envoy will not throw an
                                exception in case the body parsing fails.
                              type: boolean
                            mergeExtractorsToBody:
                              description: Merge all defined extractors to the request/response
                                body. If you want to nest elements inside the body,
                                use dot separator in the extractor name.
                              type: object
                            parseBodyBehavior:
                              enum:
                              - ParseAsJson
                              - DontParse
                              type: string
                            passthrough:
                              description: This will cause the transformation filter
                                not to buffer the body. Use this setting if the response
                                body is large and you don't need to transform nor
                                extract information from it.
                              type: object
                          type: object
                        xsltTransformation:
                          description: '(Enterprise Only): Xslt Transformation'
                          properties:
                            nonXmlTransform:
                              description: This should be set to true if the content
                                being transformed is not XML. For example, if the
                                content being transformed is from JSON to XML, this
                                should be set to true. XSLT transformations can only
                                take valid XML as input to be transformed. If the
                                body is not a valid XML (e.g. using JSON as input
                                in a JSON-to-XML transformation), setting `non_xml_transform`
                                to true will allow the XSLT to accept the non-XML
                                input without throwing an error by passing the input
                                as XML CDATA. defaults to false.
                              type: boolean
                            setContentType:
                              description: Changes the content-type header of the
                                HTTP request/response to what is set here. This is
                                useful in situations where an XSLT transformation
                                is used to transform XML to JSON and the content-type
                                should be changed from `application/xml` to `application/json`.
                                If left empty, the content-type header remains unmodified
                                by default.
                              type: string
                            xslt:
                              description: XSLT transformation template which you
                                want to transform requests/responses with. Invalid
                                XSLT transformation templates will result will result
                                in a NACK during envoy configuration-time and the
                                configuration will not be loaded.
                              type: string
                          type: object
                      type: object
                  type: object
                waf:
                  description: 'Enterprise-only: Config for Web Application Firewall
                    (WAF), supporting the popular ModSecurity 3.0 ruleset'
                  properties:
                    auditLogging:
                      description: Audit Log settings
                      properties:
                        action:
                          enum:
                          - NEVER
                          - RELEVANT_ONLY
                          - ALWAYS
                          type: string
                        location:
                          enum:
                          - FILTER_STATE
                          - DYNAMIC_METADATA
                          type: string
                      type: object
                    coreRuleSet:
                      description: Add OWASP core rule set if nil will not be added
                      properties:
                        customSettingsFile:
                          description: String representing the core rule set custom
                            config options
                          type: string
                        customSettingsString:
                          description: String representing the core rule set custom
                            config options
                          type: string
                      type: object
                    customInterventionMessage:
                      description: Custom massage to display if an intervention occurs.
                      type: string
                    disabled:
                      description: Disable waf on this resource (if omitted defaults
                        to false). If a route/virtual host is configured with WAF,
                        you must explicitly disable its WAF, i.e., it will not inherit
                        the disabled status of its parent
                      type: boolean
                    requestHeadersOnly:
                      description: Only process request headers, not buffering the
                        request body
                      type: boolean
                    responseHeadersOnly:
                      description: Only process response headers, not buffering the
                        response body
                      type: boolean
                    ruleSets:
                      description: Custom rule sets rules to add
                      items:
                        properties:
                          directory:
                            description: A directory to include. all *.conf files
                              in this directory will be included. sub directories
                              will NOT be checked.
                            type: string
                          files:
                            description: Array of files to include
                            items:
                              type: string
                            type: array
                          ruleStr:
                            description: String of rules which are added directly
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            status:
              description: Status indicates the validation status of this resource.
                Status is read-only by clients, and set by gateway during validation
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
        status:
          description: Status indicates the validation status of this resource. Status
            is read-only by clients, and set by gateway during validation
          type: object
          x-kubernetes-preserve-unknown-fields: true
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
