# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: destinations.discovery.mesh.gloo.solo.io
spec:
  group: discovery.mesh.gloo.solo.io
  names:
    kind: Destination
    listKind: DestinationList
    plural: destinations
    singular: destination
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The Destination is an abstraction for any entity capable of
            receiving networking requests.
          oneOf:
          - not:
              anyOf:
              - required:
                - kubeService
              - required:
                - externalService
          - required:
            - kubeService
          - required:
            - externalService
          properties:
            externalService:
              description: |-
                ExternalService is a Destination representing a service
                external to the Mesh. It can be used to expose a given hostname
                or IP address to all clusters in the Virtual Mesh.
              properties:
                addresses:
                  description: |-
                    The List of addresses which will resolve to this service for
                    services within the Virtual Mesh.
                  items:
                    type: string
                  type: array
                endpoints:
                  description: |-
                    List of endpoints, to which any requests to this Destionation
                    will be load balanced across.
                  items:
                    properties:
                      address:
                        description: The address of the external service. Can be a
                          domain or an IP.
                        type: string
                      ports:
                        additionalProperties:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        description: 'The port(s) of the external endpoint. Eg: `https:
                          443`'
                        type: object
                    type: object
                  type: array
                hosts:
                  description: |-
                    The list of hosts which will resolve to this Destination for
                    services within the Virtual Mesh.
                  items:
                    type: string
                  type: array
                name:
                  description: The name of the service
                  type: string
                ports:
                  description: The associated ports of the external service
                  items:
                    properties:
                      name:
                        description: A label for the port, eg "http"
                        type: string
                      number:
                        description: The port number. Must be a valid, non-negative
                          integer port number.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      protocol:
                        description: |-
                          The protocol used in communications with this Destination
                          MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.
                        type: string
                    type: object
                  type: array
              type: object
            kubeService:
              description: |-
                KubeService is a kube-native Destination representing a kubernetes
                service running inside of a kubernetes cluster.
              properties:
                endpointSubsets:
                  description: |-
                    Each endpoints subset is a group of endpoints arranged in terms of IP/port pairs.
                    This API mirrors the [Kubernetes Endpoints API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#endpoints-v1-core).
                  items:
                    properties:
                      endpoints:
                        items:
                          properties:
                            ipAddress:
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels which belong to this IP. These are
                                taken from the backing workload instance.
                              type: object
                            subLocality:
                              description: The zone and sub-zone (if controlled by
                                Istio) of the endpoint.
                              properties:
                                subZone:
                                  description: A subdivision of zone. Only applies
                                    to Istio-controlled Destinations, see [here](https://istio.io/latest/docs/tasks/traffic-management/locality-load-balancing/)
                                    for more information.
                                  type: string
                                zone:
                                  description: A subdivision of a geographical region,
                                    see [here](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesiozone)
                                    for more information.
                                  type: string
                              type: object
                          type: object
                        type: array
                      ports:
                        items:
                          properties:
                            appProtocol:
                              description: Available in Kubernetes 1.18+, describes
                                the application protocol.
                              type: string
                            name:
                              type: string
                            port:
                              description: External-facing port for this Kubernetes
                                service (*not* the service's target port on the targeted
                                pods).
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            protocol:
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                labels:
                  additionalProperties:
                    type: string
                  description: Labels on the Kubernetes service.
                  type: object
                ports:
                  description: The ports exposed by the underlying service.
                  items:
                    properties:
                      appProtocol:
                        description: Available in Kubernetes 1.18+, describes the
                          application protocol.
                        type: string
                      name:
                        type: string
                      port:
                        description: External-facing port for this Kubernetes service
                          (*not* the service's target port on the targeted pods).
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      protocol:
                        type: string
                    type: object
                  type: array
                ref:
                  description: Reference to the Kubernetes service object.
                  properties:
                    clusterName:
                      description: name of the cluster in which the resource exists
                      type: string
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                region:
                  description: The region the service resides in, typically representing
                    a large geographic area.
                  type: string
                subsets:
                  additionalProperties:
                    properties:
                      values:
                        items:
                          type: string
                        type: array
                    type: object
                  description: Subsets for routing, based on labels.
                  type: object
                workloadSelectorLabels:
                  additionalProperties:
                    type: string
                  description: Selectors for the set of pods targeted by the Kubernetes
                    service.
                  type: object
              type: object
            mesh:
              description: |-
                The mesh that controls this Destination. Can be omitted if the
                Destination isn't associated with any particular mesh, eg for External Services.
              properties:
                name:
                  description: name of the resource being referenced
                  type: string
                namespace:
                  description: namespace of the resource being referenced
                  type: string
              type: object
          type: object
        status:
          properties:
            appliedAccessPolicies:
              description: The set of AccessPolicies that have been applied to this
                Destination.
              items:
                properties:
                  observedGeneration:
                    description: The observed generation of the accepted AccessPolicy.
                    format: int64
                    type: integer
                  ref:
                    description: Reference to the AccessPolicy object.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  spec:
                    description: The spec of the last known valid AccessPolicy.
                    properties:
                      allowedMethods:
                        description: |-
                          Optional. A list of HTTP methods to allow (e.g., "GET", "POST").
                                 It is ignored in gRPC case because the value is always "POST".
                                 If not specified, allows any method.
                        items:
                          type: string
                        type: array
                      allowedPaths:
                        description: |-
                          Optional. A list of HTTP paths or gRPC methods to allow.
                                 gRPC methods must be presented as fully-qualified name in the form of
                                 "/packageName.serviceName/methodName" and are case sensitive.
                                 Exact match, prefix match, and suffix match are supported for paths.
                                 For example, the path "/books/review" matches
                                 "/books/review" (exact match), "*books/" (suffix match), or "/books*" (prefix match).

                                 If not specified, allow any path.
                        items:
                          type: string
                        type: array
                      allowedPorts:
                        description: |-
                          Optional. A list of ports which to allow.
                                 If not set any port is allowed.
                        items:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        type: array
                      destinationSelector:
                        description: |-
                          Specify the Destinations for which to apply this AccessPolicy.
                          Leave empty to apply the AccessPolicy to all Destinations.
                        items:
                          properties:
                            kubeServiceMatcher:
                              description: Match Kubernetes Services by their labels,
                                namespaces, and/or clusters.
                              properties:
                                clusters:
                                  description: |-
                                    If specified, match Kubernetes Services if they exist in one of the specified clusters.
                                               When used in a networking policy, omission matches any cluster.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    If specified, a match requires all labels to exist on a Kubernetes Service.
                                               When used in a networking policy, omission matches any labels.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any label key and/or value.
                                  type: object
                                namespaces:
                                  description: |-
                                    If specified, match Kubernetes Services if they exist in one of the specified namespaces.
                                               When used in a networking policy, omission matches any namespace.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            kubeServiceRefs:
                              description: Match Kubernetes Services by direct reference.
                              properties:
                                services:
                                  description: |-
                                    Match Kubernetes Services by direct reference.
                                               When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                                  items:
                                    properties:
                                      clusterName:
                                        description: name of the cluster in which
                                          the resource exists
                                        type: string
                                      name:
                                        description: name of the resource being referenced
                                        type: string
                                      namespace:
                                        description: namespace of the resource being
                                          referenced
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        type: array
                      sourceSelector:
                        description: |-
                          Specify the identities of Workloads (i.e. traffic sources) for which to apply this AccessPolicy.
                          Leave empty to apply the AccessPolicy to all Workloads colocated in the destination's Mesh.
                        items:
                          properties:
                            kubeIdentityMatcher:
                              description: Match request identities based on the Kubernetes
                                namespace and cluster.
                              properties:
                                clusters:
                                  description: |-
                                    If specified, match a Kubernetes identity if it exists in one of the specified clusters.
                                               When used in a networking policy, omission matches any cluster.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                                  items:
                                    type: string
                                  type: array
                                namespaces:
                                  description: |-
                                    If specified, match a Kubernetes identity if it exists in one of the specified namespaces.
                                               When used in a networking policy, omission matches any namespace.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            kubeServiceAccountRefs:
                              description: Match request identities based on the Kubernetes
                                service account of the request.
                              properties:
                                serviceAccounts:
                                  description: |-
                                    Match Kubernetes service accounts by direct reference.
                                               When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                                  items:
                                    properties:
                                      clusterName:
                                        description: name of the cluster in which
                                          the resource exists
                                        type: string
                                      name:
                                        description: name of the resource being referenced
                                        type: string
                                      namespace:
                                        description: namespace of the resource being
                                          referenced
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        type: array
                    type: object
                type: object
              type: array
            appliedFederation:
              description: Federation metadata. Only populated if this Destination
                is federated through a VirtualMesh.
              properties:
                federatedHostname:
                  description: |-
                    For any Workload that this Destination has been federated to (i.e., any Workload controlled by a Mesh whose reference appears in `federated_to_meshes`),
                               that Workload will be able to reach this Destination using this DNS name.
                               For Kubernetes Destinations this includes Workloads on clusters other than the one hosting this Destination.
                  type: string
                federatedToMeshes:
                  description: The list of Meshes which are able to resolve this Destination's
                    `multicluster_dns_name`.
                  items:
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  type: array
                flatNetwork:
                  description: |-
                    Whether or not the Destination has been federated to the given meshes using a VirtualMesh where
                    [Federation.FlatNetwork]({{< versioned_link_path fromRoot="/reference/api/github.com.solo-io.gloo-mesh.api.networking.v1alpha2.virtual_mesh/#virtualmeshspecfederation" >}})
                    is true.
                  type: boolean
              type: object
            appliedTrafficPolicies:
              description: The set of TrafficPolicies that have been applied to this
                Destination.
              items:
                properties:
                  observedGeneration:
                    description: The observed generation of the accepted TrafficPolicy.
                    format: int64
                    type: integer
                  ref:
                    description: Reference to the TrafficPolicy object.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  spec:
                    description: The spec of the last known valid TrafficPolicy.
                    properties:
                      destinationSelector:
                        description: |-
                          Specify the Destinations (destinations) this TrafficPolicy applies to.
                          Omit to apply to all Destinations.
                        items:
                          properties:
                            kubeServiceMatcher:
                              description: Match Kubernetes Services by their labels,
                                namespaces, and/or clusters.
                              properties:
                                clusters:
                                  description: |-
                                    If specified, match Kubernetes Services if they exist in one of the specified clusters.
                                               When used in a networking policy, omission matches any cluster.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    If specified, a match requires all labels to exist on a Kubernetes Service.
                                               When used in a networking policy, omission matches any labels.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any label key and/or value.
                                  type: object
                                namespaces:
                                  description: |-
                                    If specified, match Kubernetes Services if they exist in one of the specified namespaces.
                                               When used in a networking policy, omission matches any namespace.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            kubeServiceRefs:
                              description: Match Kubernetes Services by direct reference.
                              properties:
                                services:
                                  description: |-
                                    Match Kubernetes Services by direct reference.
                                               When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                                  items:
                                    properties:
                                      clusterName:
                                        description: name of the cluster in which
                                          the resource exists
                                        type: string
                                      name:
                                        description: name of the resource being referenced
                                        type: string
                                      namespace:
                                        description: namespace of the resource being
                                          referenced
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        type: array
                      httpRequestMatchers:
                        description: |-
                          Specify criteria that HTTP requests must satisfy for the TrafficPolicy to apply.
                          Conditions defined within a single matcher are conjunctive, i.e. all conditions must be satisfied for a match to occur.
                          Conditions defined between different matchers are disjunctive, i.e. at least one matcher must be satisfied for the TrafficPolicy to apply.
                          Omit to apply to any HTTP request.
                        items:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - prefix
                              - required:
                                - exact
                              - required:
                                - regex
                          - required:
                            - prefix
                          - required:
                            - exact
                          - required:
                            - regex
                          properties:
                            exact:
                              description: If specified, the targeted path must exactly
                                match the value.
                              type: string
                            headers:
                              description: Specify a set of headers which requests
                                must match in entirety (all headers must match).
                              items:
                                properties:
                                  invertMatch:
                                    description: |-
                                      If set to true, the result of the match will be inverted. Defaults to false.

                                         Examples:

                                             - name=foo, invert_match=true: matches if no header named `foo` is present
                                             - name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present
                                             - name=foo, value=``\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present.
                                    type: boolean
                                  name:
                                    description: Specify the name of the header in
                                      the request.
                                    type: string
                                  regex:
                                    description: Specify whether the header value
                                      should be treated as regex.
                                    type: boolean
                                  value:
                                    description: |-
                                      Specify the value of the header. If the value is absent a request that
                                      has the name header will match, regardless of the header’s value.
                                    type: string
                                type: object
                              type: array
                            method:
                              description: Specify an HTTP method to match against.
                              type: string
                            prefix:
                              description: If specified, the targeted path must begin
                                with the prefix.
                              type: string
                            queryParameters:
                              description: Specify a set of URL query parameters which
                                requests must match in entirety (all query params
                                must match).
                              items:
                                properties:
                                  name:
                                    description: Specify the name of a key that must
                                      be present in the requested path's query string.
                                    type: string
                                  regex:
                                    description: If true, treat `value` as a regular
                                      expression.
                                    type: boolean
                                  value:
                                    description: Specify the value of the query parameter
                                      keyed on `name`.
                                    type: string
                                type: object
                              type: array
                            regex:
                              description: If specified, the targeted path must match
                                the regex.
                              type: string
                          type: object
                        type: array
                      policy:
                        description: Specify L7 routing and post-routing configuration.
                        properties:
                          corsPolicy:
                            description: |-
                              Set a Cross-Origin Resource Sharing policy (CORS) for requests. Refer to [this link](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)
                              for further details about cross origin resource sharing.
                            properties:
                              allowCredentials:
                                description: |-
                                  Indicates whether the caller is allowed to send the actual request
                                  (not the preflight) using credentials. Translates to the
                                  `Access-Control-Allow-Credentials` header.
                                nullable: true
                                type: boolean
                              allowHeaders:
                                description: |-
                                  List of HTTP headers that can be used when requesting the
                                  resource. Serialized to the `Access-Control-Allow-Headers` header.
                                items:
                                  type: string
                                type: array
                              allowMethods:
                                description: |-
                                  List of HTTP methods allowed to access the resource. The content will
                                  be serialized to the `Access-Control-Allow-Methods` header.
                                items:
                                  type: string
                                type: array
                              allowOrigins:
                                description: String patterns that match allowed origins.
                                  An origin is allowed if any of the string matchers
                                  match.
                                items:
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - exact
                                      - required:
                                        - prefix
                                      - required:
                                        - regex
                                  - required:
                                    - exact
                                  - required:
                                    - prefix
                                  - required:
                                    - regex
                                  properties:
                                    exact:
                                      description: Exact string match.
                                      type: string
                                    prefix:
                                      description: Prefix-based match.
                                      type: string
                                    regex:
                                      description: ECMAscript style regex-based match.
                                      type: string
                                  type: object
                                type: array
                              exposeHeaders:
                                description: |-
                                  A list of HTTP headers that browsers are allowed to
                                  access. Serialized to the `Access-Control-Expose-Headers` header.
                                items:
                                  type: string
                                type: array
                              maxAge:
                                description: |-
                                  Specify how long the results of a preflight request can be
                                  cached. Serialized to the `Access-Control-Max-Age` header.
                                type: string
                            type: object
                          faultInjection:
                            description: Inject faulty responses.
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - fixedDelay
                                - required:
                                  - abort
                            - required:
                              - fixedDelay
                            - required:
                              - abort
                            properties:
                              abort:
                                description: Abort the request and return the specified
                                  error code back to traffic source.
                                properties:
                                  httpStatus:
                                    description: Required. HTTP status code to use
                                      to abort the request.
                                    format: int32
                                    type: integer
                                type: object
                              fixedDelay:
                                description: 'Add a delay of a fixed duration before
                                  sending the request. Format: `1h`/`1m`/`1s`/`1ms`.
                                  MUST be >=1ms.'
                                type: string
                              percentage:
                                description: Percentage of requests to be faulted.
                                  Values range between 0 and 100. If omitted all requests
                                  will be faulted.
                                format: double
                                type: number
                            type: object
                          headerManipulation:
                            description: Manipulate request and response headers.
                            properties:
                              appendRequestHeaders:
                                additionalProperties:
                                  type: string
                                description: Additional HTTP headers to add before
                                  forwarding a request to the destination service.
                                type: object
                              appendResponseHeaders:
                                additionalProperties:
                                  type: string
                                description: Additional HTTP headers to add before
                                  returning a response to the caller.
                                type: object
                              removeRequestHeaders:
                                description: HTTP headers to remove before forwarding
                                  a request to the destination service.
                                items:
                                  type: string
                                type: array
                              removeResponseHeaders:
                                description: HTTP headers to remove before returning
                                  a response to the caller.
                                items:
                                  type: string
                                type: array
                            type: object
                          mirror:
                            description: Mirror traffic to a another destination (traffic
                              will be sent to its original destination in addition
                              to the mirrored destinations).
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - kubeService
                            - required:
                              - kubeService
                            properties:
                              kubeService:
                                description: Reference (name, namespace, Gloo Mesh
                                  cluster) to a Kubernetes service.
                                properties:
                                  clusterName:
                                    description: name of the cluster in which the
                                      resource exists
                                    type: string
                                  name:
                                    description: name of the resource being referenced
                                    type: string
                                  namespace:
                                    description: namespace of the resource being referenced
                                    type: string
                                type: object
                              percentage:
                                description: Percentage of traffic to mirror. If omitted
                                  all traffic will be mirrored. Values must be between
                                  0 and 100.
                                format: double
                                type: number
                              port:
                                description: Port on the destination to receive traffic.
                                  Required if the destination exposes multiple ports.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                            type: object
                          mtls:
                            description: Configure mTLS settings. If specified will
                              override global default defined in Settings.
                            properties:
                              istio:
                                description: Istio TLS settings.
                                properties:
                                  tlsMode:
                                    description: TLS connection mode
                                    enum:
                                    - DISABLE
                                    - SIMPLE
                                    - ISTIO_MUTUAL
                                    type: string
                                type: object
                            type: object
                          outlierDetection:
                            description: |-
                              Configure [outlier detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier) on the selected destinations.
                              Specifying this field requires an empty `source_selector` because it must apply to all traffic.
                            properties:
                              baseEjectionTime:
                                description: 'The minimum ejection duration. Format:
                                  `1h`/`1m`/`1s`/`1ms`. Must be >= `1ms`. A default
                                  will be used if not set.'
                                type: string
                              consecutiveErrors:
                                description: The number of errors before a host is
                                  ejected from the connection pool. A default will
                                  be used if not set.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              interval:
                                description: 'The time interval between ejection sweep
                                  analysis. Format: `1h`/`1m`/`1s`/`1ms`. Must be
                                  >= `1ms`. A default will be used if not set.'
                                type: string
                              maxEjectionPercent:
                                description: |-
                                  The maximum percentage of hosts that can be ejected from the load balancing pool.
                                  At least one host will be ejected regardless of the value. Must be between 0 and 100. A default will be used if not set.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                            type: object
                          requestTimeout:
                            description: Set a timeout on requests.
                            type: string
                          retries:
                            description: Set a retry policy on requests.
                            properties:
                              attempts:
                                description: Number of retries for a given request
                                format: int32
                                type: integer
                              perTryTimeout:
                                description: 'Timeout per retry attempt for a given
                                  request. Format: `1h`/`1m`/`1s`/`1ms`. *Must be
                                  >= 1ms*.'
                                type: string
                            type: object
                          trafficShift:
                            description: Shift traffic to a different destination.
                            properties:
                              destinations:
                                description: Specify weighted traffic shift destinations.
                                items:
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - kubeService
                                      - required:
                                        - virtualDestination
                                  - required:
                                    - kubeService
                                  - required:
                                    - virtualDestination
                                  properties:
                                    kubeService:
                                      description: Specify a Kubernetes Service.
                                      properties:
                                        clusterName:
                                          description: The Gloo Mesh cluster name
                                            (registration name) of the service.
                                          type: string
                                        name:
                                          description: The name of the service.
                                          type: string
                                        namespace:
                                          description: The namespace of the service.
                                          type: string
                                        port:
                                          description: Port on the service to receive
                                            traffic. Required if the service exposes
                                            more than one port.
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        subset:
                                          additionalProperties:
                                            type: string
                                          description: Specify, by labels, a subset
                                            of service instances to route to.
                                          type: object
                                      type: object
                                    virtualDestination:
                                      description: Specify a VirtualDestination.
                                      properties:
                                        name:
                                          description: The name of the VirtualDestination
                                            object.
                                          type: string
                                        namespace:
                                          description: The namespace of the VirtualDestination
                                            object.
                                          type: string
                                        subset:
                                          additionalProperties:
                                            type: string
                                          description: Specify, by labels, a subset
                                            of service instances backing the VirtualDestination
                                            to route to.
                                          type: object
                                      type: object
                                    weight:
                                      description: |-
                                        Specify the proportion of traffic to be forwarded to this destination.
                                        Weights across all of the `destinations` must sum to 100.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                  type: object
                                type: array
                            type: object
                        type: object
                      sourceSelector:
                        description: |-
                          Specify the Workloads (traffic sources) this TrafficPolicy applies to.
                          Omit to apply to all Workloads.
                        items:
                          properties:
                            kubeWorkloadMatcher:
                              description: Match Kubernetes workloads by their labels,
                                namespaces, and/or clusters.
                              properties:
                                clusters:
                                  description: |-
                                    If specified, match Kubernetes workloads if they exist in one of the specified clusters.
                                               When used in a networking policy, omission matches any cluster.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    If specified, all labels must exist on Kubernetes workload.
                                           When used in a networking policy, omission matches any labels.
                                           When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any label key and/or value.
                                  type: object
                                namespaces:
                                  description: |-
                                    If specified, match Kubernetes workloads if they exist in one of the specified namespaces.
                                               When used in a networking policy, omission matches any namespace.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                    type: object
                type: object
              type: array
            localFqdn:
              description: |-
                The fully qualified domain name for requests originating from a source *coloated* with this Destination.
                For Kubernetes services, "colocated" means within the same Kubernetes cluster.
              type: string
            observedGeneration:
              description: |-
                The most recent generation observed in the the TrafficPolicy metadata.
                If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                recent version of this resource.
              format: int64
              type: integer
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: workloads.discovery.mesh.gloo.solo.io
spec:
  group: discovery.mesh.gloo.solo.io
  names:
    kind: Workload
    listKind: WorkloadList
    plural: workloads
    singular: workload
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: Describes a workload controlled by a discovered service mesh.
          oneOf:
          - not:
              anyOf:
              - required:
                - kubernetes
          - required:
            - kubernetes
          properties:
            appMesh:
              description: Metadata specific to an App Mesh controlled workload.
              properties:
                ports:
                  description: Ports exposed by this workload. Needed for declaring
                    App Mesh VirtualNode listeners.
                  items:
                    properties:
                      port:
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      protocol:
                        type: string
                    type: object
                  type: array
                virtualNodeName:
                  description: The value of the env var APPMESH_VIRTUAL_NODE_NAME
                    on the App Mesh envoy proxy container.
                  type: string
              type: object
            kubernetes:
              description: Information describing workloads backed by Kubernetes Pods.
              properties:
                controller:
                  description: Resource reference to the Kubernetes Pod controller
                    (i.e. Deployment, ReplicaSet, DaemonSet) for this Workload..
                  properties:
                    clusterName:
                      description: name of the cluster in which the resource exists
                      type: string
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                podLabels:
                  additionalProperties:
                    type: string
                  description: Labels on the Pod itself (read from `metadata.labels`),
                    which are used to determine which Services front this workload.
                  type: object
                serviceAccountName:
                  description: Service account associated with the Pods owned by this
                    controller.
                  type: string
              type: object
            mesh:
              description: The Mesh with which this Workload is associated.
              properties:
                name:
                  description: name of the resource being referenced
                  type: string
                namespace:
                  description: namespace of the resource being referenced
                  type: string
              type: object
          type: object
        status:
          properties:
            appliedAccessLogRecords:
              description: The set of AccessLogRecords that have been applied to this
                Workload.
              items:
                properties:
                  errors:
                    description: Any errors encountered while processing the AccessLogRecord
                      object
                    items:
                      type: string
                    type: array
                  observedGeneration:
                    description: The observed generation of the accepted AccessLogRecord.
                    format: int64
                    type: integer
                  ref:
                    description: Reference to the AccessLogRecord object.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                type: object
              type: array
            appliedWasmDeployments:
              description: The set of WasmDeployments that have been applied to this
                Workload.
              items:
                properties:
                  errors:
                    description: Any errors encountered while processing the WasmDeployment
                      object.
                    items:
                      type: string
                    type: array
                  observedGeneration:
                    description: The observed generation of the WasmDeployment.
                    format: int64
                    type: integer
                  ref:
                    description: Reference to the WasmDeployment object.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                type: object
              type: array
            observedGeneration:
              description: |-
                The observed generation of the Workload.
                When this matches the Workload's `metadata.generation` it indicates that Gloo Mesh
                has processed the latest version of the Workload.
              format: int64
              type: integer
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: meshes.discovery.mesh.gloo.solo.io
spec:
  group: discovery.mesh.gloo.solo.io
  names:
    kind: Mesh
    listKind: MeshList
    plural: meshes
    singular: mesh
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: Describes a service mesh control plane deployment.
          oneOf:
          - not:
              anyOf:
              - required:
                - istio
              - required:
                - awsAppMesh
              - required:
                - linkerd
              - required:
                - consulConnect
              - required:
                - osm
          - required:
            - istio
          - required:
            - awsAppMesh
          - required:
            - linkerd
          - required:
            - consulConnect
          - required:
            - osm
          properties:
            agentInfo:
              description: Describes the Gloo Mesh agent if it has been installed
                to the managed cluster.
              properties:
                agentNamespace:
                  description: The namespace in which the Gloo Mesh agent is installed.
                  type: string
              type: object
            awsAppMesh:
              description: Describes an [AWS App Mesh](https://aws.amazon.com/app-mesh/)
                service mesh.
              properties:
                arn:
                  description: The unique AWS ARN associated with the App Mesh instance.
                  type: string
                awsAccountId:
                  description: The AWS Account ID associated with the Mesh. Populated
                    at REST API registration time.
                  type: string
                awsName:
                  description: The AWS name for the App Mesh instance, must be unique
                    across all AppMesh instances owned by the AWS account.
                  type: string
                clusters:
                  description: The Kubernetes clusters on which sidecars for this
                    App Mesh instance have been discovered.
                  items:
                    type: string
                  type: array
                region:
                  description: The AWS region the App Mesh control plane resources
                    exist in.
                  type: string
              type: object
            consulConnect:
              description: Describes a [Consul Connect](https://www.consul.io/docs/connect)
                service mesh.
              properties:
                installation:
                  description: Describes the ConsulConnect control plane deployment.
                  properties:
                    cluster:
                      description: The Gloo Mesh cluster in which the control plane
                        has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: The labels on the control plane pods (read from
                        the deployment).
                      type: object
                    region:
                      description: |-
                        The region of the cluster in which the control plane has been installed, which is
                        determined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)
                        on any Kubernetes node associated with the cluster of this mesh.
                      type: string
                    version:
                      description: |-
                        The version of the Mesh that has been installed, which is determined using the image tag on the
                        mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
              type: object
            istio:
              description: Describes an [Istio](https://istio.io/) service mesh.
              properties:
                ingressGateways:
                  description: Describes the ingress gateway.
                  items:
                    properties:
                      externalAddress:
                        description: |-
                          The externally-reachable address on which the gateway is listening for TLS connections.
                          This will be the address used for cross-cluster connectivity.
                          Defaults to the LoadBalancer Address (or NodeIP) of the Kubernetes service (depending on its type).
                        type: string
                      externalTlsPort:
                        description: |-
                          The externally-reachable port on which the gateway is listening for TLS connections.
                          This will be the port used for cross-cluster connectivity.
                          See the list of [common ports used by Istio](https://istio.io/latest/docs/ops/deployment/requirements/#ports-used-by-istio).
                          Defaults to 15443 (or the NodePort) of the Kubernetes service (depending on its type).
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      tlsContainerPort:
                        description: |-
                          Container port on which the gateway is listening for TLS connections.
                          Defaults to 15443.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      workloadLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels matching the workload backing the gateway.
                          [Defaults to](https://github.com/istio/istio/blob/ab6cc48134a698d7ad218a83390fe27e8098919f/pkg/config/constants/constants.go#L73) `{"istio": "ingressgateway"}`.
                        type: object
                    type: object
                  type: array
                installation:
                  description: Describes the Istio control plane deployment.
                  properties:
                    cluster:
                      description: The Gloo Mesh cluster in which the control plane
                        has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: The labels on the control plane pods (read from
                        the deployment).
                      type: object
                    region:
                      description: |-
                        The region of the cluster in which the control plane has been installed, which is
                        determined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)
                        on any Kubernetes node associated with the cluster of this mesh.
                      type: string
                    version:
                      description: |-
                        The version of the Mesh that has been installed, which is determined using the image tag on the
                        mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
                istiodServiceAccount:
                  description: The istiod service account which determines identity
                    for the Istio CA cert.
                  type: string
                smartDnsProxyingEnabled:
                  description: True if smart DNS proxying is enabled, which allows
                    for arbitrary DNS domains.
                  type: boolean
                trustDomain:
                  description: |-
                    The Istio trust domain used for https/[spiffe](https://spiffe.io/spiffe/concepts/#trust-domain) [identity](https://istio.io/docs/reference/glossary/#identity).
                    If empty will default to ["cluster.local"](https://github.com/istio/istio/blob/e768f408a7de224e64ccdfb2634442541ce08e6a/pilot/cmd/pilot-agent/main.go#L118).
                  type: string
              type: object
            linkerd:
              description: Describes a [Linkerd](https://linkerd.io/) service mesh.
              properties:
                clusterDomain:
                  description: The cluster domain suffix this Linkerd mesh is configured
                    with. See [this reference](https://linkerd.io/2/tasks/using-custom-domain/)
                    for more info.
                  type: string
                installation:
                  description: Describes the Linkerd control plane deployment.
                  properties:
                    cluster:
                      description: The Gloo Mesh cluster in which the control plane
                        has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: The labels on the control plane pods (read from
                        the deployment).
                      type: object
                    region:
                      description: |-
                        The region of the cluster in which the control plane has been installed, which is
                        determined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)
                        on any Kubernetes node associated with the cluster of this mesh.
                      type: string
                    version:
                      description: |-
                        The version of the Mesh that has been installed, which is determined using the image tag on the
                        mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
              type: object
            osm:
              description: Describes an [Open Service Mesh](https://openservicemesh.io/)
                service mesh.
              properties:
                installation:
                  description: Describes the OSM control plane deployment.
                  properties:
                    cluster:
                      description: The Gloo Mesh cluster in which the control plane
                        has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: The labels on the control plane pods (read from
                        the deployment).
                      type: object
                    region:
                      description: |-
                        The region of the cluster in which the control plane has been installed, which is
                        determined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)
                        on any Kubernetes node associated with the cluster of this mesh.
                      type: string
                    version:
                      description: |-
                        The version of the Mesh that has been installed, which is determined using the image tag on the
                        mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
              type: object
          type: object
        status:
          properties:
            appliedVirtualDestinations:
              description: The VirtualDestinations, if any, which apply to this mesh.
              items:
                properties:
                  errors:
                    description: Any errors encountered while processing the VirtualDestination.
                    items:
                      type: string
                    type: array
                  observedGeneration:
                    description: The observed generation of the accepted VirtualDestination.
                    format: int64
                    type: integer
                  ref:
                    description: Reference to the applied VirtualDestination object.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                type: object
              type: array
            appliedVirtualMesh:
              description: The VirtualMesh, if any, which contains this mesh.
              properties:
                observedGeneration:
                  description: The observed generation of the accepted VirtualMesh.
                  format: int64
                  type: integer
                ref:
                  description: Reference to the applied VirtualMesh object.
                  properties:
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                spec:
                  description: The spec of the last known valid VirtualMesh.
                  properties:
                    federation:
                      description: Specify how to federate Destinations across service
                        mesh boundaries.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - permissive
                      - required:
                        - permissive
                      properties:
                        flatNetwork:
                          description: |-
                            If true, all multicluster traffic will be routed directly to the Kubernetes service endpoints of the Destinations,
                            rather than through an ingress gateway. This mode requires a flat network environment.
                            This feature is exclusive to Gloo Mesh Enterprise.
                          type: boolean
                        hostnameSuffix:
                          description: |-
                            Configure the suffix for hostnames of Destinations federated within this VirtualMesh.
                            Currently this is only supported for Istio with [smart DNS proxying enabled](https://istio.io/latest/blog/2020/dns-proxy/),
                            otherwise setting this field results in an error.
                            If omitted, the hostname suffix defaults to "global".
                          type: string
                        permissive:
                          description: Expose all Destinations to all Workloads in
                            this VirtualMesh.
                          maxProperties: 0
                          type: object
                      type: object
                    globalAccessPolicy:
                      description: Specify a global access policy for all Workloads
                        and Destinations associated with this VirtualMesh.
                      enum:
                      - MESH_DEFAULT
                      - ENABLED
                      - DISABLED
                      type: string
                    meshes:
                      description: Specify the Meshes configured by this VirtualMesh.
                      items:
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                      type: array
                    mtlsConfig:
                      description: Specify mTLS options.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - shared
                          - required:
                            - limited
                      - required:
                        - shared
                      - required:
                        - limited
                      properties:
                        autoRestartPods:
                          description: |-
                            Specify whether to allow Gloo Mesh to restart Kubernetes Pods when certificates are rotated when establishing shared trust.
                            If this option is not explicitly enabled,
                            users must restart Pods manually for the new certificates to be picked up.
                            `meshctl` provides the command `meshctl mesh restart` to simplify this process, see [here]({{< versioned_link_path fromRoot="reference/cli/meshctl_mesh_restart/" >}}) for more info.
                          type: boolean
                        limited:
                          description: Limited trust (selectively allow communication
                            between Workloads and Destinations in the grouped Meshes).
                            *Currently not available.*
                          type: object
                        shared:
                          description: Shared trust (allow communication between any
                            pair of Workloads and Destinations in the grouped Meshes).
                          properties:
                            rootCertificateAuthority:
                              description: |-
                                Configure a Root Certificate Authority which will be shared by all Meshes associated with this VirtualMesh.
                                If this is not provided, a self-signed certificate will be generated by Gloo Mesh.
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - generated
                                  - required:
                                    - secret
                              - required:
                                - generated
                              - required:
                                - secret
                              properties:
                                generated:
                                  description: Generate a self-signed root certificate
                                    with the given options.
                                  properties:
                                    orgName:
                                      description: Root cert organization name. Defaults
                                        to "gloo-mesh".
                                      type: string
                                    rsaKeySizeBytes:
                                      description: Size in bytes of the root cert's
                                        private key. Defaults to 4096.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    ttlDays:
                                      description: Number of days before root cert
                                        expires. Defaults to 365.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                  type: object
                                secret:
                                  description: |-
                                    Reference to a Kubernetes Secret containing the root certificate authority.
                                    Provided secrets must conform to a specified format, [documented here]({{< versioned_link_path fromRoot="/guides/federate_identity/" >}}).
                                  properties:
                                    name:
                                      description: name of the resource being referenced
                                      type: string
                                    namespace:
                                      description: namespace of the resource being
                                        referenced
                                      type: string
                                  type: object
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
            observedGeneration:
              description: |-
                The observed generation of the Mesh.
                When this matches the Mesh's metadata.generation, it indicates that Gloo Mesh
                has processed the latest version of the Mesh.
              format: int64
              type: integer
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true
