# Code generated by skv2. DO NOT EDIT.



{{- $enterpriseNetworking := $.Values.enterpriseNetworking}}
---

{{- define "enterprise-networking.deploymentSpec"}}

{{/* Define variables in function scope */}}
{{- $enterpriseNetworking := $.Values.enterpriseNetworking}}
{{- $enterpriseNetworkingImage := $enterpriseNetworking.image }}
{{- $enterpriseNetworkingExtraPodLabels := $enterpriseNetworking.extraPodLabels }}
{{- $enterpriseNetworkingExtraPodAnnotations := $enterpriseNetworking.extraPodAnnotations }}
{{- $enterpriseNetworkingExtraDeploymentLabels := $enterpriseNetworking.extraDeploymentLabels }}
{{- $enterpriseNetworkingExtraDeploymentAnnotations := $enterpriseNetworking.extraDeploymentAnnotations }}# Deployment manifest for enterprise-networking

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: enterprise-networking
    {{- range $key, $value := $enterpriseNetworkingExtraDeploymentLabels }}
    {{ $key }}: {{ $value }}
    {{- end }}
  annotations:
    app.kubernetes.io/name: enterprise-networking
    {{- range $key, $value := $enterpriseNetworkingExtraDeploymentAnnotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
  name: enterprise-networking
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: enterprise-networking
      {{- range $key, $value := $enterpriseNetworkingExtraPodLabels }}
      {{ $key }}: {{ $value }}
      {{- end }}
  template:
    metadata:
      labels:
        app: enterprise-networking
        {{- range $key, $value := $enterpriseNetworkingExtraPodLabels }}
        {{ $key }}: {{ $value }}
        {{- end }}
      annotations:
        app.kubernetes.io/name: enterprise-networking
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
        {{- range $key, $value := $enterpriseNetworkingExtraPodAnnotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      serviceAccountName: enterprise-networking
      containers:
      - image: {{ $enterpriseNetworkingImage.registry }}/{{ $enterpriseNetworkingImage.repository }}:{{ $enterpriseNetworkingImage.tag }}
        args:
        - networking
        - --metrics-port={{ $.Values.defaultMetricsPort }}
        - --settings-name={{ $.Values.glooMeshOperatorArgs.settingsRef.name }}
        - --settings-namespace={{ $.Values.glooMeshOperatorArgs.settingsRef.namespace }}
        - --verbose={{ $.Values.verbose }}
        - --disallow-intersecting-config={{ $.Values.disallowIntersectingConfig }}
        - --watch-output-types={{ $.Values.watchOutputTypes }}
        - --http-port={{ $.Values.enterpriseNetworking.ports.http }}
        - --grpc-port={{ $.Values.enterpriseNetworking.ports.grpc }}
        - --grpc-admin-port={{ $.Values.admin.port.port }}
        - --max-grpc-message-size={{ $.Values.maxGrpcMessageSize }}
        - --cluster={{ $.Values.cluster }}
        - --relay-server-tls-secret-name={{ $.Values.relayTlsSecret.name }}
        - --relay-server-tls-secret-namespace={{$.Values.relayTlsSecret.namespace|default $.Release.Namespace}}
        - --relay-tls-signing-secret-name={{ $.Values.signingTlsSecret.name }}
        - --relay-tls-signing-secret-namespace={{$.Values.signingTlsSecret.namespace|default $.Release.Namespace}}
        - --relay-identity-token-secret-name={{ $.Values.tokenSecret.name }}
        - --relay-identity-token-secret-namespace={{$.Values.tokenSecret.namespace|default $.Release.Namespace}}
        - --relay-identity-token-secret-key={{ $.Values.tokenSecret.key }}
        - --prometheus-url={{ $.Values.metricsBackend.prometheus.url }}
{{- if $enterpriseNetworking.env }}
        env:
{{ toYaml $enterpriseNetworking.env | indent 10 }}
{{- end }}
        imagePullPolicy: {{ $enterpriseNetworkingImage.pullPolicy }}
        name: enterprise-networking
{{- if $enterpriseNetworking.resources }}
        resources:
{{ toYaml $enterpriseNetworking.resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- if $enterpriseNetworkingImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $enterpriseNetworkingImage.pullSecret }}
      {{- end}}

{{- end }} {{/* define "enterprise-networking.deploymentSpec" */}}

{{/* Render enterprise-networking deployment template with overrides from values*/}}
{{- $enterpriseNetworkingDeploymentOverrides := dict }}
{{- if $enterpriseNetworking.deploymentOverrides }}
{{- $enterpriseNetworkingDeploymentOverrides = $enterpriseNetworking.deploymentOverrides  }}
{{- end }}
{{- include "skv2.utils.merge" (list . $enterpriseNetworkingDeploymentOverrides "enterprise-networking.deploymentSpec") }}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: enterprise-networking
  name: enterprise-networking
  namespace: {{ $.Release.Namespace }}


{{- define "enterprise-networking.serviceSpec"}}


# Service for enterprise-networking
---
# Service for enterprise-networking
{{/* Define variables in function scope */}}
{{- $enterpriseNetworking := $.Values.enterpriseNetworking}}
{{- $enterpriseNetworkingExtraServiceLabels := $enterpriseNetworking.extraServiceLabels }}
{{- $enterpriseNetworkingExtraServiceAnnotations := $enterpriseNetworking.extraServiceAnnotations }}

apiVersion: v1
kind: Service
metadata:
  labels:
    app: enterprise-networking
    {{- range $key, $value := $enterpriseNetworkingExtraServiceLabels }}
    {{ $key }}: {{ $value }}
    {{- end }}
  annotations:
    app.kubernetes.io/name: enterprise-networking
    {{- range $key, $value := $enterpriseNetworkingExtraServiceAnnotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
  name: enterprise-networking
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    app: enterprise-networking
  type: {{ $enterpriseNetworking.serviceType }}
  ports:
  - name: http
    port: {{ $enterpriseNetworking.ports.http }}
  - name: grpc
    port: {{ $enterpriseNetworking.ports.grpc }}


{{- end }} {{/* define "enterprise-networking.serviceSpec" */}}

{{/* Render enterprise-networking service template with overrides from values*/}}
{{- $enterpriseNetworkingServiceOverrides := dict }}
{{- if $enterpriseNetworking.serviceOverrides }}
{{- $enterpriseNetworkingServiceOverrides = $enterpriseNetworking.serviceOverrides  }}
{{- end }}
{{- include "skv2.utils.merge" (list . $enterpriseNetworkingServiceOverrides "enterprise-networking.serviceSpec") }}


