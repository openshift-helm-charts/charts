name: Build and Verify

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  build-and-verify:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Save check run id
        run: |
          CHECK_SUITE_URL=$(curl -s -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} | jq -r '.check_suite_url')
          CHECK_RUN_ID=$(curl -s -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.antiope-preview+json" $CHECK_SUITE_URL/check-runs | jq '.check_runs[] | select(.name=="build-and-verify") | .id ')
          mkdir -p ./pr
          echo $CHECK_RUN_ID > ./pr/build-verify-check-run-id

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Verify PR
        run: |
          gpg --version
          python3 -m venv ve1
          cd scripts && ../ve1/bin/pip3 install -r requirements.txt && cd ..
          docker pull quay.io/redhat-certification/chart-verifier:latest
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          cd scripts && ../ve1/bin/python3 setup.py install && cd ..
          ve1/bin/chart-pr-review --directory=./pr --verify-user=${{ github.event.pull_request.user.login }} --api-url=${{ github.event.pull_request._links.self.href }}

      - name: Save PR artifact
        if: always()
        run: |
          ve1/bin/pr-artifact --directory=./pr --pr-number=${{ github.event.number }} --api-url=${{ github.event.pull_request._links.self.href }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: pr
          path: pr/
