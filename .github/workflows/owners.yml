name: Metrics for owners file

on:
  push:
    branches: [ main ]

jobs:
  owners-metrics:
    name: Send Owner Metrics
    runs-on: ubuntu-22.04
    if: github.actor == 'redhat-mercury-bot'
    env:
      SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY }}
      SEGMENT_TEST_WRITE_KEY: ${{ secrets.SEGMENT_TEST_WRITE_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: ./.github/actions/setup-python

      - name: Install CI scripts
        uses: ./.github/actions/install-ci-scripts
        with:
          python-version: ${{ steps.setup-python.outputs.python-version }}

      - uses: jitterbit/get-changed-files@v1
        id: filesChangedOrModified
        with:
          format: space-delimited
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Printing changes made
        env:
          FILES_ADDED: ${{ steps.filesChangedOrModified.outputs.added }}
          FILES_MODIFIED: ${{ steps.filesChangedOrModified.outputs.modified }}
        run: |
          echo "Added:"
          echo "${FILES_ADDED}"
          echo "Modified:"
          echo "${FILES_MODIFIED}"

      - name: Quit if owners files pushed are not
        id: check_pr_content
        env:
          FIRST_ADDED_FILE: ${{ steps.filesChangedOrModified.outputs.added[0] }}
          FIRST_MODIFIED_FILE: ${{ steps.filesChangedOrModified.outputs.modified[0] }}
        run: |
          SUB="/OWNERS"
          if [ "${FIRST_ADDED_FILE}" == *"$SUB"* ] || [ "${FIRST_MODIFIED_FILE}" == *"$SUB"* ] ; then
              echo "OWNERS files have been modified or added"
              echo "collect_metrics=true" >> $GITHUB_OUTPUT
          else
              echo "OWNERS files not pushed"
              echo "collect_metrics=false" >> $GITHUB_OUTPUT
          fi

      - name: Add owner metrics
        if: ${{ steps.check_pr_content.outputs.collect_metrics == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # TODO: consolidate these two keys based on environment.
          SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY }}
          SEGMENT_WRITE_TEST_KEY: ${{ secrets.SEGMENT_TEST_WRITE_KEY }}
          ADDED: ${{ steps.filesChangedOrModified.outputs.added }}
          MODIFIED: ${{ steps.filesChangedOrModified.outputs.modified }}
        run: |
          if [ $GITHUB_REPOSITORY == "openshift-helm-charts/charts" ]; then
              WRITE_KEY="${SEGMENT_WRITE_KEY}"
              ID_PREFIX="helm-metric-pr"
              echo "Use segment production write key"
          else
              WRITE_KEY="${SEGMENT_WRITE_TEST_KEY}"
              ID_PREFIX="helm-test-metric-pr"
              echo "Use segment test write key"
          fi

          if [ "${WRITE_KEY}" != "" ]; then
              echo "add owner metric"
              ve1/bin/pushowners --write-key="${WRITE_KEY}" \
                                --metric-type="push_request" \
                                --repository="${GITHUB_REPOSITORY}" \
                                --added="${ADDED}" \
                                --modified="${MODIFIED}" \
                                --prefix="${ID_PREFIX}"
          else
              echo "Do not collect metrics, required segment write key is not set"
          fi
